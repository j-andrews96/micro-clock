

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Fri Dec 09 16:52:53 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataCOMRAM
    67  002832                     __pidataCOMRAM:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _disp_U1
    71  002832  FF                 	db	255
    72                           
    73                           ;initializer for _disp_U2
    74  002833  FF                 	db	255
    75                           
    76                           ;initializer for _dp_mask
    77  002834  FF                 	db	255
    78                           
    79                           ;initializer for _multiplex_count
    80  002835  01                 	db	1
    81                           
    82                           	psect	smallconst
    83  001000                     __psmallconst:
    84                           	opt stack 0
    85  001000  00                 	db	0
    86  001001                     _DispChars:
    87                           	opt stack 0
    88  001001  14                 	db	20
    89  001002  07                 	db	7
    90  001003  8E                 	db	142
    91  001004  4F                 	db	79
    92  001005  45                 	db	69
    93  001006  0E                 	db	14
    94  001007  1E                 	db	30
    95  001008  24                 	db	36
    96  001009  15                 	db	21
    97  00100A  17                 	db	23
    98  00100B  9F                 	db	159
    99  00100C  DF                 	db	223
   100  00100D  C5                 	db	197
   101  00100E  8F                 	db	143
   102  00100F  D6                 	db	214
   103  001010  57                 	db	87
   104  001011  47                 	db	71
   105  001012  1C                 	db	28
   106  001013  5F                 	db	95
   107  001014  26                 	db	38
   108  001015  0F                 	db	15
   109  001016  85                 	db	133
   110  001017  C7                 	db	199
   111  001018  25                 	db	37
   112  001019  3C                 	db	60
   113  00101A                     __end_of_DispChars:
   114                           	opt stack 0
   115  00101A                     _DaysInMonth:
   116                           	opt stack 0
   117  00101A  00                 	db	0
   118  00101B  1F                 	db	31
   119  00101C  1C                 	db	28
   120  00101D  1F                 	db	31
   121  00101E  1E                 	db	30
   122  00101F  1F                 	db	31
   123  001020  1E                 	db	30
   124  001021  1F                 	db	31
   125  001022  1F                 	db	31
   126  001023  1E                 	db	30
   127  001024  1F                 	db	31
   128  001025  1E                 	db	30
   129  001026  1F                 	db	31
   130  001027                     __end_of_DaysInMonth:
   131                           	opt stack 0
   132  001027                     _DaysInMonthLeap:
   133                           	opt stack 0
   134  001027  00                 	db	0
   135  001028  1F                 	db	31
   136  001029  1D                 	db	29
   137  00102A  1F                 	db	31
   138  00102B  1E                 	db	30
   139  00102C  1F                 	db	31
   140  00102D  1E                 	db	30
   141  00102E  1F                 	db	31
   142  00102F  1F                 	db	31
   143  001030  1E                 	db	30
   144  001031  1F                 	db	31
   145  001032  1E                 	db	30
   146  001033  1F                 	db	31
   147  001034                     __end_of_DaysInMonthLeap:
   148                           	opt stack 0
   149  001034                     _DispNums:
   150                           	opt stack 0
   151  001034  84                 	db	132
   152  001035  F5                 	db	245
   153  001036  4C                 	db	76
   154  001037  64                 	db	100
   155  001038  35                 	db	53
   156  001039  26                 	db	38
   157  00103A  06                 	db	6
   158  00103B  F4                 	db	244
   159  00103C  04                 	db	4
   160  00103D  34                 	db	52
   161  00103E                     __end_of_DispNums:
   162                           	opt stack 0
   163  00103E  00                 	db	0	; dummy byte at the end
   164  0000                     
   165                           	psect	nvCOMRAM
   166  000037                     __pnvCOMRAM:
   167                           	opt stack 0
   168  000037                     _disp_LEDS:
   169                           	opt stack 0
   170  000037                     	ds	1
   171  0000                     _LATAbits	set	3977
   172  0000                     _LATF	set	3982
   173  0000                     _LATHbits	set	3984
   174  0000                     _PORTBbits	set	3969
   175  0000                     _PORTC	set	3970
   176  0000                     _PORTH	set	3975
   177  0000                     _PORTJbits	set	3976
   178  0000                     _TRISA	set	3986
   179  0000                     _TRISB	set	3987
   180  0000                     _TRISC	set	3988
   181  0000                     _TRISF	set	3991
   182  0000                     _TRISH	set	3993
   183  0000                     _TRISJ	set	3994
   184  0000                     _ADCON0	set	4034
   185  0000                     _ADCON0bits	set	4034
   186  0000                     _ADCON1	set	4033
   187  0000                     _ADCON2	set	4032
   188  0000                     _ADRESH	set	4036
   189  0000                     _ADRESL	set	4035
   190  0000                     _IPR1bits	set	3999
   191  0000                     _PIE1bits	set	3997
   192  0000                     _PIR1bits	set	3998
   193  0000                     _RCONbits	set	4048
   194  0000                     _T1CON	set	4045
   195  0000                     _T1CONbits	set	4045
   196  0000                     _TMR1H	set	4047
   197  0000                     _TMR1L	set	4046
   198  0000                     _T0CON	set	4053
   199  0000                     _T0CONbits	set	4053
   200  0000                     _TMR0H	set	4055
   201  0000                     _TMR0L	set	4054
   202  0000                     _INTCON2bits	set	4081
   203  0000                     _INTCONbits	set	4082
   204                           
   205                           ; #config settings
   206  0000                     
   207                           	psect	cinit
   208  00265E                     __pcinit:
   209                           	opt stack 0
   210  00265E                     start_initialization:
   211                           	opt stack 0
   212  00265E                     __initialization:
   213                           	opt stack 0
   214                           
   215                           ; Initialize objects allocated to COMRAM (4 bytes)
   216                           ; load TBLPTR registers with __pidataCOMRAM
   217  00265E  0E32               	movlw	low __pidataCOMRAM
   218  002660  6EF6               	movwf	tblptrl,c
   219  002662  0E28               	movlw	high __pidataCOMRAM
   220  002664  6EF7               	movwf	tblptrh,c
   221  002666  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   222  002668  6EF8               	movwf	tblptru,c
   223  00266A  EE00  F031         	lfsr	0,__pdataCOMRAM
   224  00266E  EE10 F004          	lfsr	1,4
   225  002672                     copy_data0:
   226  002672  0009               	tblrd		*+
   227  002674  CFF5 FFEE          	movff	tablat,postinc0
   228  002678  50E5               	movf	postdec1,w,c
   229  00267A  50E1               	movf	fsr1l,w,c
   230  00267C  E1FA               	bnz	copy_data0
   231                           
   232                           ; Clear objects allocated to BANK0 (26 bytes)
   233  00267E  EE00  F060         	lfsr	0,__pbssBANK0
   234  002682  0E1A               	movlw	26
   235  002684                     clear_0:
   236  002684  6AEE               	clrf	postinc0,c
   237  002686  06E8               	decf	wreg,f,c
   238  002688  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to COMRAM (2 bytes)
   241  00268A  6A36               	clrf	(__pbssCOMRAM+1)& (0+255),c
   242  00268C  6A35               	clrf	__pbssCOMRAM& (0+255),c
   243  00268E                     end_of_initialization:
   244                           	opt stack 0
   245  00268E                     __end_of__initialization:
   246                           	opt stack 0
   247  00268E  9038               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   248  002690  9238               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   249  002692  0100               	movlb	0
   250  002694  EFB0  F00A         	goto	_main	;jump to C main() function
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           wreg	equ	0xFE8
   257                           postdec1	equ	0xFE5
   258                           fsr1l	equ	0xFE1
   259                           
   260                           	psect	bssCOMRAM
   261  000035                     __pbssCOMRAM:
   262                           	opt stack 0
   263  000035                     _Alarm1On:
   264                           	opt stack 0
   265  000035                     	ds	1
   266  000036                     _Alarm2On:
   267                           	opt stack 0
   268  000036                     	ds	1
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           postinc0	equ	0xFEE
   274                           wreg	equ	0xFE8
   275                           postdec1	equ	0xFE5
   276                           fsr1l	equ	0xFE1
   277                           
   278                           	psect	dataCOMRAM
   279  000031                     __pdataCOMRAM:
   280                           	opt stack 0
   281  000031                     _disp_U1:
   282                           	opt stack 0
   283  000031                     	ds	1
   284  000032                     _disp_U2:
   285                           	opt stack 0
   286  000032                     	ds	1
   287  000033                     _dp_mask:
   288                           	opt stack 0
   289  000033                     	ds	1
   290  000034                     _multiplex_count:
   291                           	opt stack 0
   292  000034                     	ds	1
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           postdec1	equ	0xFE5
   300                           fsr1l	equ	0xFE1
   301                           
   302                           	psect	bssBANK0
   303  000060                     __pbssBANK0:
   304                           	opt stack 0
   305  000060                     _Alarm2Date:
   306                           	opt stack 0
   307  000060                     	ds	5
   308  000065                     _Alarm2Time:
   309                           	opt stack 0
   310  000065                     	ds	3
   311  000068                     _ms_count0:
   312                           	opt stack 0
   313  000068                     	ds	2
   314  00006A                     _ms_count1:
   315                           	opt stack 0
   316  00006A                     	ds	2
   317  00006C                     _day_rollover:
   318                           	opt stack 0
   319  00006C                     	ds	1
   320  00006D                     _index:
   321                           	opt stack 0
   322  00006D                     	ds	1
   323  00006E                     _mode:
   324                           	opt stack 0
   325  00006E                     	ds	1
   326  00006F                     _MainDate:
   327                           	opt stack 0
   328  00006F                     	ds	5
   329  000074                     _Alarm1Time:
   330                           	opt stack 0
   331  000074                     	ds	3
   332  000077                     _MainTime:
   333                           	opt stack 0
   334  000077                     	ds	3
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           postdec1	equ	0xFE5
   342                           fsr1l	equ	0xFE1
   343                           
   344                           	psect	cstackBANK0
   345  00007A                     __pcstackBANK0:
   346                           	opt stack 0
   347  00007A                     SetDay@dd:
   348                           	opt stack 0
   349  00007A                     Num2Disp@time:
   350                           	opt stack 0
   351                           
   352                           ; 3 bytes @ 0x0
   353  00007A                     	ds	2
   354  00007C                     ??_SetDay:
   355                           
   356                           ; 1 bytes @ 0x2
   357  00007C                     	ds	1
   358  00007D                     Num2Disp@tens:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x3
   362  00007D                     	ds	1
   363  00007E                     Num2Disp@units:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x4
   367  00007E                     	ds	1
   368  00007F                     ??_SetMenu:
   369  00007F                     CurrentDisplay@index:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x5
   373  00007F                     	ds	3
   374  000082                     main@temperature:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x8
   378  000082                     	ds	1
   379  000083                     main@ADC_value:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x9
   383  000083                     	ds	1
   384                           tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           postdec1	equ	0xFE5
   391                           fsr1l	equ	0xFE1
   392                           
   393                           	psect	cstackCOMRAM
   394  000001                     __pcstackCOMRAM:
   395                           	opt stack 0
   396  000001                     i2WriteTimer1@timer1:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x0
   400  000001                     	ds	2
   401  000003                     i2WriteTimer1@timer:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x2
   405  000003                     	ds	2
   406  000005                     ??_hp_secs_count_isr:
   407                           
   408                           ; 1 bytes @ 0x4
   409  000005                     	ds	14
   410  000013                     i1WriteTimer0@timer0:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0x12
   414  000013                     	ds	2
   415  000015                     i1WriteTimer0@timer:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x14
   419  000015                     	ds	2
   420  000017                     ??_lp_isr:
   421                           
   422                           ; 1 bytes @ 0x16
   423  000017                     	ds	17
   424  000028                     ??_Delay10KTCYx:
   425  000028                     ?_ReadADC:
   426                           	opt stack 0
   427  000028                     ?___awdiv:
   428                           	opt stack 0
   429  000028                     ?___awmod:
   430                           	opt stack 0
   431  000028                     ?___lwmod:
   432                           	opt stack 0
   433  000028                     Switches@temp:
   434                           	opt stack 0
   435  000028                     WriteTimer0@timer0:
   436                           	opt stack 0
   437  000028                     WriteTimer1@timer1:
   438                           	opt stack 0
   439  000028                     ___awdiv@dividend:
   440                           	opt stack 0
   441  000028                     ___awmod@dividend:
   442                           	opt stack 0
   443  000028                     ___lwmod@dividend:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x27
   447  000028                     	ds	1
   448  000029                     Switches@temp2:
   449                           	opt stack 0
   450  000029                     Delay10KTCYx@unit:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x28
   454  000029                     	ds	1
   455  00002A                     ??_ReadADC:
   456  00002A                     Switches@temp1:
   457                           	opt stack 0
   458  00002A                     SetSecs@ts:
   459                           	opt stack 0
   460  00002A                     SetMins@tm:
   461                           	opt stack 0
   462  00002A                     SetHrs@th:
   463                           	opt stack 0
   464  00002A                     SetMonth@dm:
   465                           	opt stack 0
   466  00002A                     SetYear@dy:
   467                           	opt stack 0
   468  00002A                     WriteTimer0@timer:
   469                           	opt stack 0
   470  00002A                     WriteTimer1@timer:
   471                           	opt stack 0
   472  00002A                     ___awdiv@divisor:
   473                           	opt stack 0
   474  00002A                     ___awmod@divisor:
   475                           	opt stack 0
   476  00002A                     ___lwmod@divisor:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x29
   480  00002A                     	ds	2
   481  00002C                     ___awdiv@counter:
   482                           	opt stack 0
   483  00002C                     ___awmod@counter:
   484                           	opt stack 0
   485  00002C                     ___lwmod@counter:
   486                           	opt stack 0
   487                           
   488                           ; 1 bytes @ 0x2B
   489  00002C                     	ds	1
   490  00002D                     ___awdiv@sign:
   491                           	opt stack 0
   492  00002D                     ___awmod@sign:
   493                           	opt stack 0
   494  00002D                     CalcLeapYear@year:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x2C
   498  00002D                     	ds	1
   499  00002E                     ___awdiv@quotient:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x2D
   503  00002E                     	ds	1
   504  00002F                     ??_CalcLeapYear:
   505                           
   506                           ; 1 bytes @ 0x2E
   507  00002F                     	ds	1
   508  000030                     ??_Num2Disp:
   509                           
   510                           ; 1 bytes @ 0x2F
   511  000030                     	ds	1
   512  000031                     tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1l	equ	0xFE1
   520                           
   521                           ; 1 bytes @ 0x30
   522 ;;
   523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   524 ;;
   525 ;; *************** function _main *****************
   526 ;; Defined at:
   527 ;;		line 137 in file "mini-project-clock.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  ADC_value       1    9[BANK0 ] unsigned char 
   532 ;;  temperature     1    8[BANK0 ] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels required when called:    9
   548 ;; This function calls:
   549 ;;		_BootTest
   550 ;;		_BusyADC
   551 ;;		_CalcDate
   552 ;;		_ConfigureIO
   553 ;;		_ConvertADC
   554 ;;		_CurrentDisplay
   555 ;;		_DegreesFlash
   556 ;;		_Delay10KTCYx
   557 ;;		_Num2Disp
   558 ;;		_PB1pressed
   559 ;;		_ReadADC
   560 ;;		_SetMenu
   561 ;;		_StartADC
   562 ;;		_StartTimer0
   563 ;;		_StartTimer1
   564 ;;		_Switches
   565 ;;		_WriteTimer0
   566 ;;		_WriteTimer1
   567 ;;		_enable_PB1_interrupt
   568 ;;		_enable_interrupts_all
   569 ;; This function is called by:
   570 ;;		Startup code after reset
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text0
   575  001560                     __ptext0:
   576                           	opt stack 0
   577  001560                     _main:
   578                           	opt stack 22
   579                           
   580                           ;mini-project-clock.c: 139: char ADC_value;
   581                           ;mini-project-clock.c: 140: char temperature;
   582                           ;mini-project-clock.c: 142: MainTime.hrs = 0;
   583                           
   584                           ; BSR set to: 0
   585                           ;incstack = 0
   586  001560  0E00               	movlw	0
   587  001562  0100               	movlb	0	; () banked
   588  001564  6F77               	movwf	_MainTime& (0+255),b	;volatile
   589                           
   590                           ;mini-project-clock.c: 143: MainTime.mins = 0;
   591  001566  0E00               	movlw	0
   592  001568  0100               	movlb	0	; () banked
   593  00156A  6F78               	movwf	(_MainTime+1)& (0+255),b	;volatile
   594                           
   595                           ;mini-project-clock.c: 144: MainTime.secs = 0;
   596  00156C  0E00               	movlw	0
   597  00156E  0100               	movlb	0	; () banked
   598  001570  6F79               	movwf	(_MainTime+2)& (0+255),b	;volatile
   599                           
   600                           ;mini-project-clock.c: 146: MainDate.day = 1;
   601  001572  0E01               	movlw	1
   602  001574  0100               	movlb	0	; () banked
   603  001576  6F6F               	movwf	_MainDate& (0+255),b	;volatile
   604                           
   605                           ;mini-project-clock.c: 147: MainDate.month = 1;
   606  001578  0E01               	movlw	1
   607  00157A  0100               	movlb	0	; () banked
   608  00157C  6F70               	movwf	(_MainDate+1)& (0+255),b	;volatile
   609                           
   610                           ;mini-project-clock.c: 148: MainDate.year_short = 16;
   611  00157E  0E10               	movlw	16
   612  001580  0100               	movlb	0	; () banked
   613  001582  6F71               	movwf	(_MainDate+2)& (0+255),b	;volatile
   614                           
   615                           ;mini-project-clock.c: 149: MainDate.year_long = 2016;
   616  001584  0E07               	movlw	7
   617  001586  0100               	movlb	0	; () banked
   618  001588  6F73               	movwf	(_MainDate+4)& (0+255),b	;volatile
   619  00158A  0EE0               	movlw	224
   620  00158C  6F72               	movwf	(_MainDate+3)& (0+255),b	;volatile
   621                           
   622                           ;mini-project-clock.c: 151: Alarm1Time.hrs = 0;
   623  00158E  0E00               	movlw	0
   624  001590  0100               	movlb	0	; () banked
   625  001592  6F74               	movwf	_Alarm1Time& (0+255),b	;volatile
   626                           
   627                           ;mini-project-clock.c: 152: Alarm1Time.mins = 0;
   628  001594  0E00               	movlw	0
   629  001596  0100               	movlb	0	; () banked
   630  001598  6F75               	movwf	(_Alarm1Time+1)& (0+255),b	;volatile
   631                           
   632                           ;mini-project-clock.c: 153: Alarm1Time.secs = 0;
   633  00159A  0E00               	movlw	0
   634  00159C  0100               	movlb	0	; () banked
   635  00159E  6F76               	movwf	(_Alarm1Time+2)& (0+255),b	;volatile
   636                           
   637                           ;mini-project-clock.c: 156: Alarm2Time.hrs = 0;
   638  0015A0  0E00               	movlw	0
   639  0015A2  0100               	movlb	0	; () banked
   640  0015A4  6F65               	movwf	_Alarm2Time& (0+255),b	;volatile
   641                           
   642                           ;mini-project-clock.c: 157: Alarm2Time.mins = 0;
   643  0015A6  0E00               	movlw	0
   644  0015A8  0100               	movlb	0	; () banked
   645  0015AA  6F66               	movwf	(_Alarm2Time+1)& (0+255),b	;volatile
   646                           
   647                           ;mini-project-clock.c: 158: Alarm2Time.secs = 0;
   648  0015AC  0E00               	movlw	0
   649  0015AE  0100               	movlb	0	; () banked
   650  0015B0  6F67               	movwf	(_Alarm2Time+2)& (0+255),b	;volatile
   651                           
   652                           ;mini-project-clock.c: 161: Alarm2Date.day = 0;
   653  0015B2  0E00               	movlw	0
   654  0015B4  0100               	movlb	0	; () banked
   655  0015B6  6F60               	movwf	_Alarm2Date& (0+255),b	;volatile
   656                           
   657                           ;mini-project-clock.c: 162: Alarm2Date.month = 0;
   658  0015B8  0E00               	movlw	0
   659  0015BA  0100               	movlb	0	; () banked
   660  0015BC  6F61               	movwf	(_Alarm2Date+1)& (0+255),b	;volatile
   661                           
   662                           ;mini-project-clock.c: 163: Alarm2Date.year_long = 0;
   663  0015BE  0E00               	movlw	0
   664  0015C0  0100               	movlb	0	; () banked
   665  0015C2  6F64               	movwf	(_Alarm2Date+4)& (0+255),b	;volatile
   666  0015C4  0E00               	movlw	0
   667  0015C6  6F63               	movwf	(_Alarm2Date+3)& (0+255),b	;volatile
   668                           
   669                           ;mini-project-clock.c: 164: Alarm2Date.year_short = 0;
   670  0015C8  0E00               	movlw	0
   671  0015CA  0100               	movlb	0	; () banked
   672  0015CC  6F62               	movwf	(_Alarm2Date+2)& (0+255),b	;volatile
   673                           
   674                           ; BSR set to: 0
   675                           ;mini-project-clock.c: 166: ConfigureIO();
   676  0015CE  ECA1  F013         	call	_ConfigureIO	;wreg free
   677                           
   678                           ;mini-project-clock.c: 168: StartADC();
   679  0015D2  ECFD  F013         	call	_StartADC	;wreg free
   680                           
   681                           ;mini-project-clock.c: 180: StartTimer0();
   682  0015D6  ECB8  F013         	call	_StartTimer0	;wreg free
   683                           
   684                           ;mini-project-clock.c: 181: WriteTimer0(63036);
   685  0015DA  0EF6               	movlw	246
   686  0015DC  6E29               	movwf	WriteTimer0@timer0+1,c
   687  0015DE  0E3C               	movlw	60
   688  0015E0  6E28               	movwf	WriteTimer0@timer0,c
   689  0015E2  ECE2  F013         	call	_WriteTimer0	;wreg free
   690                           
   691                           ;mini-project-clock.c: 183: enable_PB1_interrupt();
   692  0015E6  EC15  F014         	call	_enable_PB1_interrupt	;wreg free
   693                           
   694                           ;mini-project-clock.c: 185: enable_interrupts_all();
   695  0015EA  EC11  F014         	call	_enable_interrupts_all	;wreg free
   696                           
   697                           ;mini-project-clock.c: 187: BootTest();
   698  0015EE  EC91  F013         	call	_BootTest	;wreg free
   699                           
   700                           ;mini-project-clock.c: 189: StartTimer1();
   701  0015F2  ECAD  F013         	call	_StartTimer1	;wreg free
   702                           
   703                           ;mini-project-clock.c: 190: WriteTimer1(32768);
   704  0015F6  0E80               	movlw	128
   705  0015F8  6E29               	movwf	WriteTimer1@timer1+1,c
   706  0015FA  0E00               	movlw	0
   707  0015FC  6E28               	movwf	WriteTimer1@timer1,c
   708  0015FE  ECD9  F013         	call	_WriteTimer1	;wreg free
   709                           
   710                           ;mini-project-clock.c: 192: ms_count0 = 0;
   711  001602  0E00               	movlw	0
   712  001604  0100               	movlb	0	; () banked
   713  001606  6F69               	movwf	(_ms_count0+1)& (0+255),b	;volatile
   714  001608  0E00               	movlw	0
   715  00160A  6F68               	movwf	_ms_count0& (0+255),b	;volatile
   716  00160C                     l3621:
   717                           
   718                           ;mini-project-clock.c: 196: if (mode == 0) {
   719  00160C  0100               	movlb	0	; () banked
   720  00160E  516E               	movf	_mode& (0+255),w,b	;volatile
   721  001610  A4D8               	btfss	status,2,c
   722  001612  D047               	goto	l3657
   723                           
   724                           ; BSR set to: 0
   725                           ;mini-project-clock.c: 197: if (day_rollover == 1) {
   726  001614  0100               	movlb	0	; () banked
   727  001616  056C               	decf	_day_rollover& (0+255),w,b	;volatile
   728  001618  B4D8               	btfsc	status,2,c
   729                           
   730                           ; BSR set to: 0
   731                           ;mini-project-clock.c: 198: CalcDate();
   732  00161A  EC19  F00E         	call	_CalcDate	;wreg free
   733                           
   734                           ;mini-project-clock.c: 199: }
   735                           ;mini-project-clock.c: 201: if (ms_count0 >= 3000) {
   736  00161E  0100               	movlb	0	; () banked
   737  001620  BF69               	btfsc	(_ms_count0+1)& (0+255),7,b	;volatile
   738  001622  D017               	goto	l3637
   739  001624  0EB8               	movlw	184
   740  001626  0100               	movlb	0	; () banked
   741  001628  5D68               	subwf	_ms_count0& (0+255),w,b	;volatile
   742  00162A  0E0B               	movlw	11
   743  00162C  0100               	movlb	0	; () banked
   744  00162E  5969               	subwfb	(_ms_count0+1)& (0+255),w,b	;volatile
   745  001630  A0D8               	btfss	status,0,c
   746  001632  D00F               	goto	l3637
   747                           
   748                           ; BSR set to: 0
   749                           ;mini-project-clock.c: 202: ms_count0 = 0;
   750  001634  0E00               	movlw	0
   751  001636  0100               	movlb	0	; () banked
   752  001638  6F69               	movwf	(_ms_count0+1)& (0+255),b	;volatile
   753  00163A  0E00               	movlw	0
   754  00163C  6F68               	movwf	_ms_count0& (0+255),b	;volatile
   755                           
   756                           ; BSR set to: 0
   757                           ;mini-project-clock.c: 203: if (index < 5) {
   758  00163E  0E05               	movlw	5
   759  001640  0100               	movlb	0	; () banked
   760  001642  616D               	cpfslt	_index& (0+255),b
   761  001644  D003               	goto	l3635
   762                           
   763                           ; BSR set to: 0
   764                           ;mini-project-clock.c: 204: index++;
   765  001646  0100               	movlb	0	; () banked
   766  001648  2B6D               	incf	_index& (0+255),f,b
   767                           
   768                           ;mini-project-clock.c: 205: } else {
   769  00164A  D003               	goto	l3637
   770  00164C                     l3635:
   771                           
   772                           ; BSR set to: 0
   773                           ;mini-project-clock.c: 206: index = 0;
   774  00164C  0E00               	movlw	0
   775  00164E  0100               	movlb	0	; () banked
   776  001650  6F6D               	movwf	_index& (0+255),b
   777  001652                     l3637:
   778                           
   779                           ; BSR set to: 0
   780                           ;mini-project-clock.c: 207: }
   781                           ;mini-project-clock.c: 208: }
   782                           ;mini-project-clock.c: 210: if (PB1pressed() == 1) {
   783  001652  EC66  F013         	call	_PB1pressed	;wreg free
   784  001656  06E8               	decf	wreg,f,c
   785  001658  A4D8               	btfss	status,2,c
   786  00165A  D017               	goto	l3651
   787                           
   788                           ;mini-project-clock.c: 211: Delay10KTCYx(25);
   789  00165C  0E19               	movlw	25
   790  00165E  ECC3  F013         	call	_Delay10KTCYx
   791                           
   792                           ;mini-project-clock.c: 212: if (PB1pressed() == 1) {
   793  001662  EC66  F013         	call	_PB1pressed	;wreg free
   794  001666  06E8               	decf	wreg,f,c
   795  001668  A4D8               	btfss	status,2,c
   796  00166A  D00F               	goto	l3651
   797                           
   798                           ;mini-project-clock.c: 213: ms_count0 = 0;
   799  00166C  0E00               	movlw	0
   800  00166E  0100               	movlb	0	; () banked
   801  001670  6F69               	movwf	(_ms_count0+1)& (0+255),b	;volatile
   802  001672  0E00               	movlw	0
   803  001674  6F68               	movwf	_ms_count0& (0+255),b	;volatile
   804                           
   805                           ; BSR set to: 0
   806                           ;mini-project-clock.c: 214: if (index > 5) {
   807  001676  0E05               	movlw	5
   808  001678  0100               	movlb	0	; () banked
   809  00167A  656D               	cpfsgt	_index& (0+255),b
   810  00167C  D003               	goto	l3649
   811                           
   812                           ; BSR set to: 0
   813                           ;mini-project-clock.c: 215: index++;
   814  00167E  0100               	movlb	0	; () banked
   815  001680  2B6D               	incf	_index& (0+255),f,b
   816                           
   817                           ;mini-project-clock.c: 216: } else {
   818  001682  D003               	goto	l3651
   819  001684                     l3649:
   820                           
   821                           ; BSR set to: 0
   822                           ;mini-project-clock.c: 217: index = 0;
   823  001684  0E00               	movlw	0
   824  001686  0100               	movlb	0	; () banked
   825  001688  6F6D               	movwf	_index& (0+255),b
   826  00168A                     l3651:
   827                           
   828                           ;mini-project-clock.c: 218: }
   829                           ;mini-project-clock.c: 219: }
   830                           ;mini-project-clock.c: 220: }
   831                           ;mini-project-clock.c: 222: CurrentDisplay(index);
   832  00168A  0100               	movlb	0	; () banked
   833  00168C  516D               	movf	_index& (0+255),w,b
   834  00168E  EC04  F00D         	call	_CurrentDisplay
   835                           
   836                           ;mini-project-clock.c: 224: if (Switches() != 0x00) {
   837  001692  EC80  F013         	call	_Switches	;wreg free
   838  001696  0900               	iorlw	0
   839  001698  B4D8               	btfsc	status,2,c
   840  00169A  D7B8               	goto	l3621
   841                           
   842                           ;mini-project-clock.c: 225: SetMenu();
   843  00169C  EC20  F008         	call	_SetMenu	;wreg free
   844                           
   845                           ;mini-project-clock.c: 226: }
   846                           ;mini-project-clock.c: 228: }
   847  0016A0  D7B5               	goto	l3621
   848  0016A2                     l3657:
   849                           
   850                           ;mini-project-clock.c: 229: else if(mode == 1) {
   851  0016A2  0100               	movlb	0	; () banked
   852  0016A4  056E               	decf	_mode& (0+255),w,b	;volatile
   853  0016A6  A4D8               	btfss	status,2,c
   854  0016A8  D7B1               	goto	l3621
   855                           
   856                           ; BSR set to: 0
   857                           ;mini-project-clock.c: 230: DegreesFlash();
   858  0016AA  EC1D  F012         	call	_DegreesFlash	;wreg free
   859  0016AE  D041               	goto	l3685
   860  0016B0                     l3663:
   861                           
   862                           ; BSR set to: 0
   863                           ;mini-project-clock.c: 233: if (day_rollover == 1) {
   864  0016B0  0100               	movlb	0	; () banked
   865  0016B2  056C               	decf	_day_rollover& (0+255),w,b	;volatile
   866  0016B4  B4D8               	btfsc	status,2,c
   867                           
   868                           ; BSR set to: 0
   869                           ;mini-project-clock.c: 234: CalcDate();
   870  0016B6  EC19  F00E         	call	_CalcDate	;wreg free
   871                           
   872                           ;mini-project-clock.c: 235: }
   873                           ;mini-project-clock.c: 237: ConvertADC();
   874  0016BA  EC1B  F014         	call	_ConvertADC	;wreg free
   875                           
   876                           ;mini-project-clock.c: 238: if(ms_count1 >= 500) {
   877  0016BE  0100               	movlb	0	; () banked
   878  0016C0  BF6B               	btfsc	(_ms_count1+1)& (0+255),7,b	;volatile
   879  0016C2  D7F6               	goto	l3663
   880  0016C4  0EF4               	movlw	244
   881  0016C6  0100               	movlb	0	; () banked
   882  0016C8  5D6A               	subwf	_ms_count1& (0+255),w,b	;volatile
   883  0016CA  0E01               	movlw	1
   884  0016CC  0100               	movlb	0	; () banked
   885  0016CE  596B               	subwfb	(_ms_count1+1)& (0+255),w,b	;volatile
   886  0016D0  A0D8               	btfss	status,0,c
   887  0016D2  D7EE               	goto	l3663
   888                           
   889                           ; BSR set to: 0
   890                           ;mini-project-clock.c: 239: if(BusyADC() == 0) {
   891  0016D4  EC0B  F014         	call	_BusyADC	;wreg free
   892  0016D8  0900               	iorlw	0
   893  0016DA  A4D8               	btfss	status,2,c
   894  0016DC  D02A               	goto	l3685
   895                           
   896                           ;mini-project-clock.c: 240: ADC_value = (char) ReadADC();
   897  0016DE  EC04  F014         	call	_ReadADC	;wreg free
   898  0016E2  5028               	movf	?_ReadADC,w,c
   899  0016E4  0100               	movlb	0	; () banked
   900  0016E6  6F83               	movwf	main@ADC_value& (0+255),b
   901                           
   902                           ; BSR set to: 0
   903                           ;mini-project-clock.c: 241: if(ADC_value < 139) {
   904  0016E8  0E8B               	movlw	139
   905  0016EA  0100               	movlb	0	; () banked
   906  0016EC  6183               	cpfslt	main@ADC_value& (0+255),b
   907  0016EE  D00C               	goto	l3681
   908                           
   909                           ; BSR set to: 0
   910                           ;mini-project-clock.c: 242: disp_U2 = 0x7F;
   911  0016F0  0E7F               	movlw	127
   912  0016F2  6E32               	movwf	_disp_U2,c	;volatile
   913                           
   914                           ; BSR set to: 0
   915                           ;mini-project-clock.c: 243: disp_U1 = DispNums[0];
   916  0016F4  0E34               	movlw	low _DispNums
   917  0016F6  6EF6               	movwf	tblptrl,c
   918  0016F8                     	if	1	;There is more than 1 active tblptr byte
   919  0016F8  0E10               	movlw	high _DispNums
   920  0016FA  6EF7               	movwf	tblptrh,c
   921  0016FC                     	endif
   922  0016FC                     	if	1	;There are 3 active tblptr bytes
   923  0016FC  0E00               	movlw	low (_DispNums shr (0+16))
   924  0016FE  6EF8               	movwf	tblptru,c
   925  001700                     	endif
   926  001700  0008               	tblrd		*
   927  001702  CFF5 F031          	movff	tablat,_disp_U1	;volatile
   928                           
   929                           ;mini-project-clock.c: 244: }
   930  001706  D015               	goto	l3685
   931  001708                     l3681:
   932                           
   933                           ; BSR set to: 0
   934                           ;mini-project-clock.c: 245: else {
   935                           ;mini-project-clock.c: 246: temperature = (2 * ADC_value) - 278;
   936  001708  0100               	movlb	0	; () banked
   937  00170A  5183               	movf	main@ADC_value& (0+255),w,b
   938  00170C  0D02               	mullw	2
   939  00170E  50F3               	movf	prodl,w,c
   940  001710  0FEA               	addlw	234
   941  001712  0100               	movlb	0	; () banked
   942  001714  6F82               	movwf	main@temperature& (0+255),b
   943                           
   944                           ; BSR set to: 0
   945                           ;mini-project-clock.c: 247: Num2Disp(&temperature);
   946  001716  0E82               	movlw	low main@temperature
   947  001718  0100               	movlb	0	; () banked
   948  00171A  6F7A               	movwf	Num2Disp@time& (0+255),b
   949  00171C  0E00               	movlw	high main@temperature
   950  00171E  0100               	movlb	0	; () banked
   951  001720  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
   952  001722  0100               	movlb	0	; () banked
   953  001724  517A               	movf	Num2Disp@time& (0+255),w,b
   954  001726  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
   955  001728  A4D8               	btfss	status,2,c
   956  00172A  0E20               	movlw	32
   957  00172C  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
   958  00172E  EC97  F00D         	call	_Num2Disp	;wreg free
   959  001732                     l3685:
   960                           
   961                           ;mini-project-clock.c: 248: }
   962                           ;mini-project-clock.c: 249: }
   963                           ;mini-project-clock.c: 250: ms_count1 = 0;
   964  001732  0E00               	movlw	0
   965  001734  0100               	movlb	0	; () banked
   966  001736  6F6B               	movwf	(_ms_count1+1)& (0+255),b	;volatile
   967  001738  0E00               	movlw	0
   968  00173A  6F6A               	movwf	_ms_count1& (0+255),b	;volatile
   969                           
   970                           ; BSR set to: 0
   971                           
   972                           ; BSR set to: 0
   973  00173C  D7B9               	goto	l3663
   974  00173E                     __end_of_main:
   975                           	opt stack 0
   976                           tblptru	equ	0xFF8
   977                           tblptrh	equ	0xFF7
   978                           tblptrl	equ	0xFF6
   979                           tablat	equ	0xFF5
   980                           prodl	equ	0xFF3
   981                           postinc0	equ	0xFEE
   982                           wreg	equ	0xFE8
   983                           postdec1	equ	0xFE5
   984                           fsr1l	equ	0xFE1
   985                           status	equ	0xFD8
   986                           
   987 ;; *************** function _enable_interrupts_all *****************
   988 ;; Defined at:
   989 ;;		line 345 in file "mini-project-clock.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		None
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;Total ram usage:        0 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    5
  1010 ;; This function calls:
  1011 ;;		Nothing
  1012 ;; This function is called by:
  1013 ;;		_main
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text1
  1018  002822                     __ptext1:
  1019                           	opt stack 0
  1020  002822                     _enable_interrupts_all:
  1021                           	opt stack 25
  1022                           
  1023                           ;mini-project-clock.c: 346: RCONbits.IPEN = 1;
  1024                           
  1025                           ; BSR set to: 0
  1026                           ;incstack = 0
  1027  002822  8ED0               	bsf	4048,7,c	;volatile
  1028                           
  1029                           ;mini-project-clock.c: 347: INTCONbits.PEIE = 1;
  1030  002824  8CF2               	bsf	intcon,6,c	;volatile
  1031                           
  1032                           ;mini-project-clock.c: 348: INTCONbits.GIE = 1;
  1033  002826  8EF2               	bsf	intcon,7,c	;volatile
  1034  002828  0012               	return		;funcret
  1035  00282A                     __end_of_enable_interrupts_all:
  1036                           	opt stack 0
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           prodl	equ	0xFF3
  1042                           intcon	equ	0xFF2
  1043                           postinc0	equ	0xFEE
  1044                           wreg	equ	0xFE8
  1045                           postdec1	equ	0xFE5
  1046                           fsr1l	equ	0xFE1
  1047                           status	equ	0xFD8
  1048                           
  1049 ;; *************** function _enable_PB1_interrupt *****************
  1050 ;; Defined at:
  1051 ;;		line 356 in file "mini-project-clock.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		None
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;Total ram usage:        0 bytes
  1070 ;; Hardware stack levels used:    1
  1071 ;; Hardware stack levels required when called:    5
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text2
  1080  00282A                     __ptext2:
  1081                           	opt stack 0
  1082  00282A                     _enable_PB1_interrupt:
  1083                           	opt stack 25
  1084                           
  1085                           ;mini-project-clock.c: 357: INTCON2bits.INTEDG0 = 0;
  1086                           
  1087                           ;incstack = 0
  1088  00282A  9CF1               	bcf	intcon2,6,c	;volatile
  1089                           
  1090                           ;mini-project-clock.c: 358: INTCONbits.INT0IF = 0;
  1091  00282C  92F2               	bcf	intcon,1,c	;volatile
  1092                           
  1093                           ;mini-project-clock.c: 359: INTCONbits.INT0IE = 1;
  1094  00282E  88F2               	bsf	intcon,4,c	;volatile
  1095  002830  0012               	return		;funcret
  1096  002832                     __end_of_enable_PB1_interrupt:
  1097                           	opt stack 0
  1098                           tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           tblptrl	equ	0xFF6
  1101                           tablat	equ	0xFF5
  1102                           prodl	equ	0xFF3
  1103                           intcon	equ	0xFF2
  1104                           intcon2	equ	0xFF1
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           postdec1	equ	0xFE5
  1108                           fsr1l	equ	0xFE1
  1109                           status	equ	0xFD8
  1110                           
  1111 ;; *************** function _WriteTimer1 *****************
  1112 ;; Defined at:
  1113 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\Timers\t1write.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  timer1          2   39[COMRAM] unsigned int 
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;  timer           2   41[COMRAM] struct Timers
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		None
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;Total ram usage:        4 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    5
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           	psect	text3
  1142  0027B2                     __ptext3:
  1143                           	opt stack 0
  1144  0027B2                     _WriteTimer1:
  1145                           	opt stack 25
  1146                           
  1147                           ;incstack = 0
  1148  0027B2  C028  F02A         	movff	WriteTimer1@timer1,WriteTimer1@timer
  1149  0027B6  C029  F02B         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  1150  0027BA  C02B  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  1151  0027BE  C02A  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  1152  0027C2  0012               	return		;funcret
  1153  0027C4                     __end_of_WriteTimer1:
  1154                           	opt stack 0
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           prodl	equ	0xFF3
  1160                           intcon	equ	0xFF2
  1161                           intcon2	equ	0xFF1
  1162                           postinc0	equ	0xFEE
  1163                           wreg	equ	0xFE8
  1164                           postdec1	equ	0xFE5
  1165                           fsr1l	equ	0xFE1
  1166                           status	equ	0xFD8
  1167                           
  1168 ;; *************** function _WriteTimer0 *****************
  1169 ;; Defined at:
  1170 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\Timers\t0write.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  timer0          2   39[COMRAM] unsigned int 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  timer           2   41[COMRAM] struct Timers
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		None
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;Total ram usage:        4 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    5
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_main
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text4
  1199  0027C4                     __ptext4:
  1200                           	opt stack 0
  1201  0027C4                     _WriteTimer0:
  1202                           	opt stack 25
  1203                           
  1204                           ;incstack = 0
  1205  0027C4  C028  F02A         	movff	WriteTimer0@timer0,WriteTimer0@timer
  1206  0027C8  C029  F02B         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  1207  0027CC  C02B  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  1208  0027D0  C02A  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  1209  0027D4  0012               	return		;funcret
  1210  0027D6                     __end_of_WriteTimer0:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           prodl	equ	0xFF3
  1217                           intcon	equ	0xFF2
  1218                           intcon2	equ	0xFF1
  1219                           postinc0	equ	0xFEE
  1220                           wreg	equ	0xFE8
  1221                           postdec1	equ	0xFE5
  1222                           fsr1l	equ	0xFE1
  1223                           status	equ	0xFD8
  1224                           
  1225 ;; *************** function _StartTimer1 *****************
  1226 ;; Defined at:
  1227 ;;		line 372 in file "mini-project-clock.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    5
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_main
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text5
  1256  00275A                     __ptext5:
  1257                           	opt stack 0
  1258  00275A                     _StartTimer1:
  1259                           	opt stack 25
  1260                           
  1261                           ;mini-project-clock.c: 373: T1CON = 0x8A;
  1262                           
  1263                           ;incstack = 0
  1264  00275A  0E8A               	movlw	138
  1265  00275C  6ECD               	movwf	4045,c	;volatile
  1266                           
  1267                           ;mini-project-clock.c: 374: TMR1H = 0;
  1268  00275E  0E00               	movlw	0
  1269  002760  6ECF               	movwf	4047,c	;volatile
  1270                           
  1271                           ;mini-project-clock.c: 375: TMR1L = 0;
  1272  002762  0E00               	movlw	0
  1273  002764  6ECE               	movwf	4046,c	;volatile
  1274                           
  1275                           ;mini-project-clock.c: 376: PIR1bits.TMR1IF = 0;
  1276  002766  909E               	bcf	3998,0,c	;volatile
  1277                           
  1278                           ;mini-project-clock.c: 377: PIE1bits.TMR1IE = 1;
  1279  002768  809D               	bsf	3997,0,c	;volatile
  1280                           
  1281                           ;mini-project-clock.c: 378: IPR1bits.TMR1IP = 1;
  1282  00276A  809F               	bsf	3999,0,c	;volatile
  1283                           
  1284                           ;mini-project-clock.c: 379: T1CONbits.TMR1ON = 1;
  1285  00276C  80CD               	bsf	4045,0,c	;volatile
  1286  00276E  0012               	return		;funcret
  1287  002770                     __end_of_StartTimer1:
  1288                           	opt stack 0
  1289                           tblptru	equ	0xFF8
  1290                           tblptrh	equ	0xFF7
  1291                           tblptrl	equ	0xFF6
  1292                           tablat	equ	0xFF5
  1293                           prodl	equ	0xFF3
  1294                           intcon	equ	0xFF2
  1295                           intcon2	equ	0xFF1
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           postdec1	equ	0xFE5
  1299                           fsr1l	equ	0xFE1
  1300                           status	equ	0xFD8
  1301                           
  1302 ;; *************** function _StartTimer0 *****************
  1303 ;; Defined at:
  1304 ;;		line 362 in file "mini-project-clock.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    5
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text6
  1333  002770                     __ptext6:
  1334                           	opt stack 0
  1335  002770                     _StartTimer0:
  1336                           	opt stack 25
  1337                           
  1338                           ;mini-project-clock.c: 363: T0CON = 0x08;
  1339                           
  1340                           ;incstack = 0
  1341  002770  0E08               	movlw	8
  1342  002772  6ED5               	movwf	4053,c	;volatile
  1343                           
  1344                           ;mini-project-clock.c: 364: TMR0H = 0;
  1345  002774  0E00               	movlw	0
  1346  002776  6ED7               	movwf	4055,c	;volatile
  1347                           
  1348                           ;mini-project-clock.c: 365: TMR0L = 0;
  1349  002778  0E00               	movlw	0
  1350  00277A  6ED6               	movwf	4054,c	;volatile
  1351                           
  1352                           ;mini-project-clock.c: 366: INTCONbits.TMR0IF = 0;
  1353  00277C  94F2               	bcf	intcon,2,c	;volatile
  1354                           
  1355                           ;mini-project-clock.c: 367: INTCONbits.TMR0IE = 1;
  1356  00277E  8AF2               	bsf	intcon,5,c	;volatile
  1357                           
  1358                           ;mini-project-clock.c: 368: INTCON2bits.TMR0IP = 0;
  1359  002780  94F1               	bcf	intcon2,2,c	;volatile
  1360                           
  1361                           ;mini-project-clock.c: 369: T0CONbits.TMR0ON = 1;
  1362  002782  8ED5               	bsf	4053,7,c	;volatile
  1363  002784  0012               	return		;funcret
  1364  002786                     __end_of_StartTimer0:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           prodl	equ	0xFF3
  1371                           intcon	equ	0xFF2
  1372                           intcon2	equ	0xFF1
  1373                           postinc0	equ	0xFEE
  1374                           wreg	equ	0xFE8
  1375                           postdec1	equ	0xFE5
  1376                           fsr1l	equ	0xFE1
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function _StartADC *****************
  1380 ;; Defined at:
  1381 ;;		line 382 in file "mini-project-clock.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;Total ram usage:        0 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    5
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text7
  1410  0027FA                     __ptext7:
  1411                           	opt stack 0
  1412  0027FA                     _StartADC:
  1413                           	opt stack 25
  1414                           
  1415                           ;mini-project-clock.c: 383: ADCON0 = 0x05;
  1416                           
  1417                           ;incstack = 0
  1418  0027FA  0E05               	movlw	5
  1419  0027FC  6EC2               	movwf	4034,c	;volatile
  1420                           
  1421                           ;mini-project-clock.c: 384: ADCON1 = 0x0D;
  1422  0027FE  0E0D               	movlw	13
  1423  002800  6EC1               	movwf	4033,c	;volatile
  1424                           
  1425                           ;mini-project-clock.c: 385: ADCON2 = 0x85;
  1426  002802  0E85               	movlw	133
  1427  002804  6EC0               	movwf	4032,c	;volatile
  1428  002806  0012               	return		;funcret
  1429  002808                     __end_of_StartADC:
  1430                           	opt stack 0
  1431                           tblptru	equ	0xFF8
  1432                           tblptrh	equ	0xFF7
  1433                           tblptrl	equ	0xFF6
  1434                           tablat	equ	0xFF5
  1435                           prodl	equ	0xFF3
  1436                           intcon	equ	0xFF2
  1437                           intcon2	equ	0xFF1
  1438                           postinc0	equ	0xFEE
  1439                           wreg	equ	0xFE8
  1440                           postdec1	equ	0xFE5
  1441                           fsr1l	equ	0xFE1
  1442                           status	equ	0xFD8
  1443                           
  1444 ;; *************** function _SetMenu *****************
  1445 ;; Defined at:
  1446 ;;		line 416 in file "mini-project-clock.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;		None
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;		None
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  1    wreg      void 
  1453 ;; Registers used:
  1454 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1462 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;Total ram usage:        3 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    8
  1467 ;; This function calls:
  1468 ;;		_Alarm1Flash
  1469 ;;		_DayFlash
  1470 ;;		_HrsFlash
  1471 ;;		_MinsFlash
  1472 ;;		_MonthFlash
  1473 ;;		_Num2Disp
  1474 ;;		_SecsFlash
  1475 ;;		_SetAlarm1
  1476 ;;		_SetDay
  1477 ;;		_SetHrs
  1478 ;;		_SetMins
  1479 ;;		_SetMonth
  1480 ;;		_SetSecs
  1481 ;;		_SetYear
  1482 ;;		_Switches
  1483 ;;		_YearFlash
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text8
  1490  001040                     __ptext8:
  1491                           	opt stack 0
  1492  001040                     _SetMenu:
  1493                           	opt stack 22
  1494                           
  1495                           ;mini-project-clock.c: 417: while (Switches() != 0x00) {
  1496                           
  1497                           ;incstack = 0
  1498  001040  D149               	goto	l3597
  1499  001042                     l268:
  1500                           
  1501                           ;mini-project-clock.c: 420: PIE1bits.TMR1IE = 0;
  1502  001042  909D               	bcf	3997,0,c	;volatile
  1503                           
  1504                           ;mini-project-clock.c: 421: SecsFlash();
  1505  001044  EC00  F011         	call	_SecsFlash	;wreg free
  1506                           
  1507                           ;mini-project-clock.c: 422: Num2Disp(&MainTime.secs);
  1508  001048  0E79               	movlw	low (_MainTime+2)
  1509  00104A  0100               	movlb	0	; () banked
  1510  00104C  6F7A               	movwf	Num2Disp@time& (0+255),b
  1511  00104E  0E00               	movlw	high (_MainTime+2)
  1512  001050  0100               	movlb	0	; () banked
  1513  001052  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1514  001054  0100               	movlb	0	; () banked
  1515  001056  517A               	movf	Num2Disp@time& (0+255),w,b
  1516  001058  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1517  00105A  A4D8               	btfss	status,2,c
  1518  00105C  0E20               	movlw	32
  1519  00105E  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1520  001060  EC97  F00D         	call	_Num2Disp	;wreg free
  1521                           
  1522                           ;mini-project-clock.c: 423: while (Switches() == 0x01) {
  1523  001064  D014               	goto	l3531
  1524  001066                     l3527:
  1525                           
  1526                           ;mini-project-clock.c: 424: SetSecs(&MainTime);
  1527  001066  0E77               	movlw	low _MainTime
  1528  001068  6E2A               	movwf	SetSecs@ts,c
  1529  00106A  0E00               	movlw	high _MainTime
  1530  00106C  6E2B               	movwf	SetSecs@ts+1,c
  1531  00106E  ECE8  F00E         	call	_SetSecs	;wreg free
  1532                           
  1533                           ;mini-project-clock.c: 425: Num2Disp(&MainTime.secs);
  1534  001072  0E79               	movlw	low (_MainTime+2)
  1535  001074  0100               	movlb	0	; () banked
  1536  001076  6F7A               	movwf	Num2Disp@time& (0+255),b
  1537  001078  0E00               	movlw	high (_MainTime+2)
  1538  00107A  0100               	movlb	0	; () banked
  1539  00107C  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1540  00107E  0100               	movlb	0	; () banked
  1541  001080  517A               	movf	Num2Disp@time& (0+255),w,b
  1542  001082  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1543  001084  A4D8               	btfss	status,2,c
  1544  001086  0E20               	movlw	32
  1545  001088  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1546  00108A  EC97  F00D         	call	_Num2Disp	;wreg free
  1547  00108E                     l3531:
  1548  00108E  EC80  F013         	call	_Switches	;wreg free
  1549  001092  06E8               	decf	wreg,f,c
  1550  001094  B4D8               	btfsc	status,2,c
  1551  001096  D7E7               	goto	l3527
  1552  001098  D0DD               	goto	l292
  1553  00109A                     l273:
  1554                           
  1555                           ;mini-project-clock.c: 430: PIE1bits.TMR1IE = 0;
  1556  00109A  909D               	bcf	3997,0,c	;volatile
  1557                           
  1558                           ;mini-project-clock.c: 431: MinsFlash();
  1559  00109C  EC39  F011         	call	_MinsFlash	;wreg free
  1560                           
  1561                           ;mini-project-clock.c: 432: Num2Disp(MainTime.mins);
  1562  0010A0  0100               	movlb	0	; () banked
  1563  0010A2  5178               	movf	(_MainTime+1)& (0+255),w,b	;volatile
  1564  0010A4  0100               	movlb	0	; () banked
  1565  0010A6  6F7F               	movwf	??_SetMenu& (0+255),b
  1566  0010A8  6B80               	clrf	(??_SetMenu+1)& (0+255),b
  1567  0010AA  6B81               	clrf	(??_SetMenu+2)& (0+255),b
  1568  0010AC  C07F  F07A         	movff	??_SetMenu,Num2Disp@time
  1569  0010B0  C080  F07B         	movff	??_SetMenu+1,Num2Disp@time+1
  1570  0010B4  C081  F07C         	movff	??_SetMenu+2,Num2Disp@time+2
  1571  0010B8  EC97  F00D         	call	_Num2Disp	;wreg free
  1572                           
  1573                           ;mini-project-clock.c: 433: while (Switches() == 0x02) {
  1574  0010BC  D014               	goto	l3541
  1575  0010BE                     l3537:
  1576                           
  1577                           ;mini-project-clock.c: 434: SetMins(&MainTime);
  1578  0010BE  0E77               	movlw	low _MainTime
  1579  0010C0  6E2A               	movwf	SetMins@tm,c
  1580  0010C2  0E00               	movlw	high _MainTime
  1581  0010C4  6E2B               	movwf	SetMins@tm+1,c
  1582  0010C6  EC4C  F00F         	call	_SetMins	;wreg free
  1583                           
  1584                           ;mini-project-clock.c: 435: Num2Disp(&MainTime.mins);
  1585  0010CA  0E78               	movlw	low (_MainTime+1)
  1586  0010CC  0100               	movlb	0	; () banked
  1587  0010CE  6F7A               	movwf	Num2Disp@time& (0+255),b
  1588  0010D0  0E00               	movlw	high (_MainTime+1)
  1589  0010D2  0100               	movlb	0	; () banked
  1590  0010D4  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1591  0010D6  0100               	movlb	0	; () banked
  1592  0010D8  517A               	movf	Num2Disp@time& (0+255),w,b
  1593  0010DA  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1594  0010DC  A4D8               	btfss	status,2,c
  1595  0010DE  0E20               	movlw	32
  1596  0010E0  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1597  0010E2  EC97  F00D         	call	_Num2Disp	;wreg free
  1598  0010E6                     l3541:
  1599  0010E6  EC80  F013         	call	_Switches	;wreg free
  1600  0010EA  0A02               	xorlw	2
  1601  0010EC  B4D8               	btfsc	status,2,c
  1602  0010EE  D7E7               	goto	l3537
  1603  0010F0  D0B1               	goto	l292
  1604  0010F2                     l277:
  1605                           
  1606                           ;mini-project-clock.c: 440: PIE1bits.TMR1IE = 0;
  1607  0010F2  909D               	bcf	3997,0,c	;volatile
  1608                           
  1609                           ;mini-project-clock.c: 441: HrsFlash();
  1610  0010F4  EC72  F011         	call	_HrsFlash	;wreg free
  1611                           
  1612                           ;mini-project-clock.c: 442: Num2Disp(&MainTime.hrs);
  1613  0010F8  0E77               	movlw	low _MainTime
  1614  0010FA  0100               	movlb	0	; () banked
  1615  0010FC  6F7A               	movwf	Num2Disp@time& (0+255),b
  1616  0010FE  0E00               	movlw	high _MainTime
  1617  001100  0100               	movlb	0	; () banked
  1618  001102  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1619  001104  0100               	movlb	0	; () banked
  1620  001106  517A               	movf	Num2Disp@time& (0+255),w,b
  1621  001108  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1622  00110A  A4D8               	btfss	status,2,c
  1623  00110C  0E20               	movlw	32
  1624  00110E  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1625  001110  EC97  F00D         	call	_Num2Disp	;wreg free
  1626                           
  1627                           ;mini-project-clock.c: 443: while (Switches() == 0x04) {
  1628  001114  D014               	goto	l3551
  1629  001116                     l3547:
  1630                           
  1631                           ;mini-project-clock.c: 444: SetHrs(&MainTime);
  1632  001116  0E77               	movlw	low _MainTime
  1633  001118  6E2A               	movwf	SetHrs@th,c
  1634  00111A  0E00               	movlw	high _MainTime
  1635  00111C  6E2B               	movwf	SetHrs@th+1,c
  1636  00111E  ECB0  F00F         	call	_SetHrs	;wreg free
  1637                           
  1638                           ;mini-project-clock.c: 445: Num2Disp(&MainTime.hrs);
  1639  001122  0E77               	movlw	low _MainTime
  1640  001124  0100               	movlb	0	; () banked
  1641  001126  6F7A               	movwf	Num2Disp@time& (0+255),b
  1642  001128  0E00               	movlw	high _MainTime
  1643  00112A  0100               	movlb	0	; () banked
  1644  00112C  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1645  00112E  0100               	movlb	0	; () banked
  1646  001130  517A               	movf	Num2Disp@time& (0+255),w,b
  1647  001132  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1648  001134  A4D8               	btfss	status,2,c
  1649  001136  0E20               	movlw	32
  1650  001138  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1651  00113A  EC97  F00D         	call	_Num2Disp	;wreg free
  1652  00113E                     l3551:
  1653  00113E  EC80  F013         	call	_Switches	;wreg free
  1654  001142  0A04               	xorlw	4
  1655  001144  B4D8               	btfsc	status,2,c
  1656  001146  D7E7               	goto	l3547
  1657  001148  D085               	goto	l292
  1658  00114A                     l281:
  1659                           
  1660                           ;mini-project-clock.c: 450: PIE1bits.TMR1IE = 0;
  1661  00114A  909D               	bcf	3997,0,c	;volatile
  1662                           
  1663                           ;mini-project-clock.c: 451: DayFlash();
  1664  00114C  ECAB  F011         	call	_DayFlash	;wreg free
  1665                           
  1666                           ;mini-project-clock.c: 452: Num2Disp(&MainDate.day);
  1667  001150  0E6F               	movlw	low _MainDate
  1668  001152  0100               	movlb	0	; () banked
  1669  001154  6F7A               	movwf	Num2Disp@time& (0+255),b
  1670  001156  0E00               	movlw	high _MainDate
  1671  001158  0100               	movlb	0	; () banked
  1672  00115A  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1673  00115C  0100               	movlb	0	; () banked
  1674  00115E  517A               	movf	Num2Disp@time& (0+255),w,b
  1675  001160  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1676  001162  A4D8               	btfss	status,2,c
  1677  001164  0E20               	movlw	32
  1678  001166  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1679  001168  EC97  F00D         	call	_Num2Disp	;wreg free
  1680                           
  1681                           ;mini-project-clock.c: 453: while (Switches() == 0x20) {
  1682  00116C  D016               	goto	l3561
  1683  00116E                     l3557:
  1684                           
  1685                           ;mini-project-clock.c: 454: SetDay(&MainDate);
  1686  00116E  0E6F               	movlw	low _MainDate
  1687  001170  0100               	movlb	0	; () banked
  1688  001172  6F7A               	movwf	SetDay@dd& (0+255),b
  1689  001174  0E00               	movlw	high _MainDate
  1690  001176  0100               	movlb	0	; () banked
  1691  001178  6F7B               	movwf	(SetDay@dd+1)& (0+255),b
  1692  00117A  EC70  F009         	call	_SetDay	;wreg free
  1693                           
  1694                           ;mini-project-clock.c: 455: Num2Disp(&MainDate.day);
  1695  00117E  0E6F               	movlw	low _MainDate
  1696  001180  0100               	movlb	0	; () banked
  1697  001182  6F7A               	movwf	Num2Disp@time& (0+255),b
  1698  001184  0E00               	movlw	high _MainDate
  1699  001186  0100               	movlb	0	; () banked
  1700  001188  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1701  00118A  0100               	movlb	0	; () banked
  1702  00118C  517A               	movf	Num2Disp@time& (0+255),w,b
  1703  00118E  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1704  001190  A4D8               	btfss	status,2,c
  1705  001192  0E20               	movlw	32
  1706  001194  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1707  001196  EC97  F00D         	call	_Num2Disp	;wreg free
  1708  00119A                     l3561:
  1709  00119A  EC80  F013         	call	_Switches	;wreg free
  1710  00119E  0A20               	xorlw	32
  1711  0011A0  B4D8               	btfsc	status,2,c
  1712  0011A2  D7E5               	goto	l3557
  1713  0011A4  D057               	goto	l292
  1714  0011A6                     l285:
  1715                           
  1716                           ;mini-project-clock.c: 460: PIE1bits.TMR1IE = 0;
  1717  0011A6  909D               	bcf	3997,0,c	;volatile
  1718                           
  1719                           ;mini-project-clock.c: 461: MonthFlash();
  1720  0011A8  EC8D  F010         	call	_MonthFlash	;wreg free
  1721                           
  1722                           ;mini-project-clock.c: 462: Num2Disp(&MainDate.month);
  1723  0011AC  0E70               	movlw	low (_MainDate+1)
  1724  0011AE  0100               	movlb	0	; () banked
  1725  0011B0  6F7A               	movwf	Num2Disp@time& (0+255),b
  1726  0011B2  0E00               	movlw	high (_MainDate+1)
  1727  0011B4  0100               	movlb	0	; () banked
  1728  0011B6  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1729  0011B8  0100               	movlb	0	; () banked
  1730  0011BA  517A               	movf	Num2Disp@time& (0+255),w,b
  1731  0011BC  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1732  0011BE  A4D8               	btfss	status,2,c
  1733  0011C0  0E20               	movlw	32
  1734  0011C2  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1735  0011C4  EC97  F00D         	call	_Num2Disp	;wreg free
  1736                           
  1737                           ;mini-project-clock.c: 463: while (Switches() == 0x10) {
  1738  0011C8  D014               	goto	l3571
  1739  0011CA                     l3567:
  1740                           
  1741                           ;mini-project-clock.c: 464: SetMonth(&MainDate);
  1742  0011CA  0E6F               	movlw	low _MainDate
  1743  0011CC  6E2A               	movwf	SetMonth@dm,c
  1744  0011CE  0E00               	movlw	high _MainDate
  1745  0011D0  6E2B               	movwf	SetMonth@dm+1,c
  1746  0011D2  EC84  F00E         	call	_SetMonth	;wreg free
  1747                           
  1748                           ;mini-project-clock.c: 465: Num2Disp(&MainDate.month);
  1749  0011D6  0E70               	movlw	low (_MainDate+1)
  1750  0011D8  0100               	movlb	0	; () banked
  1751  0011DA  6F7A               	movwf	Num2Disp@time& (0+255),b
  1752  0011DC  0E00               	movlw	high (_MainDate+1)
  1753  0011DE  0100               	movlb	0	; () banked
  1754  0011E0  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1755  0011E2  0100               	movlb	0	; () banked
  1756  0011E4  517A               	movf	Num2Disp@time& (0+255),w,b
  1757  0011E6  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1758  0011E8  A4D8               	btfss	status,2,c
  1759  0011EA  0E20               	movlw	32
  1760  0011EC  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1761  0011EE  EC97  F00D         	call	_Num2Disp	;wreg free
  1762  0011F2                     l3571:
  1763  0011F2  EC80  F013         	call	_Switches	;wreg free
  1764  0011F6  0A10               	xorlw	16
  1765  0011F8  B4D8               	btfsc	status,2,c
  1766  0011FA  D7E7               	goto	l3567
  1767  0011FC  D02B               	goto	l292
  1768  0011FE                     l289:
  1769                           
  1770                           ;mini-project-clock.c: 470: PIE1bits.TMR1IE = 0;
  1771  0011FE  909D               	bcf	3997,0,c	;volatile
  1772                           
  1773                           ;mini-project-clock.c: 471: YearFlash();
  1774  001200  ECC7  F010         	call	_YearFlash	;wreg free
  1775                           
  1776                           ;mini-project-clock.c: 472: Num2Disp(&MainDate.year_short);
  1777  001204  0E71               	movlw	low (_MainDate+2)
  1778  001206  0100               	movlb	0	; () banked
  1779  001208  6F7A               	movwf	Num2Disp@time& (0+255),b
  1780  00120A  0E00               	movlw	high (_MainDate+2)
  1781  00120C  0100               	movlb	0	; () banked
  1782  00120E  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1783  001210  0100               	movlb	0	; () banked
  1784  001212  517A               	movf	Num2Disp@time& (0+255),w,b
  1785  001214  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1786  001216  A4D8               	btfss	status,2,c
  1787  001218  0E20               	movlw	32
  1788  00121A  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1789  00121C  EC97  F00D         	call	_Num2Disp	;wreg free
  1790                           
  1791                           ;mini-project-clock.c: 473: while (Switches() == 0x08) {
  1792  001220  D014               	goto	l3581
  1793  001222                     l3577:
  1794                           
  1795                           ;mini-project-clock.c: 474: SetYear(&MainDate);
  1796  001222  0E6F               	movlw	low _MainDate
  1797  001224  6E2A               	movwf	SetYear@dy,c
  1798  001226  0E00               	movlw	high _MainDate
  1799  001228  6E2B               	movwf	SetYear@dy+1,c
  1800  00122A  EC6C  F00C         	call	_SetYear	;wreg free
  1801                           
  1802                           ;mini-project-clock.c: 475: Num2Disp(&MainDate.year_short);
  1803  00122E  0E71               	movlw	low (_MainDate+2)
  1804  001230  0100               	movlb	0	; () banked
  1805  001232  6F7A               	movwf	Num2Disp@time& (0+255),b
  1806  001234  0E00               	movlw	high (_MainDate+2)
  1807  001236  0100               	movlb	0	; () banked
  1808  001238  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  1809  00123A  0100               	movlb	0	; () banked
  1810  00123C  517A               	movf	Num2Disp@time& (0+255),w,b
  1811  00123E  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  1812  001240  A4D8               	btfss	status,2,c
  1813  001242  0E20               	movlw	32
  1814  001244  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  1815  001246  EC97  F00D         	call	_Num2Disp	;wreg free
  1816  00124A                     l3581:
  1817  00124A  EC80  F013         	call	_Switches	;wreg free
  1818  00124E  0A08               	xorlw	8
  1819  001250  B4D8               	btfsc	status,2,c
  1820  001252  D7E7               	goto	l3577
  1821  001254                     l292:
  1822                           
  1823                           ;mini-project-clock.c: 476: }
  1824                           ;mini-project-clock.c: 477: PIE1bits.TMR1IE = 1;
  1825  001254  809D               	bsf	3997,0,c	;volatile
  1826                           
  1827                           ;mini-project-clock.c: 478: break;
  1828  001256  D03E               	goto	l3597
  1829  001258                     l3583:
  1830                           
  1831                           ;mini-project-clock.c: 480: Alarm1Flash();
  1832  001258  ECE4  F011         	call	_Alarm1Flash	;wreg free
  1833                           
  1834                           ;mini-project-clock.c: 481: while ((Switches() >> 7) == 1) {
  1835  00125C  D002               	goto	l3587
  1836  00125E                     l3585:
  1837                           
  1838                           ;mini-project-clock.c: 482: SetAlarm1();
  1839  00125E  EC9F  F00B         	call	_SetAlarm1	;wreg free
  1840  001262                     l3587:
  1841  001262  EC80  F013         	call	_Switches	;wreg free
  1842  001266  0100               	movlb	0	; () banked
  1843  001268  6F7F               	movwf	??_SetMenu& (0+255),b
  1844  00126A  0E00               	movlw	0
  1845  00126C  BF7F               	btfsc	??_SetMenu& (0+255),7,b
  1846  00126E  0E01               	movlw	1
  1847  001270  6F7F               	movwf	??_SetMenu& (0+255),b
  1848  001272  0100               	movlb	0	; () banked
  1849  001274  057F               	decf	??_SetMenu& (0+255),w,b
  1850  001276  B4D8               	btfsc	status,2,c
  1851  001278  D7F2               	goto	l3585
  1852  00127A                     l3589:
  1853                           
  1854                           ;mini-project-clock.c: 485: disp_U2 = DispChars.E;
  1855  00127A  0E06               	movlw	low (_DispChars+5)
  1856  00127C  6EF6               	movwf	tblptrl,c
  1857  00127E  0E10               	movlw	high (_DispChars+5)
  1858  001280  6EF7               	movwf	tblptrh,c
  1859  001282                     	if	0	;tblptru may be non-zero
  1860  001282                     	endif
  1861  001282                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1862  001282  0E00               	movlw	low (__mediumconst shr (0+16))
  1863  001284  6EF8               	movwf	tblptru,c
  1864  001286                     	endif
  1865  001286  0008               	tblrd		*
  1866  001288  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  1867                           
  1868                           ;mini-project-clock.c: 486: disp_U1 = DispChars.r;
  1869  00128C  0E13               	movlw	low (_DispChars+18)
  1870  00128E  6EF6               	movwf	tblptrl,c
  1871  001290  0E10               	movlw	high (_DispChars+18)
  1872  001292  6EF7               	movwf	tblptrh,c
  1873  001294                     	if	0	;tblptru may be non-zero
  1874  001294                     	endif
  1875  001294                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1876  001294  0E00               	movlw	low (__mediumconst shr (0+16))
  1877  001296  6EF8               	movwf	tblptru,c
  1878  001298                     	endif
  1879  001298  0008               	tblrd		*
  1880  00129A  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  1881                           
  1882                           ;mini-project-clock.c: 487: disp_LEDS = 0x02;
  1883  00129E  0E02               	movlw	2
  1884  0012A0  6E37               	movwf	_disp_LEDS,c	;volatile
  1885                           
  1886                           ;mini-project-clock.c: 489: }
  1887                           
  1888                           ;mini-project-clock.c: 488: break;
  1889  0012A2  D018               	goto	l3597
  1890  0012A4                     l3595:
  1891  0012A4  EC80  F013         	call	_Switches	;wreg free
  1892                           
  1893                           ; Switch size 1, requested type "space"
  1894                           ; Number of cases is 7, Range of values is 1 to 128
  1895                           ; switch strategies available:
  1896                           ; Name         Instructions Cycles
  1897                           ; simple_byte           22    12 (average)
  1898                           ;	Chosen strategy is simple_byte
  1899  0012A8  0A01               	xorlw	1	; case 1
  1900  0012AA  B4D8               	btfsc	status,2,c
  1901  0012AC  D6CA               	goto	l268
  1902  0012AE  0A03               	xorlw	3	; case 2
  1903  0012B0  B4D8               	btfsc	status,2,c
  1904  0012B2  D6F3               	goto	l273
  1905  0012B4  0A06               	xorlw	6	; case 4
  1906  0012B6  B4D8               	btfsc	status,2,c
  1907  0012B8  D71C               	goto	l277
  1908  0012BA  0A0C               	xorlw	12	; case 8
  1909  0012BC  B4D8               	btfsc	status,2,c
  1910  0012BE  D79F               	goto	l289
  1911  0012C0  0A18               	xorlw	24	; case 16
  1912  0012C2  B4D8               	btfsc	status,2,c
  1913  0012C4  D770               	goto	l285
  1914  0012C6  0A30               	xorlw	48	; case 32
  1915  0012C8  B4D8               	btfsc	status,2,c
  1916  0012CA  D73F               	goto	l281
  1917  0012CC  0AA0               	xorlw	160	; case 128
  1918  0012CE  B4D8               	btfsc	status,2,c
  1919  0012D0  D7C3               	goto	l3583
  1920  0012D2  D7D3               	goto	l3589
  1921  0012D4                     l3597:
  1922  0012D4  EC80  F013         	call	_Switches	;wreg free
  1923  0012D8  0900               	iorlw	0
  1924  0012DA  B4D8               	btfsc	status,2,c
  1925  0012DC  0012               	return	
  1926  0012DE  D7E2               	goto	l3595
  1927  0012E0                     __end_of_SetMenu:
  1928                           	opt stack 0
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           prodl	equ	0xFF3
  1934                           intcon	equ	0xFF2
  1935                           intcon2	equ	0xFF1
  1936                           postinc0	equ	0xFEE
  1937                           wreg	equ	0xFE8
  1938                           postdec1	equ	0xFE5
  1939                           fsr1l	equ	0xFE1
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function _YearFlash *****************
  1943 ;; Defined at:
  1944 ;;		line 840 in file "mini-project-clock.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;		None
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;Total ram usage:        0 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    6
  1965 ;; This function calls:
  1966 ;;		_Delay10KTCYx
  1967 ;; This function is called by:
  1968 ;;		_SetMenu
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text9
  1973  00218E                     __ptext9:
  1974                           	opt stack 0
  1975  00218E                     _YearFlash:
  1976                           	opt stack 23
  1977                           
  1978                           ;mini-project-clock.c: 841: disp_LEDS &= 0xC0;
  1979                           
  1980                           ;incstack = 0
  1981  00218E  0EC0               	movlw	192
  1982  002190  1637               	andwf	_disp_LEDS,f,c	;volatile
  1983                           
  1984                           ;mini-project-clock.c: 842: disp_LEDS |= 0x08;
  1985  002192  8637               	bsf	_disp_LEDS,3,c	;volatile
  1986                           
  1987                           ;mini-project-clock.c: 843: dp_mask |= (1 << 2);
  1988  002194  8433               	bsf	_dp_mask,2,c	;volatile
  1989                           
  1990                           ;mini-project-clock.c: 844: disp_U2 = DispChars.y;
  1991  002196  0E18               	movlw	low (_DispChars+23)
  1992  002198  6EF6               	movwf	tblptrl,c
  1993  00219A  0E10               	movlw	high (_DispChars+23)
  1994  00219C  6EF7               	movwf	tblptrh,c
  1995  00219E                     	if	0	;tblptru may be non-zero
  1996  00219E                     	endif
  1997  00219E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1998  00219E  0E00               	movlw	low (__mediumconst shr (0+16))
  1999  0021A0  6EF8               	movwf	tblptru,c
  2000  0021A2                     	endif
  2001  0021A2  0008               	tblrd		*
  2002  0021A4  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  2003                           
  2004                           ;mini-project-clock.c: 845: disp_U1 = DispChars.y;
  2005  0021A8  0E18               	movlw	low (_DispChars+23)
  2006  0021AA  6EF6               	movwf	tblptrl,c
  2007  0021AC  0E10               	movlw	high (_DispChars+23)
  2008  0021AE  6EF7               	movwf	tblptrh,c
  2009  0021B0                     	if	0	;tblptru may be non-zero
  2010  0021B0                     	endif
  2011  0021B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2012  0021B0  0E00               	movlw	low (__mediumconst shr (0+16))
  2013  0021B2  6EF8               	movwf	tblptru,c
  2014  0021B4                     	endif
  2015  0021B4  0008               	tblrd		*
  2016  0021B6  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  2017                           
  2018                           ;mini-project-clock.c: 846: Delay10KTCYx(100);
  2019  0021BA  0E64               	movlw	100
  2020  0021BC  ECC3  F013         	call	_Delay10KTCYx
  2021                           
  2022                           ;mini-project-clock.c: 847: disp_U2 = 0xFF;
  2023  0021C0  6832               	setf	_disp_U2,c	;volatile
  2024                           
  2025                           ;mini-project-clock.c: 848: disp_U1 = 0xFF;
  2026  0021C2  6831               	setf	_disp_U1,c	;volatile
  2027                           
  2028                           ;mini-project-clock.c: 849: Delay10KTCYx(100);
  2029  0021C4  0E64               	movlw	100
  2030  0021C6  ECC3  F013         	call	_Delay10KTCYx
  2031                           
  2032                           ;mini-project-clock.c: 850: disp_U2 = DispChars.y;
  2033  0021CA  0E18               	movlw	low (_DispChars+23)
  2034  0021CC  6EF6               	movwf	tblptrl,c
  2035  0021CE  0E10               	movlw	high (_DispChars+23)
  2036  0021D0  6EF7               	movwf	tblptrh,c
  2037  0021D2                     	if	0	;tblptru may be non-zero
  2038  0021D2                     	endif
  2039  0021D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2040  0021D2  0E00               	movlw	low (__mediumconst shr (0+16))
  2041  0021D4  6EF8               	movwf	tblptru,c
  2042  0021D6                     	endif
  2043  0021D6  0008               	tblrd		*
  2044  0021D8  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  2045                           
  2046                           ;mini-project-clock.c: 851: disp_U1 = DispChars.y;
  2047  0021DC  0E18               	movlw	low (_DispChars+23)
  2048  0021DE  6EF6               	movwf	tblptrl,c
  2049  0021E0  0E10               	movlw	high (_DispChars+23)
  2050  0021E2  6EF7               	movwf	tblptrh,c
  2051  0021E4                     	if	0	;tblptru may be non-zero
  2052  0021E4                     	endif
  2053  0021E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2054  0021E4  0E00               	movlw	low (__mediumconst shr (0+16))
  2055  0021E6  6EF8               	movwf	tblptru,c
  2056  0021E8                     	endif
  2057  0021E8  0008               	tblrd		*
  2058  0021EA  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  2059                           
  2060                           ;mini-project-clock.c: 852: Delay10KTCYx(100);
  2061  0021EE  0E64               	movlw	100
  2062  0021F0  ECC3  F013         	call	_Delay10KTCYx
  2063                           
  2064                           ;mini-project-clock.c: 853: disp_U2 = 0xFF;
  2065  0021F4  6832               	setf	_disp_U2,c	;volatile
  2066                           
  2067                           ;mini-project-clock.c: 854: disp_U1 = 0xFF;
  2068  0021F6  6831               	setf	_disp_U1,c	;volatile
  2069                           
  2070                           ;mini-project-clock.c: 855: Delay10KTCYx(100);
  2071  0021F8  0E64               	movlw	100
  2072  0021FA  ECC3  F013         	call	_Delay10KTCYx
  2073  0021FE  0012               	return		;funcret
  2074  002200                     __end_of_YearFlash:
  2075                           	opt stack 0
  2076                           tblptru	equ	0xFF8
  2077                           tblptrh	equ	0xFF7
  2078                           tblptrl	equ	0xFF6
  2079                           tablat	equ	0xFF5
  2080                           prodl	equ	0xFF3
  2081                           intcon	equ	0xFF2
  2082                           intcon2	equ	0xFF1
  2083                           postinc0	equ	0xFEE
  2084                           wreg	equ	0xFE8
  2085                           postdec1	equ	0xFE5
  2086                           fsr1l	equ	0xFE1
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _SetYear *****************
  2090 ;; Defined at:
  2091 ;;		line 727 in file "mini-project-clock.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  dy              2   41[COMRAM] PTR struct .
  2094 ;;		 -> MainDate(5), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        4 bytes
  2111 ;; Hardware stack levels used:    1
  2112 ;; Hardware stack levels required when called:    6
  2113 ;; This function calls:
  2114 ;;		_Delay10KTCYx
  2115 ;;		_PB1pressed
  2116 ;;		_PB2pressed
  2117 ;; This function is called by:
  2118 ;;		_SetMenu
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text10
  2123  0018D8                     __ptext10:
  2124                           	opt stack 0
  2125  0018D8                     _SetYear:
  2126                           	opt stack 23
  2127                           
  2128                           ;mini-project-clock.c: 728: if (PB2pressed() && dy->year_long < 2099) {
  2129                           
  2130                           ;incstack = 0
  2131  0018D8  EC4C  F013         	call	_PB2pressed	;wreg free
  2132  0018DC  0900               	iorlw	0
  2133  0018DE  B4D8               	btfsc	status,2,c
  2134  0018E0  D01F               	goto	l2761
  2135  0018E2  EE20 F003          	lfsr	2,3
  2136  0018E6  502A               	movf	SetYear@dy,w,c
  2137  0018E8  26D9               	addwf	fsr2l,f,c
  2138  0018EA  502B               	movf	SetYear@dy+1,w,c
  2139  0018EC  22DA               	addwfc	fsr2h,f,c
  2140  0018EE  0E33               	movlw	51
  2141  0018F0  5CDE               	subwf	postinc2,w,c
  2142  0018F2  0E08               	movlw	8
  2143  0018F4  58DE               	subwfb	postinc2,w,c
  2144  0018F6  B0D8               	btfsc	status,0,c
  2145  0018F8  D013               	goto	l2761
  2146                           
  2147                           ;mini-project-clock.c: 729: dy->year_long++;
  2148  0018FA  EE20 F003          	lfsr	2,3
  2149  0018FE  502A               	movf	SetYear@dy,w,c
  2150  001900  26D9               	addwf	fsr2l,f,c
  2151  001902  502B               	movf	SetYear@dy+1,w,c
  2152  001904  22DA               	addwfc	fsr2h,f,c
  2153  001906  2ADE               	incf	postinc2,f,c
  2154  001908  0E00               	movlw	0
  2155  00190A  22DD               	addwfc	postdec2,f,c
  2156                           
  2157                           ;mini-project-clock.c: 730: dy->year_short++;
  2158  00190C  EE20 F002          	lfsr	2,2
  2159  001910  502A               	movf	SetYear@dy,w,c
  2160  001912  26D9               	addwf	fsr2l,f,c
  2161  001914  502B               	movf	SetYear@dy+1,w,c
  2162  001916  22DA               	addwfc	fsr2h,f,c
  2163  001918  2ADF               	incf	indf2,f,c
  2164                           
  2165                           ;mini-project-clock.c: 731: Delay10KTCYx(25);
  2166  00191A  0E19               	movlw	25
  2167  00191C  ECC3  F013         	call	_Delay10KTCYx
  2168  001920                     l2761:
  2169                           
  2170                           ;mini-project-clock.c: 732: }
  2171                           ;mini-project-clock.c: 733: if (PB2pressed() && dy->year_long == 2099) {
  2172  001920  EC4C  F013         	call	_PB2pressed	;wreg free
  2173  001924  0900               	iorlw	0
  2174  001926  B4D8               	btfsc	status,2,c
  2175  001928  D022               	goto	l2769
  2176  00192A  EE20 F003          	lfsr	2,3
  2177  00192E  502A               	movf	SetYear@dy,w,c
  2178  001930  26D9               	addwf	fsr2l,f,c
  2179  001932  502B               	movf	SetYear@dy+1,w,c
  2180  001934  22DA               	addwfc	fsr2h,f,c
  2181  001936  0E33               	movlw	51
  2182  001938  18DE               	xorwf	postinc2,w,c
  2183  00193A  E119               	bnz	l2769
  2184  00193C  0E08               	movlw	8
  2185  00193E  18DE               	xorwf	postinc2,w,c
  2186  001940  A4D8               	btfss	status,2,c
  2187  001942  D015               	goto	l2769
  2188                           
  2189                           ;mini-project-clock.c: 734: dy->year_long = 2000;
  2190  001944  EE20 F003          	lfsr	2,3
  2191  001948  502A               	movf	SetYear@dy,w,c
  2192  00194A  26D9               	addwf	fsr2l,f,c
  2193  00194C  502B               	movf	SetYear@dy+1,w,c
  2194  00194E  22DA               	addwfc	fsr2h,f,c
  2195  001950  0ED0               	movlw	208
  2196  001952  6EDE               	movwf	postinc2,c
  2197  001954  0E07               	movlw	7
  2198  001956  6EDD               	movwf	postdec2,c
  2199                           
  2200                           ;mini-project-clock.c: 735: dy->year_short = 00;
  2201  001958  EE20 F002          	lfsr	2,2
  2202  00195C  502A               	movf	SetYear@dy,w,c
  2203  00195E  26D9               	addwf	fsr2l,f,c
  2204  001960  502B               	movf	SetYear@dy+1,w,c
  2205  001962  22DA               	addwfc	fsr2h,f,c
  2206  001964  0E00               	movlw	0
  2207  001966  6EDF               	movwf	indf2,c
  2208                           
  2209                           ;mini-project-clock.c: 736: Delay10KTCYx(25);
  2210  001968  0E19               	movlw	25
  2211  00196A  ECC3  F013         	call	_Delay10KTCYx
  2212  00196E                     l2769:
  2213                           
  2214                           ;mini-project-clock.c: 737: }
  2215                           ;mini-project-clock.c: 738: if (PB1pressed() && dy->year_long > 2000) {
  2216  00196E  EC66  F013         	call	_PB1pressed	;wreg free
  2217  001972  0900               	iorlw	0
  2218  001974  B4D8               	btfsc	status,2,c
  2219  001976  D01F               	goto	l2777
  2220  001978  EE20 F003          	lfsr	2,3
  2221  00197C  502A               	movf	SetYear@dy,w,c
  2222  00197E  26D9               	addwf	fsr2l,f,c
  2223  001980  502B               	movf	SetYear@dy+1,w,c
  2224  001982  22DA               	addwfc	fsr2h,f,c
  2225  001984  0ED1               	movlw	209
  2226  001986  5CDE               	subwf	postinc2,w,c
  2227  001988  0E07               	movlw	7
  2228  00198A  58DE               	subwfb	postinc2,w,c
  2229  00198C  A0D8               	btfss	status,0,c
  2230  00198E  D013               	goto	l2777
  2231                           
  2232                           ;mini-project-clock.c: 739: dy->year_long--;
  2233  001990  EE20 F003          	lfsr	2,3
  2234  001994  502A               	movf	SetYear@dy,w,c
  2235  001996  26D9               	addwf	fsr2l,f,c
  2236  001998  502B               	movf	SetYear@dy+1,w,c
  2237  00199A  22DA               	addwfc	fsr2h,f,c
  2238  00199C  06DE               	decf	postinc2,f,c
  2239  00199E  0E00               	movlw	0
  2240  0019A0  5ADD               	subwfb	postdec2,f,c
  2241                           
  2242                           ;mini-project-clock.c: 740: dy->year_short--;
  2243  0019A2  EE20 F002          	lfsr	2,2
  2244  0019A6  502A               	movf	SetYear@dy,w,c
  2245  0019A8  26D9               	addwf	fsr2l,f,c
  2246  0019AA  502B               	movf	SetYear@dy+1,w,c
  2247  0019AC  22DA               	addwfc	fsr2h,f,c
  2248  0019AE  06DF               	decf	indf2,f,c
  2249                           
  2250                           ;mini-project-clock.c: 741: Delay10KTCYx(25);
  2251  0019B0  0E19               	movlw	25
  2252  0019B2  ECC3  F013         	call	_Delay10KTCYx
  2253  0019B6                     l2777:
  2254                           
  2255                           ;mini-project-clock.c: 742: }
  2256                           ;mini-project-clock.c: 743: if (PB1pressed() && dy->year_long == 2000) {
  2257  0019B6  EC66  F013         	call	_PB1pressed	;wreg free
  2258  0019BA  0900               	iorlw	0
  2259  0019BC  B4D8               	btfsc	status,2,c
  2260  0019BE  0012               	return	
  2261  0019C0  EE20 F003          	lfsr	2,3
  2262  0019C4  502A               	movf	SetYear@dy,w,c
  2263  0019C6  26D9               	addwf	fsr2l,f,c
  2264  0019C8  502B               	movf	SetYear@dy+1,w,c
  2265  0019CA  22DA               	addwfc	fsr2h,f,c
  2266  0019CC  0ED0               	movlw	208
  2267  0019CE  18DE               	xorwf	postinc2,w,c
  2268  0019D0  E11A               	bnz	l397
  2269  0019D2  0E07               	movlw	7
  2270  0019D4  18DE               	xorwf	postinc2,w,c
  2271  0019D6  A4D8               	btfss	status,2,c
  2272  0019D8  0012               	return	
  2273                           
  2274                           ;mini-project-clock.c: 744: dy->year_long = 2099;
  2275  0019DA  EE20 F003          	lfsr	2,3
  2276  0019DE  502A               	movf	SetYear@dy,w,c
  2277  0019E0  26D9               	addwf	fsr2l,f,c
  2278  0019E2  502B               	movf	SetYear@dy+1,w,c
  2279  0019E4  22DA               	addwfc	fsr2h,f,c
  2280  0019E6  0E33               	movlw	51
  2281  0019E8  6EDE               	movwf	postinc2,c
  2282  0019EA  0E08               	movlw	8
  2283  0019EC  6EDD               	movwf	postdec2,c
  2284                           
  2285                           ;mini-project-clock.c: 745: dy->year_short = 99;
  2286  0019EE  EE20 F002          	lfsr	2,2
  2287  0019F2  502A               	movf	SetYear@dy,w,c
  2288  0019F4  26D9               	addwf	fsr2l,f,c
  2289  0019F6  502B               	movf	SetYear@dy+1,w,c
  2290  0019F8  22DA               	addwfc	fsr2h,f,c
  2291  0019FA  0E63               	movlw	99
  2292  0019FC  6EDF               	movwf	indf2,c
  2293                           
  2294                           ;mini-project-clock.c: 746: Delay10KTCYx(25);
  2295  0019FE  0E19               	movlw	25
  2296  001A00  ECC3  F013         	call	_Delay10KTCYx
  2297  001A04  0012               	return	
  2298  001A06                     l397:
  2299  001A06  0012               	return		;funcret
  2300  001A08                     __end_of_SetYear:
  2301                           	opt stack 0
  2302                           tblptru	equ	0xFF8
  2303                           tblptrh	equ	0xFF7
  2304                           tblptrl	equ	0xFF6
  2305                           tablat	equ	0xFF5
  2306                           prodl	equ	0xFF3
  2307                           intcon	equ	0xFF2
  2308                           intcon2	equ	0xFF1
  2309                           postinc0	equ	0xFEE
  2310                           wreg	equ	0xFE8
  2311                           postdec1	equ	0xFE5
  2312                           fsr1l	equ	0xFE1
  2313                           indf2	equ	0xFDF
  2314                           postinc2	equ	0xFDE
  2315                           postdec2	equ	0xFDD
  2316                           fsr2h	equ	0xFDA
  2317                           fsr2l	equ	0xFD9
  2318                           status	equ	0xFD8
  2319                           
  2320 ;; *************** function _SetMonth *****************
  2321 ;; Defined at:
  2322 ;;		line 708 in file "mini-project-clock.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;  dm              2   41[COMRAM] PTR struct .
  2325 ;;		 -> MainDate(5), 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;Total ram usage:        3 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    6
  2344 ;; This function calls:
  2345 ;;		_Delay10KTCYx
  2346 ;;		_PB1pressed
  2347 ;;		_PB2pressed
  2348 ;; This function is called by:
  2349 ;;		_SetMenu
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text11
  2354  001D08                     __ptext11:
  2355                           	opt stack 0
  2356  001D08                     _SetMonth:
  2357                           	opt stack 23
  2358                           
  2359                           ;mini-project-clock.c: 709: if (PB2pressed() && dm->month < 12) {
  2360                           
  2361                           ;incstack = 0
  2362  001D08  EC4C  F013         	call	_PB2pressed	;wreg free
  2363  001D0C  0900               	iorlw	0
  2364  001D0E  B4D8               	btfsc	status,2,c
  2365  001D10  D013               	goto	l2699
  2366  001D12  EE20 F001          	lfsr	2,1
  2367  001D16  502A               	movf	SetMonth@dm,w,c
  2368  001D18  26D9               	addwf	fsr2l,f,c
  2369  001D1A  502B               	movf	SetMonth@dm+1,w,c
  2370  001D1C  22DA               	addwfc	fsr2h,f,c
  2371  001D1E  0E0C               	movlw	12
  2372  001D20  60DF               	cpfslt	indf2,c
  2373  001D22  D00A               	goto	l2699
  2374                           
  2375                           ;mini-project-clock.c: 710: dm->month++;
  2376  001D24  EE20 F001          	lfsr	2,1
  2377  001D28  502A               	movf	SetMonth@dm,w,c
  2378  001D2A  26D9               	addwf	fsr2l,f,c
  2379  001D2C  502B               	movf	SetMonth@dm+1,w,c
  2380  001D2E  22DA               	addwfc	fsr2h,f,c
  2381  001D30  2ADF               	incf	indf2,f,c
  2382                           
  2383                           ;mini-project-clock.c: 711: Delay10KTCYx(25);
  2384  001D32  0E19               	movlw	25
  2385  001D34  ECC3  F013         	call	_Delay10KTCYx
  2386  001D38                     l2699:
  2387                           
  2388                           ;mini-project-clock.c: 712: }
  2389                           ;mini-project-clock.c: 713: if (PB2pressed() && dm->month == 12) {
  2390  001D38  EC4C  F013         	call	_PB2pressed	;wreg free
  2391  001D3C  0900               	iorlw	0
  2392  001D3E  B4D8               	btfsc	status,2,c
  2393  001D40  D015               	goto	l2707
  2394  001D42  EE20 F001          	lfsr	2,1
  2395  001D46  502A               	movf	SetMonth@dm,w,c
  2396  001D48  26D9               	addwf	fsr2l,f,c
  2397  001D4A  502B               	movf	SetMonth@dm+1,w,c
  2398  001D4C  22DA               	addwfc	fsr2h,f,c
  2399  001D4E  0E0C               	movlw	12
  2400  001D50  18DE               	xorwf	postinc2,w,c
  2401  001D52  A4D8               	btfss	status,2,c
  2402  001D54  D00B               	goto	l2707
  2403                           
  2404                           ;mini-project-clock.c: 714: dm->month = 1;
  2405  001D56  EE20 F001          	lfsr	2,1
  2406  001D5A  502A               	movf	SetMonth@dm,w,c
  2407  001D5C  26D9               	addwf	fsr2l,f,c
  2408  001D5E  502B               	movf	SetMonth@dm+1,w,c
  2409  001D60  22DA               	addwfc	fsr2h,f,c
  2410  001D62  0E01               	movlw	1
  2411  001D64  6EDF               	movwf	indf2,c
  2412                           
  2413                           ;mini-project-clock.c: 715: Delay10KTCYx(25);
  2414  001D66  0E19               	movlw	25
  2415  001D68  ECC3  F013         	call	_Delay10KTCYx
  2416  001D6C                     l2707:
  2417                           
  2418                           ;mini-project-clock.c: 716: }
  2419                           ;mini-project-clock.c: 717: if (PB1pressed() && dm->month > 1) {
  2420  001D6C  EC66  F013         	call	_PB1pressed	;wreg free
  2421  001D70  0900               	iorlw	0
  2422  001D72  B4D8               	btfsc	status,2,c
  2423  001D74  D013               	goto	l2715
  2424  001D76  EE20 F001          	lfsr	2,1
  2425  001D7A  502A               	movf	SetMonth@dm,w,c
  2426  001D7C  26D9               	addwf	fsr2l,f,c
  2427  001D7E  502B               	movf	SetMonth@dm+1,w,c
  2428  001D80  22DA               	addwfc	fsr2h,f,c
  2429  001D82  0E01               	movlw	1
  2430  001D84  64DF               	cpfsgt	indf2,c
  2431  001D86  D00A               	goto	l2715
  2432                           
  2433                           ;mini-project-clock.c: 718: dm->month--;
  2434  001D88  EE20 F001          	lfsr	2,1
  2435  001D8C  502A               	movf	SetMonth@dm,w,c
  2436  001D8E  26D9               	addwf	fsr2l,f,c
  2437  001D90  502B               	movf	SetMonth@dm+1,w,c
  2438  001D92  22DA               	addwfc	fsr2h,f,c
  2439  001D94  06DF               	decf	indf2,f,c
  2440                           
  2441                           ;mini-project-clock.c: 719: Delay10KTCYx(25);
  2442  001D96  0E19               	movlw	25
  2443  001D98  ECC3  F013         	call	_Delay10KTCYx
  2444  001D9C                     l2715:
  2445                           
  2446                           ;mini-project-clock.c: 720: }
  2447                           ;mini-project-clock.c: 721: if (PB1pressed() && dm->month == 1) {
  2448  001D9C  EC66  F013         	call	_PB1pressed	;wreg free
  2449  001DA0  0900               	iorlw	0
  2450  001DA2  B4D8               	btfsc	status,2,c
  2451  001DA4  0012               	return	
  2452  001DA6  EE20 F001          	lfsr	2,1
  2453  001DAA  502A               	movf	SetMonth@dm,w,c
  2454  001DAC  26D9               	addwf	fsr2l,f,c
  2455  001DAE  502B               	movf	SetMonth@dm+1,w,c
  2456  001DB0  22DA               	addwfc	fsr2h,f,c
  2457  001DB2  04DE               	decf	postinc2,w,c
  2458  001DB4  A4D8               	btfss	status,2,c
  2459  001DB6  0012               	return	
  2460                           
  2461                           ;mini-project-clock.c: 722: dm->month = 12;
  2462  001DB8  EE20 F001          	lfsr	2,1
  2463  001DBC  502A               	movf	SetMonth@dm,w,c
  2464  001DBE  26D9               	addwf	fsr2l,f,c
  2465  001DC0  502B               	movf	SetMonth@dm+1,w,c
  2466  001DC2  22DA               	addwfc	fsr2h,f,c
  2467  001DC4  0E0C               	movlw	12
  2468  001DC6  6EDF               	movwf	indf2,c
  2469                           
  2470                           ;mini-project-clock.c: 723: Delay10KTCYx(25);
  2471  001DC8  0E19               	movlw	25
  2472  001DCA  ECC3  F013         	call	_Delay10KTCYx
  2473  001DCE  0012               	return	
  2474  001DD0                     __end_of_SetMonth:
  2475                           	opt stack 0
  2476                           tblptru	equ	0xFF8
  2477                           tblptrh	equ	0xFF7
  2478                           tblptrl	equ	0xFF6
  2479                           tablat	equ	0xFF5
  2480                           prodl	equ	0xFF3
  2481                           intcon	equ	0xFF2
  2482                           intcon2	equ	0xFF1
  2483                           postinc0	equ	0xFEE
  2484                           wreg	equ	0xFE8
  2485                           postdec1	equ	0xFE5
  2486                           fsr1l	equ	0xFE1
  2487                           indf2	equ	0xFDF
  2488                           postinc2	equ	0xFDE
  2489                           postdec2	equ	0xFDD
  2490                           fsr2h	equ	0xFDA
  2491                           fsr2l	equ	0xFD9
  2492                           status	equ	0xFD8
  2493                           
  2494 ;; *************** function _SetDay *****************
  2495 ;; Defined at:
  2496 ;;		line 667 in file "mini-project-clock.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  dd              2    0[BANK0 ] PTR struct .
  2499 ;;		 -> MainDate(5), 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;		None
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2511 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;Total ram usage:        4 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    7
  2518 ;; This function calls:
  2519 ;;		_CalcLeapYear
  2520 ;;		_Delay10KTCYx
  2521 ;;		_PB1pressed
  2522 ;;		_PB2pressed
  2523 ;; This function is called by:
  2524 ;;		_SetMenu
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text12
  2529  0012E0                     __ptext12:
  2530                           	opt stack 0
  2531  0012E0                     _SetDay:
  2532                           	opt stack 22
  2533                           
  2534                           ;mini-project-clock.c: 668: if(CalcLeapYear(dd->year_long) == 1) {
  2535                           
  2536                           ;incstack = 0
  2537  0012E0  0100               	movlb	0	; () banked
  2538  0012E2  EE20 F003          	lfsr	2,3
  2539  0012E6  517A               	movf	SetDay@dd& (0+255),w,b
  2540  0012E8  26D9               	addwf	fsr2l,f,c
  2541  0012EA  517B               	movf	(SetDay@dd+1)& (0+255),w,b
  2542  0012EC  22DA               	addwfc	fsr2h,f,c
  2543  0012EE  CFDE F02D          	movff	postinc2,CalcLeapYear@year
  2544  0012F2  CFDD F02E          	movff	postdec2,CalcLeapYear@year+1
  2545  0012F6  ECBC  F012         	call	_CalcLeapYear	;wreg free
  2546  0012FA  06E8               	decf	wreg,f,c
  2547  0012FC  A4D8               	btfss	status,2,c
  2548  0012FE  D098               	goto	l3397
  2549                           
  2550                           ;mini-project-clock.c: 669: if(PB2pressed() && dd->day < DaysInMonthLeap[dd->month]) {
  2551  001300  EC4C  F013         	call	_PB2pressed	;wreg free
  2552  001304  0900               	iorlw	0
  2553  001306  B4D8               	btfsc	status,2,c
  2554  001308  D02B               	goto	l3373
  2555  00130A  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2556  00130E  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2557  001312  50DF               	movf	indf2,w,c
  2558  001314  0100               	movlb	0	; () banked
  2559  001316  6F7C               	movwf	??_SetDay& (0+255),b
  2560  001318  0100               	movlb	0	; () banked
  2561  00131A  EE20 F001          	lfsr	2,1
  2562  00131E  517A               	movf	SetDay@dd& (0+255),w,b
  2563  001320  26D9               	addwf	fsr2l,f,c
  2564  001322  517B               	movf	(SetDay@dd+1)& (0+255),w,b
  2565  001324  22DA               	addwfc	fsr2h,f,c
  2566  001326  50DF               	movf	indf2,w,c
  2567  001328  0100               	movlb	0	; () banked
  2568  00132A  6F7D               	movwf	(??_SetDay+1)& (0+255),b
  2569  00132C  0100               	movlb	0	; () banked
  2570  00132E  517D               	movf	(??_SetDay+1)& (0+255),w,b
  2571  001330  0D01               	mullw	1
  2572  001332  0E27               	movlw	low _DaysInMonthLeap
  2573  001334  24F3               	addwf	prodl,w,c
  2574  001336  6EF6               	movwf	tblptrl,c
  2575  001338  0E10               	movlw	high _DaysInMonthLeap
  2576  00133A  20F4               	addwfc	prodh,w,c
  2577  00133C  6EF7               	movwf	tblptrh,c
  2578  00133E                     	if	1	;There are 3 active tblptr bytes
  2579  00133E  6AF8               	clrf	tblptru,c
  2580  001340  0E00               	movlw	low (__mediumconst shr (0+16))
  2581  001342  22F8               	addwfc	tblptru,f,c
  2582  001344                     	endif
  2583  001344  0008               	tblrd		*
  2584  001346  50F5               	movf	tablat,w,c
  2585  001348  0100               	movlb	0	; () banked
  2586  00134A  5D7C               	subwf	??_SetDay& (0+255),w,b
  2587  00134C  B0D8               	btfsc	status,0,c
  2588  00134E  D008               	goto	l3373
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;mini-project-clock.c: 670: dd->day++;
  2592  001350  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2593  001354  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2594  001358  2ADF               	incf	indf2,f,c
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;mini-project-clock.c: 671: Delay10KTCYx(25);
  2598  00135A  0E19               	movlw	25
  2599  00135C  ECC3  F013         	call	_Delay10KTCYx
  2600  001360                     l3373:
  2601                           
  2602                           ;mini-project-clock.c: 672: }
  2603                           ;mini-project-clock.c: 673: if(PB2pressed() && dd->day == DaysInMonthLeap[dd->month]) {
  2604  001360  EC4C  F013         	call	_PB2pressed	;wreg free
  2605  001364  0900               	iorlw	0
  2606  001366  B4D8               	btfsc	status,2,c
  2607  001368  D02C               	goto	l3381
  2608  00136A  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2609  00136E  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2610  001372  50DF               	movf	indf2,w,c
  2611  001374  0100               	movlb	0	; () banked
  2612  001376  6F7C               	movwf	??_SetDay& (0+255),b
  2613  001378  0100               	movlb	0	; () banked
  2614  00137A  EE20 F001          	lfsr	2,1
  2615  00137E  517A               	movf	SetDay@dd& (0+255),w,b
  2616  001380  26D9               	addwf	fsr2l,f,c
  2617  001382  517B               	movf	(SetDay@dd+1)& (0+255),w,b
  2618  001384  22DA               	addwfc	fsr2h,f,c
  2619  001386  50DF               	movf	indf2,w,c
  2620  001388  0100               	movlb	0	; () banked
  2621  00138A  6F7D               	movwf	(??_SetDay+1)& (0+255),b
  2622  00138C  0100               	movlb	0	; () banked
  2623  00138E  517D               	movf	(??_SetDay+1)& (0+255),w,b
  2624  001390  0D01               	mullw	1
  2625  001392  0E27               	movlw	low _DaysInMonthLeap
  2626  001394  24F3               	addwf	prodl,w,c
  2627  001396  6EF6               	movwf	tblptrl,c
  2628  001398  0E10               	movlw	high _DaysInMonthLeap
  2629  00139A  20F4               	addwfc	prodh,w,c
  2630  00139C  6EF7               	movwf	tblptrh,c
  2631  00139E                     	if	1	;There are 3 active tblptr bytes
  2632  00139E  6AF8               	clrf	tblptru,c
  2633  0013A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2634  0013A2  22F8               	addwfc	tblptru,f,c
  2635  0013A4                     	endif
  2636  0013A4  0008               	tblrd		*
  2637  0013A6  50F5               	movf	tablat,w,c
  2638  0013A8  0100               	movlb	0	; () banked
  2639  0013AA  197C               	xorwf	??_SetDay& (0+255),w,b
  2640  0013AC  A4D8               	btfss	status,2,c
  2641  0013AE  D009               	goto	l3381
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;mini-project-clock.c: 674: dd->day = 1;
  2645  0013B0  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2646  0013B4  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2647  0013B8  0E01               	movlw	1
  2648  0013BA  6EDF               	movwf	indf2,c
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;mini-project-clock.c: 675: Delay10KTCYx(25);
  2652  0013BC  0E19               	movlw	25
  2653  0013BE  ECC3  F013         	call	_Delay10KTCYx
  2654  0013C2                     l3381:
  2655                           
  2656                           ;mini-project-clock.c: 676: }
  2657                           ;mini-project-clock.c: 677: if(PB1pressed() && dd->day > 1) {
  2658  0013C2  EC66  F013         	call	_PB1pressed	;wreg free
  2659  0013C6  0900               	iorlw	0
  2660  0013C8  B4D8               	btfsc	status,2,c
  2661  0013CA  D00F               	goto	l3389
  2662  0013CC  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2663  0013D0  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2664  0013D4  0E01               	movlw	1
  2665  0013D6  64DF               	cpfsgt	indf2,c
  2666  0013D8  D008               	goto	l3389
  2667                           
  2668                           ;mini-project-clock.c: 678: dd->day--;
  2669  0013DA  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2670  0013DE  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2671  0013E2  06DF               	decf	indf2,f,c
  2672                           
  2673                           ;mini-project-clock.c: 679: Delay10KTCYx(25);
  2674  0013E4  0E19               	movlw	25
  2675  0013E6  ECC3  F013         	call	_Delay10KTCYx
  2676  0013EA                     l3389:
  2677                           
  2678                           ;mini-project-clock.c: 680: }
  2679                           ;mini-project-clock.c: 681: if(PB1pressed() && dd->day == 1) {
  2680  0013EA  EC66  F013         	call	_PB1pressed	;wreg free
  2681  0013EE  0900               	iorlw	0
  2682  0013F0  B4D8               	btfsc	status,2,c
  2683  0013F2  0012               	return	
  2684  0013F4  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2685  0013F8  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2686  0013FC  04DE               	decf	postinc2,w,c
  2687  0013FE  A4D8               	btfss	status,2,c
  2688  001400  0012               	return	
  2689                           
  2690                           ;mini-project-clock.c: 682: dd->day = DaysInMonth[MainDate.month];
  2691  001402  0100               	movlb	0	; () banked
  2692  001404  5170               	movf	(_MainDate+1)& (0+255),w,b	;volatile
  2693  001406  0D01               	mullw	1
  2694  001408  0E1A               	movlw	low _DaysInMonth
  2695  00140A  24F3               	addwf	prodl,w,c
  2696  00140C  6EF6               	movwf	tblptrl,c
  2697  00140E  0E10               	movlw	high _DaysInMonth
  2698  001410  20F4               	addwfc	prodh,w,c
  2699  001412  6EF7               	movwf	tblptrh,c
  2700  001414                     	if	1	;There are 3 active tblptr bytes
  2701  001414  6AF8               	clrf	tblptru,c
  2702  001416  0E00               	movlw	low (__mediumconst shr (0+16))
  2703  001418  22F8               	addwfc	tblptru,f,c
  2704  00141A                     	endif
  2705  00141A  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2706  00141E  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2707  001422  0008               	tblrd		*
  2708  001424  CFF5 FFDF          	movff	tablat,indf2
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;mini-project-clock.c: 683: Delay10KTCYx(25);
  2712  001428  0E19               	movlw	25
  2713  00142A  ECC3  F013         	call	_Delay10KTCYx
  2714                           
  2715                           ;mini-project-clock.c: 684: }
  2716                           ;mini-project-clock.c: 685: }
  2717  00142E  0012               	return	
  2718  001430                     l3397:
  2719                           
  2720                           ;mini-project-clock.c: 686: else {
  2721                           ;mini-project-clock.c: 687: if(PB2pressed() && dd->day < DaysInMonthLeap[dd->month]) {
  2722  001430  EC4C  F013         	call	_PB2pressed	;wreg free
  2723  001434  0900               	iorlw	0
  2724  001436  B4D8               	btfsc	status,2,c
  2725  001438  D02B               	goto	l3405
  2726  00143A  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2727  00143E  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2728  001442  50DF               	movf	indf2,w,c
  2729  001444  0100               	movlb	0	; () banked
  2730  001446  6F7C               	movwf	??_SetDay& (0+255),b
  2731  001448  0100               	movlb	0	; () banked
  2732  00144A  EE20 F001          	lfsr	2,1
  2733  00144E  517A               	movf	SetDay@dd& (0+255),w,b
  2734  001450  26D9               	addwf	fsr2l,f,c
  2735  001452  517B               	movf	(SetDay@dd+1)& (0+255),w,b
  2736  001454  22DA               	addwfc	fsr2h,f,c
  2737  001456  50DF               	movf	indf2,w,c
  2738  001458  0100               	movlb	0	; () banked
  2739  00145A  6F7D               	movwf	(??_SetDay+1)& (0+255),b
  2740  00145C  0100               	movlb	0	; () banked
  2741  00145E  517D               	movf	(??_SetDay+1)& (0+255),w,b
  2742  001460  0D01               	mullw	1
  2743  001462  0E27               	movlw	low _DaysInMonthLeap
  2744  001464  24F3               	addwf	prodl,w,c
  2745  001466  6EF6               	movwf	tblptrl,c
  2746  001468  0E10               	movlw	high _DaysInMonthLeap
  2747  00146A  20F4               	addwfc	prodh,w,c
  2748  00146C  6EF7               	movwf	tblptrh,c
  2749  00146E                     	if	1	;There are 3 active tblptr bytes
  2750  00146E  6AF8               	clrf	tblptru,c
  2751  001470  0E00               	movlw	low (__mediumconst shr (0+16))
  2752  001472  22F8               	addwfc	tblptru,f,c
  2753  001474                     	endif
  2754  001474  0008               	tblrd		*
  2755  001476  50F5               	movf	tablat,w,c
  2756  001478  0100               	movlb	0	; () banked
  2757  00147A  5D7C               	subwf	??_SetDay& (0+255),w,b
  2758  00147C  B0D8               	btfsc	status,0,c
  2759  00147E  D008               	goto	l3405
  2760                           
  2761                           ; BSR set to: 0
  2762                           ;mini-project-clock.c: 688: dd->day++;
  2763  001480  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2764  001484  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2765  001488  2ADF               	incf	indf2,f,c
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;mini-project-clock.c: 689: Delay10KTCYx(25);
  2769  00148A  0E19               	movlw	25
  2770  00148C  ECC3  F013         	call	_Delay10KTCYx
  2771  001490                     l3405:
  2772                           
  2773                           ;mini-project-clock.c: 690: }
  2774                           ;mini-project-clock.c: 691: if(PB2pressed() && dd->day == DaysInMonth[dd->month]) {
  2775  001490  EC4C  F013         	call	_PB2pressed	;wreg free
  2776  001494  0900               	iorlw	0
  2777  001496  B4D8               	btfsc	status,2,c
  2778  001498  D02C               	goto	l3413
  2779  00149A  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2780  00149E  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2781  0014A2  50DF               	movf	indf2,w,c
  2782  0014A4  0100               	movlb	0	; () banked
  2783  0014A6  6F7C               	movwf	??_SetDay& (0+255),b
  2784  0014A8  0100               	movlb	0	; () banked
  2785  0014AA  EE20 F001          	lfsr	2,1
  2786  0014AE  517A               	movf	SetDay@dd& (0+255),w,b
  2787  0014B0  26D9               	addwf	fsr2l,f,c
  2788  0014B2  517B               	movf	(SetDay@dd+1)& (0+255),w,b
  2789  0014B4  22DA               	addwfc	fsr2h,f,c
  2790  0014B6  50DF               	movf	indf2,w,c
  2791  0014B8  0100               	movlb	0	; () banked
  2792  0014BA  6F7D               	movwf	(??_SetDay+1)& (0+255),b
  2793  0014BC  0100               	movlb	0	; () banked
  2794  0014BE  517D               	movf	(??_SetDay+1)& (0+255),w,b
  2795  0014C0  0D01               	mullw	1
  2796  0014C2  0E1A               	movlw	low _DaysInMonth
  2797  0014C4  24F3               	addwf	prodl,w,c
  2798  0014C6  6EF6               	movwf	tblptrl,c
  2799  0014C8  0E10               	movlw	high _DaysInMonth
  2800  0014CA  20F4               	addwfc	prodh,w,c
  2801  0014CC  6EF7               	movwf	tblptrh,c
  2802  0014CE                     	if	1	;There are 3 active tblptr bytes
  2803  0014CE  6AF8               	clrf	tblptru,c
  2804  0014D0  0E00               	movlw	low (__mediumconst shr (0+16))
  2805  0014D2  22F8               	addwfc	tblptru,f,c
  2806  0014D4                     	endif
  2807  0014D4  0008               	tblrd		*
  2808  0014D6  50F5               	movf	tablat,w,c
  2809  0014D8  0100               	movlb	0	; () banked
  2810  0014DA  197C               	xorwf	??_SetDay& (0+255),w,b
  2811  0014DC  A4D8               	btfss	status,2,c
  2812  0014DE  D009               	goto	l3413
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;mini-project-clock.c: 692: dd->day = 1;
  2816  0014E0  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2817  0014E4  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2818  0014E8  0E01               	movlw	1
  2819  0014EA  6EDF               	movwf	indf2,c
  2820                           
  2821                           ; BSR set to: 0
  2822                           ;mini-project-clock.c: 693: Delay10KTCYx(25);
  2823  0014EC  0E19               	movlw	25
  2824  0014EE  ECC3  F013         	call	_Delay10KTCYx
  2825  0014F2                     l3413:
  2826                           
  2827                           ;mini-project-clock.c: 694: }
  2828                           ;mini-project-clock.c: 695: if(PB1pressed() && dd->day > 1) {
  2829  0014F2  EC66  F013         	call	_PB1pressed	;wreg free
  2830  0014F6  0900               	iorlw	0
  2831  0014F8  B4D8               	btfsc	status,2,c
  2832  0014FA  D00F               	goto	l3421
  2833  0014FC  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2834  001500  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2835  001504  0E01               	movlw	1
  2836  001506  64DF               	cpfsgt	indf2,c
  2837  001508  D008               	goto	l3421
  2838                           
  2839                           ;mini-project-clock.c: 696: dd->day--;
  2840  00150A  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2841  00150E  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2842  001512  06DF               	decf	indf2,f,c
  2843                           
  2844                           ;mini-project-clock.c: 697: Delay10KTCYx(25);
  2845  001514  0E19               	movlw	25
  2846  001516  ECC3  F013         	call	_Delay10KTCYx
  2847  00151A                     l3421:
  2848                           
  2849                           ;mini-project-clock.c: 698: }
  2850                           ;mini-project-clock.c: 699: if(PB1pressed() && dd->day == 1) {
  2851  00151A  EC66  F013         	call	_PB1pressed	;wreg free
  2852  00151E  0900               	iorlw	0
  2853  001520  B4D8               	btfsc	status,2,c
  2854  001522  0012               	return	
  2855  001524  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2856  001528  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2857  00152C  04DE               	decf	postinc2,w,c
  2858  00152E  A4D8               	btfss	status,2,c
  2859  001530  0012               	return	
  2860                           
  2861                           ;mini-project-clock.c: 700: dd->day = DaysInMonth[MainDate.month];
  2862  001532  0100               	movlb	0	; () banked
  2863  001534  5170               	movf	(_MainDate+1)& (0+255),w,b	;volatile
  2864  001536  0D01               	mullw	1
  2865  001538  0E1A               	movlw	low _DaysInMonth
  2866  00153A  24F3               	addwf	prodl,w,c
  2867  00153C  6EF6               	movwf	tblptrl,c
  2868  00153E  0E10               	movlw	high _DaysInMonth
  2869  001540  20F4               	addwfc	prodh,w,c
  2870  001542  6EF7               	movwf	tblptrh,c
  2871  001544                     	if	1	;There are 3 active tblptr bytes
  2872  001544  6AF8               	clrf	tblptru,c
  2873  001546  0E00               	movlw	low (__mediumconst shr (0+16))
  2874  001548  22F8               	addwfc	tblptru,f,c
  2875  00154A                     	endif
  2876  00154A  C07A  FFD9         	movff	SetDay@dd,fsr2l
  2877  00154E  C07B  FFDA         	movff	SetDay@dd+1,fsr2h
  2878  001552  0008               	tblrd		*
  2879  001554  CFF5 FFDF          	movff	tablat,indf2
  2880                           
  2881                           ; BSR set to: 0
  2882                           ;mini-project-clock.c: 701: Delay10KTCYx(25);
  2883  001558  0E19               	movlw	25
  2884  00155A  ECC3  F013         	call	_Delay10KTCYx
  2885  00155E  0012               	return	
  2886  001560                     __end_of_SetDay:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           intcon	equ	0xFF2
  2895                           intcon2	equ	0xFF1
  2896                           postinc0	equ	0xFEE
  2897                           wreg	equ	0xFE8
  2898                           postdec1	equ	0xFE5
  2899                           fsr1l	equ	0xFE1
  2900                           indf2	equ	0xFDF
  2901                           postinc2	equ	0xFDE
  2902                           postdec2	equ	0xFDD
  2903                           fsr2h	equ	0xFDA
  2904                           fsr2l	equ	0xFD9
  2905                           status	equ	0xFD8
  2906                           
  2907 ;; *************** function _SetAlarm1 *****************
  2908 ;; Defined at:
  2909 ;;		line 893 in file "mini-project-clock.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    7
  2930 ;; This function calls:
  2931 ;;		_Delay10KTCYx
  2932 ;;		_HrsFlash
  2933 ;;		_MinsFlash
  2934 ;;		_Num2Disp
  2935 ;;		_PB1pressed
  2936 ;;		_PB2pressed
  2937 ;;		_SecsFlash
  2938 ;;		_SetHrs
  2939 ;;		_SetMins
  2940 ;;		_SetSecs
  2941 ;;		_Switches
  2942 ;; This function is called by:
  2943 ;;		_SetMenu
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text13
  2948  00173E                     __ptext13:
  2949                           	opt stack 0
  2950  00173E                     _SetAlarm1:
  2951                           	opt stack 22
  2952                           
  2953                           ;mini-project-clock.c: 894: switch(Switches()) {
  2954                           
  2955                           ;incstack = 0
  2956  00173E  D0BD               	goto	l3485
  2957  001740                     l3431:
  2958                           
  2959                           ;mini-project-clock.c: 896: SecsFlash();
  2960  001740  EC00  F011         	call	_SecsFlash	;wreg free
  2961                           
  2962                           ;mini-project-clock.c: 897: while(Switches() == 0x81) {
  2963  001744  D014               	goto	l3437
  2964  001746                     l3433:
  2965                           
  2966                           ;mini-project-clock.c: 898: SetSecs(&Alarm1Time);
  2967  001746  0E74               	movlw	low _Alarm1Time
  2968  001748  6E2A               	movwf	SetSecs@ts,c
  2969  00174A  0E00               	movlw	high _Alarm1Time
  2970  00174C  6E2B               	movwf	SetSecs@ts+1,c
  2971  00174E  ECE8  F00E         	call	_SetSecs	;wreg free
  2972                           
  2973                           ;mini-project-clock.c: 899: Num2Disp(&Alarm1Time.secs);
  2974  001752  0E76               	movlw	low (_Alarm1Time+2)
  2975  001754  0100               	movlb	0	; () banked
  2976  001756  6F7A               	movwf	Num2Disp@time& (0+255),b
  2977  001758  0E00               	movlw	high (_Alarm1Time+2)
  2978  00175A  0100               	movlb	0	; () banked
  2979  00175C  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  2980  00175E  0100               	movlb	0	; () banked
  2981  001760  517A               	movf	Num2Disp@time& (0+255),w,b
  2982  001762  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  2983  001764  A4D8               	btfss	status,2,c
  2984  001766  0E20               	movlw	32
  2985  001768  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  2986  00176A  EC97  F00D         	call	_Num2Disp	;wreg free
  2987  00176E                     l3437:
  2988  00176E  EC80  F013         	call	_Switches	;wreg free
  2989  001772  0A81               	xorlw	129
  2990  001774  A4D8               	btfss	status,2,c
  2991  001776  0012               	return	
  2992  001778  D7E6               	goto	l3433
  2993  00177A                     l3439:
  2994                           
  2995                           ;mini-project-clock.c: 903: MinsFlash();
  2996  00177A  EC39  F011         	call	_MinsFlash	;wreg free
  2997                           
  2998                           ;mini-project-clock.c: 904: while(Switches() == 0x82) {
  2999  00177E  D014               	goto	l3445
  3000  001780                     l3441:
  3001                           
  3002                           ;mini-project-clock.c: 905: SetMins(&Alarm1Time);
  3003  001780  0E74               	movlw	low _Alarm1Time
  3004  001782  6E2A               	movwf	SetMins@tm,c
  3005  001784  0E00               	movlw	high _Alarm1Time
  3006  001786  6E2B               	movwf	SetMins@tm+1,c
  3007  001788  EC4C  F00F         	call	_SetMins	;wreg free
  3008                           
  3009                           ;mini-project-clock.c: 906: Num2Disp(&Alarm1Time.mins);
  3010  00178C  0E75               	movlw	low (_Alarm1Time+1)
  3011  00178E  0100               	movlb	0	; () banked
  3012  001790  6F7A               	movwf	Num2Disp@time& (0+255),b
  3013  001792  0E00               	movlw	high (_Alarm1Time+1)
  3014  001794  0100               	movlb	0	; () banked
  3015  001796  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  3016  001798  0100               	movlb	0	; () banked
  3017  00179A  517A               	movf	Num2Disp@time& (0+255),w,b
  3018  00179C  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  3019  00179E  A4D8               	btfss	status,2,c
  3020  0017A0  0E20               	movlw	32
  3021  0017A2  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  3022  0017A4  EC97  F00D         	call	_Num2Disp	;wreg free
  3023  0017A8                     l3445:
  3024  0017A8  EC80  F013         	call	_Switches	;wreg free
  3025  0017AC  0A82               	xorlw	130
  3026  0017AE  A4D8               	btfss	status,2,c
  3027  0017B0  0012               	return	
  3028  0017B2  D7E6               	goto	l3441
  3029  0017B4                     l3447:
  3030                           
  3031                           ;mini-project-clock.c: 910: HrsFlash();
  3032  0017B4  EC72  F011         	call	_HrsFlash	;wreg free
  3033                           
  3034                           ;mini-project-clock.c: 911: while(Switches() == 0x84) {
  3035  0017B8  D014               	goto	l3453
  3036  0017BA                     l3449:
  3037                           
  3038                           ;mini-project-clock.c: 912: SetHrs(&Alarm1Time);
  3039  0017BA  0E74               	movlw	low _Alarm1Time
  3040  0017BC  6E2A               	movwf	SetHrs@th,c
  3041  0017BE  0E00               	movlw	high _Alarm1Time
  3042  0017C0  6E2B               	movwf	SetHrs@th+1,c
  3043  0017C2  ECB0  F00F         	call	_SetHrs	;wreg free
  3044                           
  3045                           ;mini-project-clock.c: 913: Num2Disp(&Alarm1Time.hrs);
  3046  0017C6  0E74               	movlw	low _Alarm1Time
  3047  0017C8  0100               	movlb	0	; () banked
  3048  0017CA  6F7A               	movwf	Num2Disp@time& (0+255),b
  3049  0017CC  0E00               	movlw	high _Alarm1Time
  3050  0017CE  0100               	movlb	0	; () banked
  3051  0017D0  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  3052  0017D2  0100               	movlb	0	; () banked
  3053  0017D4  517A               	movf	Num2Disp@time& (0+255),w,b
  3054  0017D6  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  3055  0017D8  A4D8               	btfss	status,2,c
  3056  0017DA  0E20               	movlw	32
  3057  0017DC  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  3058  0017DE  EC97  F00D         	call	_Num2Disp	;wreg free
  3059  0017E2                     l3453:
  3060  0017E2  EC80  F013         	call	_Switches	;wreg free
  3061  0017E6  0A84               	xorlw	132
  3062  0017E8  A4D8               	btfss	status,2,c
  3063  0017EA  0012               	return	
  3064  0017EC  D7E6               	goto	l3449
  3065  0017EE                     l3455:
  3066                           
  3067                           ;mini-project-clock.c: 917: disp_LEDS = 0x80;
  3068  0017EE  0E80               	movlw	128
  3069  0017F0  6E37               	movwf	_disp_LEDS,c	;volatile
  3070                           
  3071                           ;mini-project-clock.c: 918: while(Switches() == 0x80) {
  3072  0017F2  D048               	goto	l3477
  3073  0017F4                     l3457:
  3074                           
  3075                           ;mini-project-clock.c: 919: disp_U2 = DispChars.A;
  3076  0017F4  0E01               	movlw	low _DispChars
  3077  0017F6  6EF6               	movwf	tblptrl,c
  3078  0017F8                     	if	1	;There is more than 1 active tblptr byte
  3079  0017F8  0E10               	movlw	high _DispChars
  3080  0017FA  6EF7               	movwf	tblptrh,c
  3081  0017FC                     	endif
  3082  0017FC                     	if	1	;There are 3 active tblptr bytes
  3083  0017FC  0E00               	movlw	low (_DispChars shr (0+16))
  3084  0017FE  6EF8               	movwf	tblptru,c
  3085  001800                     	endif
  3086  001800  0008               	tblrd		*
  3087  001802  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  3088                           
  3089                           ;mini-project-clock.c: 920: disp_U1 = DispNums[1];
  3090  001806  0E35               	movlw	low (_DispNums+1)
  3091  001808  6EF6               	movwf	tblptrl,c
  3092  00180A  0E10               	movlw	high (_DispNums+1)
  3093  00180C  6EF7               	movwf	tblptrh,c
  3094  00180E                     	if	0	;tblptru may be non-zero
  3095  00180E                     	endif
  3096  00180E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3097  00180E  0E00               	movlw	low (__mediumconst shr (0+16))
  3098  001810  6EF8               	movwf	tblptru,c
  3099  001812                     	endif
  3100  001812  0008               	tblrd		*
  3101  001814  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  3102                           
  3103                           ;mini-project-clock.c: 921: Delay10KTCYx(150);
  3104  001818  0E96               	movlw	150
  3105  00181A  ECC3  F013         	call	_Delay10KTCYx
  3106                           
  3107                           ;mini-project-clock.c: 922: if(PB2pressed() == 1) {
  3108  00181E  EC4C  F013         	call	_PB2pressed	;wreg free
  3109  001822  06E8               	decf	wreg,f,c
  3110  001824  A4D8               	btfss	status,2,c
  3111  001826  D002               	goto	l3465
  3112                           
  3113                           ;mini-project-clock.c: 923: Alarm1On = 1;
  3114  001828  0E01               	movlw	1
  3115  00182A  6E35               	movwf	_Alarm1On,c
  3116  00182C                     l3465:
  3117                           
  3118                           ;mini-project-clock.c: 924: }
  3119                           ;mini-project-clock.c: 925: if(PB1pressed() == 1) {
  3120  00182C  EC66  F013         	call	_PB1pressed	;wreg free
  3121  001830  06E8               	decf	wreg,f,c
  3122  001832  A4D8               	btfss	status,2,c
  3123  001834  D002               	goto	l3469
  3124                           
  3125                           ;mini-project-clock.c: 926: Alarm1On = 0;
  3126  001836  0E00               	movlw	0
  3127  001838  6E35               	movwf	_Alarm1On,c
  3128  00183A                     l3469:
  3129                           
  3130                           ;mini-project-clock.c: 927: }
  3131                           ;mini-project-clock.c: 928: if(Alarm1On == 1) {
  3132  00183A  0435               	decf	_Alarm1On,w,c
  3133  00183C  A4D8               	btfss	status,2,c
  3134  00183E  D00D               	goto	l3473
  3135                           
  3136                           ;mini-project-clock.c: 929: disp_U2 = DispChars.o;
  3137  001840  0E11               	movlw	low (_DispChars+16)
  3138  001842  6EF6               	movwf	tblptrl,c
  3139  001844  0E10               	movlw	high (_DispChars+16)
  3140  001846  6EF7               	movwf	tblptrh,c
  3141  001848                     	if	0	;tblptru may be non-zero
  3142  001848                     	endif
  3143  001848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3144  001848  0E00               	movlw	low (__mediumconst shr (0+16))
  3145  00184A  6EF8               	movwf	tblptru,c
  3146  00184C                     	endif
  3147  00184C  0008               	tblrd		*
  3148  00184E  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  3149                           
  3150                           ;mini-project-clock.c: 930: disp_U1 = DispChars.n;
  3151  001852  0E10               	movlw	low (_DispChars+15)
  3152  001854  6EF6               	movwf	tblptrl,c
  3153  001856  0E10               	movlw	high (_DispChars+15)
  3154  001858  D00C               	goto	L1
  3155  00185A                     l3473:
  3156                           
  3157                           ;mini-project-clock.c: 932: else {
  3158                           ;mini-project-clock.c: 933: disp_U2 = DispChars.o;
  3159  00185A  0E11               	movlw	low (_DispChars+16)
  3160  00185C  6EF6               	movwf	tblptrl,c
  3161  00185E  0E10               	movlw	high (_DispChars+16)
  3162  001860  6EF7               	movwf	tblptrh,c
  3163  001862                     	if	0	;tblptru may be non-zero
  3164  001862                     	endif
  3165  001862                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3166  001862  0E00               	movlw	low (__mediumconst shr (0+16))
  3167  001864  6EF8               	movwf	tblptru,c
  3168  001866                     	endif
  3169  001866  0008               	tblrd		*
  3170  001868  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  3171                           
  3172                           ;mini-project-clock.c: 934: disp_U1 = DispChars.F;
  3173  00186C  0E07               	movlw	low (_DispChars+6)
  3174  00186E  6EF6               	movwf	tblptrl,c
  3175  001870  0E10               	movlw	high (_DispChars+6)
  3176  001872                     L1:
  3177  001872  6EF7               	movwf	tblptrh,c
  3178  001874                     	if	0	;tblptru may be non-zero
  3179  001874                     	endif
  3180  001874                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3181  001874  0E00               	movlw	low (__mediumconst shr (0+16))
  3182  001876  6EF8               	movwf	tblptru,c
  3183  001878                     	endif
  3184  001878  0008               	tblrd		*
  3185  00187A  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  3186                           
  3187                           ;mini-project-clock.c: 935: }
  3188                           ;mini-project-clock.c: 936: Delay10KTCYx(150);
  3189  00187E  0E96               	movlw	150
  3190  001880  ECC3  F013         	call	_Delay10KTCYx
  3191  001884                     l3477:
  3192  001884  EC80  F013         	call	_Switches	;wreg free
  3193  001888  0A80               	xorlw	128
  3194  00188A  A4D8               	btfss	status,2,c
  3195  00188C  0012               	return	
  3196  00188E  D7B2               	goto	l3457
  3197  001890                     l3479:
  3198                           
  3199                           ;mini-project-clock.c: 940: disp_U2 = DispChars.E;
  3200  001890  0E06               	movlw	low (_DispChars+5)
  3201  001892  6EF6               	movwf	tblptrl,c
  3202  001894  0E10               	movlw	high (_DispChars+5)
  3203  001896  6EF7               	movwf	tblptrh,c
  3204  001898                     	if	0	;tblptru may be non-zero
  3205  001898                     	endif
  3206  001898                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3207  001898  0E00               	movlw	low (__mediumconst shr (0+16))
  3208  00189A  6EF8               	movwf	tblptru,c
  3209  00189C                     	endif
  3210  00189C  0008               	tblrd		*
  3211  00189E  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  3212                           
  3213                           ;mini-project-clock.c: 941: disp_U1 = DispChars.r;
  3214  0018A2  0E13               	movlw	low (_DispChars+18)
  3215  0018A4  6EF6               	movwf	tblptrl,c
  3216  0018A6  0E10               	movlw	high (_DispChars+18)
  3217  0018A8  6EF7               	movwf	tblptrh,c
  3218  0018AA                     	if	0	;tblptru may be non-zero
  3219  0018AA                     	endif
  3220  0018AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3221  0018AA  0E00               	movlw	low (__mediumconst shr (0+16))
  3222  0018AC  6EF8               	movwf	tblptru,c
  3223  0018AE                     	endif
  3224  0018AE  0008               	tblrd		*
  3225  0018B0  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  3226                           
  3227                           ;mini-project-clock.c: 942: disp_LEDS = 0x05;
  3228  0018B4  0E05               	movlw	5
  3229  0018B6  6E37               	movwf	_disp_LEDS,c	;volatile
  3230                           
  3231                           ;mini-project-clock.c: 944: }
  3232                           
  3233                           ;mini-project-clock.c: 943: break;
  3234  0018B8  0012               	return	
  3235  0018BA                     l3485:
  3236  0018BA  EC80  F013         	call	_Switches	;wreg free
  3237                           
  3238                           ; Switch size 1, requested type "space"
  3239                           ; Number of cases is 4, Range of values is 128 to 132
  3240                           ; switch strategies available:
  3241                           ; Name         Instructions Cycles
  3242                           ; simple_byte           13     7 (average)
  3243                           ;	Chosen strategy is simple_byte
  3244  0018BE  0A80               	xorlw	128	; case 128
  3245  0018C0  B4D8               	btfsc	status,2,c
  3246  0018C2  D795               	goto	l3455
  3247  0018C4  0A01               	xorlw	1	; case 129
  3248  0018C6  B4D8               	btfsc	status,2,c
  3249  0018C8  D73B               	goto	l3431
  3250  0018CA  0A03               	xorlw	3	; case 130
  3251  0018CC  B4D8               	btfsc	status,2,c
  3252  0018CE  D755               	goto	l3439
  3253  0018D0  0A06               	xorlw	6	; case 132
  3254  0018D2  B4D8               	btfsc	status,2,c
  3255  0018D4  D76F               	goto	l3447
  3256  0018D6  D7DC               	goto	l3479
  3257  0018D8                     __end_of_SetAlarm1:
  3258                           	opt stack 0
  3259                           tblptru	equ	0xFF8
  3260                           tblptrh	equ	0xFF7
  3261                           tblptrl	equ	0xFF6
  3262                           tablat	equ	0xFF5
  3263                           prodh	equ	0xFF4
  3264                           prodl	equ	0xFF3
  3265                           intcon	equ	0xFF2
  3266                           intcon2	equ	0xFF1
  3267                           postinc0	equ	0xFEE
  3268                           wreg	equ	0xFE8
  3269                           postdec1	equ	0xFE5
  3270                           fsr1l	equ	0xFE1
  3271                           indf2	equ	0xFDF
  3272                           postinc2	equ	0xFDE
  3273                           postdec2	equ	0xFDD
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           
  3278 ;; *************** function _Switches *****************
  3279 ;; Defined at:
  3280 ;;		line 405 in file "mini-project-clock.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  temp1           1   41[COMRAM] unsigned char 
  3285 ;;  temp2           1   40[COMRAM] unsigned char 
  3286 ;;  temp            1   39[COMRAM] unsigned char 
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      unsigned char 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;Total ram usage:        3 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    5
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_main
  3307 ;;		_SetMenu
  3308 ;;		_SetAlarm1
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312                           	psect	text14
  3313  002700                     __ptext14:
  3314                           	opt stack 0
  3315  002700                     _Switches:
  3316                           	opt stack 25
  3317                           
  3318                           ;mini-project-clock.c: 406: char temp, temp1, temp2;
  3319                           ;mini-project-clock.c: 407: temp1 = PORTC;
  3320                           
  3321                           ;incstack = 0
  3322  002700  CF82 F02A          	movff	3970,Switches@temp1	;volatile
  3323                           
  3324                           ;mini-project-clock.c: 408: temp1 >>= 2;
  3325  002704  90D8               	bcf	status,0,c
  3326  002706  322A               	rrcf	Switches@temp1,f,c
  3327  002708  90D8               	bcf	status,0,c
  3328  00270A  322A               	rrcf	Switches@temp1,f,c
  3329                           
  3330                           ;mini-project-clock.c: 409: temp1 &= 0x0F;
  3331  00270C  0E0F               	movlw	15
  3332  00270E  162A               	andwf	Switches@temp1,f,c
  3333                           
  3334                           ;mini-project-clock.c: 410: temp2 = PORTH;
  3335  002710  CF87 F029          	movff	3975,Switches@temp2	;volatile
  3336                           
  3337                           ;mini-project-clock.c: 411: temp2 &= 0xF0;
  3338  002714  0EF0               	movlw	240
  3339  002716  1629               	andwf	Switches@temp2,f,c
  3340                           
  3341                           ;mini-project-clock.c: 412: temp = (temp1 | temp2);
  3342  002718  502A               	movf	Switches@temp1,w,c
  3343  00271A  1029               	iorwf	Switches@temp2,w,c
  3344  00271C  6E28               	movwf	Switches@temp,c
  3345                           
  3346                           ;mini-project-clock.c: 413: return(temp);
  3347  00271E  5028               	movf	Switches@temp,w,c
  3348  002720  0012               	return	
  3349  002722                     __end_of_Switches:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           prodh	equ	0xFF4
  3356                           prodl	equ	0xFF3
  3357                           intcon	equ	0xFF2
  3358                           intcon2	equ	0xFF1
  3359                           postinc0	equ	0xFEE
  3360                           wreg	equ	0xFE8
  3361                           postdec1	equ	0xFE5
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           postinc2	equ	0xFDE
  3365                           postdec2	equ	0xFDD
  3366                           fsr2h	equ	0xFDA
  3367                           fsr2l	equ	0xFD9
  3368                           status	equ	0xFD8
  3369                           
  3370 ;; *************** function _SetSecs *****************
  3371 ;; Defined at:
  3372 ;;		line 610 in file "mini-project-clock.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  ts              2   41[COMRAM] PTR struct .
  3375 ;;		 -> Alarm1Time(3), MainTime(3), 
  3376 ;; Auto vars:     Size  Location     Type
  3377 ;;		None
  3378 ;; Return value:  Size  Location     Type
  3379 ;;                  1    wreg      void 
  3380 ;; Registers used:
  3381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3382 ;; Tracked objects:
  3383 ;;		On entry : 0/0
  3384 ;;		On exit  : 0/0
  3385 ;;		Unchanged: 0/0
  3386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;Total ram usage:        3 bytes
  3392 ;; Hardware stack levels used:    1
  3393 ;; Hardware stack levels required when called:    6
  3394 ;; This function calls:
  3395 ;;		_Delay10KTCYx
  3396 ;;		_PB1pressed
  3397 ;;		_PB2pressed
  3398 ;; This function is called by:
  3399 ;;		_SetMenu
  3400 ;;		_SetAlarm1
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text15
  3405  001DD0                     __ptext15:
  3406                           	opt stack 0
  3407  001DD0                     _SetSecs:
  3408                           	opt stack 23
  3409                           
  3410                           ;mini-project-clock.c: 611: if(PB2pressed() && ts->secs < 59) {
  3411                           
  3412                           ;incstack = 0
  3413  001DD0  EC4C  F013         	call	_PB2pressed	;wreg free
  3414  001DD4  0900               	iorlw	0
  3415  001DD6  B4D8               	btfsc	status,2,c
  3416  001DD8  D013               	goto	l2395
  3417  001DDA  EE20 F002          	lfsr	2,2
  3418  001DDE  502A               	movf	SetSecs@ts,w,c
  3419  001DE0  26D9               	addwf	fsr2l,f,c
  3420  001DE2  502B               	movf	SetSecs@ts+1,w,c
  3421  001DE4  22DA               	addwfc	fsr2h,f,c
  3422  001DE6  0E3B               	movlw	59
  3423  001DE8  60DF               	cpfslt	indf2,c
  3424  001DEA  D00A               	goto	l2395
  3425                           
  3426                           ;mini-project-clock.c: 612: ts->secs++;
  3427  001DEC  EE20 F002          	lfsr	2,2
  3428  001DF0  502A               	movf	SetSecs@ts,w,c
  3429  001DF2  26D9               	addwf	fsr2l,f,c
  3430  001DF4  502B               	movf	SetSecs@ts+1,w,c
  3431  001DF6  22DA               	addwfc	fsr2h,f,c
  3432  001DF8  2ADF               	incf	indf2,f,c
  3433                           
  3434                           ;mini-project-clock.c: 613: Delay10KTCYx(25);
  3435  001DFA  0E19               	movlw	25
  3436  001DFC  ECC3  F013         	call	_Delay10KTCYx
  3437  001E00                     l2395:
  3438                           
  3439                           ;mini-project-clock.c: 614: }
  3440                           ;mini-project-clock.c: 615: if(PB2pressed() && ts->secs == 59) {
  3441  001E00  EC4C  F013         	call	_PB2pressed	;wreg free
  3442  001E04  0900               	iorlw	0
  3443  001E06  B4D8               	btfsc	status,2,c
  3444  001E08  D015               	goto	l2403
  3445  001E0A  EE20 F002          	lfsr	2,2
  3446  001E0E  502A               	movf	SetSecs@ts,w,c
  3447  001E10  26D9               	addwf	fsr2l,f,c
  3448  001E12  502B               	movf	SetSecs@ts+1,w,c
  3449  001E14  22DA               	addwfc	fsr2h,f,c
  3450  001E16  0E3B               	movlw	59
  3451  001E18  18DE               	xorwf	postinc2,w,c
  3452  001E1A  A4D8               	btfss	status,2,c
  3453  001E1C  D00B               	goto	l2403
  3454                           
  3455                           ;mini-project-clock.c: 616: ts->secs = 0;
  3456  001E1E  EE20 F002          	lfsr	2,2
  3457  001E22  502A               	movf	SetSecs@ts,w,c
  3458  001E24  26D9               	addwf	fsr2l,f,c
  3459  001E26  502B               	movf	SetSecs@ts+1,w,c
  3460  001E28  22DA               	addwfc	fsr2h,f,c
  3461  001E2A  0E00               	movlw	0
  3462  001E2C  6EDF               	movwf	indf2,c
  3463                           
  3464                           ;mini-project-clock.c: 617: Delay10KTCYx(25);
  3465  001E2E  0E19               	movlw	25
  3466  001E30  ECC3  F013         	call	_Delay10KTCYx
  3467  001E34                     l2403:
  3468                           
  3469                           ;mini-project-clock.c: 618: }
  3470                           ;mini-project-clock.c: 619: if(PB1pressed() && ts->secs > 0) {
  3471  001E34  EC66  F013         	call	_PB1pressed	;wreg free
  3472  001E38  0900               	iorlw	0
  3473  001E3A  B4D8               	btfsc	status,2,c
  3474  001E3C  D013               	goto	l2411
  3475  001E3E  EE20 F002          	lfsr	2,2
  3476  001E42  502A               	movf	SetSecs@ts,w,c
  3477  001E44  26D9               	addwf	fsr2l,f,c
  3478  001E46  502B               	movf	SetSecs@ts+1,w,c
  3479  001E48  22DA               	addwfc	fsr2h,f,c
  3480  001E4A  50DF               	movf	indf2,w,c
  3481  001E4C  B4D8               	btfsc	status,2,c
  3482  001E4E  D00A               	goto	l2411
  3483                           
  3484                           ;mini-project-clock.c: 620: ts->secs--;
  3485  001E50  EE20 F002          	lfsr	2,2
  3486  001E54  502A               	movf	SetSecs@ts,w,c
  3487  001E56  26D9               	addwf	fsr2l,f,c
  3488  001E58  502B               	movf	SetSecs@ts+1,w,c
  3489  001E5A  22DA               	addwfc	fsr2h,f,c
  3490  001E5C  06DF               	decf	indf2,f,c
  3491                           
  3492                           ;mini-project-clock.c: 621: Delay10KTCYx(25);
  3493  001E5E  0E19               	movlw	25
  3494  001E60  ECC3  F013         	call	_Delay10KTCYx
  3495  001E64                     l2411:
  3496                           
  3497                           ;mini-project-clock.c: 622: }
  3498                           ;mini-project-clock.c: 623: if(PB1pressed() && ts->secs == 0) {
  3499  001E64  EC66  F013         	call	_PB1pressed	;wreg free
  3500  001E68  0900               	iorlw	0
  3501  001E6A  B4D8               	btfsc	status,2,c
  3502  001E6C  0012               	return	
  3503  001E6E  EE20 F002          	lfsr	2,2
  3504  001E72  502A               	movf	SetSecs@ts,w,c
  3505  001E74  26D9               	addwf	fsr2l,f,c
  3506  001E76  502B               	movf	SetSecs@ts+1,w,c
  3507  001E78  22DA               	addwfc	fsr2h,f,c
  3508  001E7A  50DF               	movf	indf2,w,c
  3509  001E7C  A4D8               	btfss	status,2,c
  3510  001E7E  0012               	return	
  3511                           
  3512                           ;mini-project-clock.c: 624: ts->secs = 59;
  3513  001E80  EE20 F002          	lfsr	2,2
  3514  001E84  502A               	movf	SetSecs@ts,w,c
  3515  001E86  26D9               	addwf	fsr2l,f,c
  3516  001E88  502B               	movf	SetSecs@ts+1,w,c
  3517  001E8A  22DA               	addwfc	fsr2h,f,c
  3518  001E8C  0E3B               	movlw	59
  3519  001E8E  6EDF               	movwf	indf2,c
  3520                           
  3521                           ;mini-project-clock.c: 625: Delay10KTCYx(25);
  3522  001E90  0E19               	movlw	25
  3523  001E92  ECC3  F013         	call	_Delay10KTCYx
  3524  001E96  0012               	return	
  3525  001E98                     __end_of_SetSecs:
  3526                           	opt stack 0
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           prodh	equ	0xFF4
  3532                           prodl	equ	0xFF3
  3533                           intcon	equ	0xFF2
  3534                           intcon2	equ	0xFF1
  3535                           postinc0	equ	0xFEE
  3536                           wreg	equ	0xFE8
  3537                           postdec1	equ	0xFE5
  3538                           fsr1l	equ	0xFE1
  3539                           indf2	equ	0xFDF
  3540                           postinc2	equ	0xFDE
  3541                           postdec2	equ	0xFDD
  3542                           fsr2h	equ	0xFDA
  3543                           fsr2l	equ	0xFD9
  3544                           status	equ	0xFD8
  3545                           
  3546 ;; *************** function _SetMins *****************
  3547 ;; Defined at:
  3548 ;;		line 629 in file "mini-project-clock.c"
  3549 ;; Parameters:    Size  Location     Type
  3550 ;;  tm              2   41[COMRAM] PTR struct .
  3551 ;;		 -> Alarm1Time(3), MainTime(3), 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;		None
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;Total ram usage:        3 bytes
  3568 ;; Hardware stack levels used:    1
  3569 ;; Hardware stack levels required when called:    6
  3570 ;; This function calls:
  3571 ;;		_Delay10KTCYx
  3572 ;;		_PB1pressed
  3573 ;;		_PB2pressed
  3574 ;; This function is called by:
  3575 ;;		_SetMenu
  3576 ;;		_SetAlarm1
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text16
  3581  001E98                     __ptext16:
  3582                           	opt stack 0
  3583  001E98                     _SetMins:
  3584                           	opt stack 23
  3585                           
  3586                           ;mini-project-clock.c: 630: if(PB2pressed() && tm->mins < 59) {
  3587                           
  3588                           ;incstack = 0
  3589  001E98  EC4C  F013         	call	_PB2pressed	;wreg free
  3590  001E9C  0900               	iorlw	0
  3591  001E9E  B4D8               	btfsc	status,2,c
  3592  001EA0  D013               	goto	l2457
  3593  001EA2  EE20 F001          	lfsr	2,1
  3594  001EA6  502A               	movf	SetMins@tm,w,c
  3595  001EA8  26D9               	addwf	fsr2l,f,c
  3596  001EAA  502B               	movf	SetMins@tm+1,w,c
  3597  001EAC  22DA               	addwfc	fsr2h,f,c
  3598  001EAE  0E3B               	movlw	59
  3599  001EB0  60DF               	cpfslt	indf2,c
  3600  001EB2  D00A               	goto	l2457
  3601                           
  3602                           ;mini-project-clock.c: 631: tm->mins++;
  3603  001EB4  EE20 F001          	lfsr	2,1
  3604  001EB8  502A               	movf	SetMins@tm,w,c
  3605  001EBA  26D9               	addwf	fsr2l,f,c
  3606  001EBC  502B               	movf	SetMins@tm+1,w,c
  3607  001EBE  22DA               	addwfc	fsr2h,f,c
  3608  001EC0  2ADF               	incf	indf2,f,c
  3609                           
  3610                           ;mini-project-clock.c: 632: Delay10KTCYx(25);
  3611  001EC2  0E19               	movlw	25
  3612  001EC4  ECC3  F013         	call	_Delay10KTCYx
  3613  001EC8                     l2457:
  3614                           
  3615                           ;mini-project-clock.c: 633: }
  3616                           ;mini-project-clock.c: 634: if(PB2pressed() && tm->mins == 59) {
  3617  001EC8  EC4C  F013         	call	_PB2pressed	;wreg free
  3618  001ECC  0900               	iorlw	0
  3619  001ECE  B4D8               	btfsc	status,2,c
  3620  001ED0  D015               	goto	l2465
  3621  001ED2  EE20 F001          	lfsr	2,1
  3622  001ED6  502A               	movf	SetMins@tm,w,c
  3623  001ED8  26D9               	addwf	fsr2l,f,c
  3624  001EDA  502B               	movf	SetMins@tm+1,w,c
  3625  001EDC  22DA               	addwfc	fsr2h,f,c
  3626  001EDE  0E3B               	movlw	59
  3627  001EE0  18DE               	xorwf	postinc2,w,c
  3628  001EE2  A4D8               	btfss	status,2,c
  3629  001EE4  D00B               	goto	l2465
  3630                           
  3631                           ;mini-project-clock.c: 635: tm->mins = 0;
  3632  001EE6  EE20 F001          	lfsr	2,1
  3633  001EEA  502A               	movf	SetMins@tm,w,c
  3634  001EEC  26D9               	addwf	fsr2l,f,c
  3635  001EEE  502B               	movf	SetMins@tm+1,w,c
  3636  001EF0  22DA               	addwfc	fsr2h,f,c
  3637  001EF2  0E00               	movlw	0
  3638  001EF4  6EDF               	movwf	indf2,c
  3639                           
  3640                           ;mini-project-clock.c: 636: Delay10KTCYx(25);
  3641  001EF6  0E19               	movlw	25
  3642  001EF8  ECC3  F013         	call	_Delay10KTCYx
  3643  001EFC                     l2465:
  3644                           
  3645                           ;mini-project-clock.c: 637: }
  3646                           ;mini-project-clock.c: 638: if(PB1pressed() && tm->mins > 0) {
  3647  001EFC  EC66  F013         	call	_PB1pressed	;wreg free
  3648  001F00  0900               	iorlw	0
  3649  001F02  B4D8               	btfsc	status,2,c
  3650  001F04  D013               	goto	l2473
  3651  001F06  EE20 F001          	lfsr	2,1
  3652  001F0A  502A               	movf	SetMins@tm,w,c
  3653  001F0C  26D9               	addwf	fsr2l,f,c
  3654  001F0E  502B               	movf	SetMins@tm+1,w,c
  3655  001F10  22DA               	addwfc	fsr2h,f,c
  3656  001F12  50DF               	movf	indf2,w,c
  3657  001F14  B4D8               	btfsc	status,2,c
  3658  001F16  D00A               	goto	l2473
  3659                           
  3660                           ;mini-project-clock.c: 639: tm->mins--;
  3661  001F18  EE20 F001          	lfsr	2,1
  3662  001F1C  502A               	movf	SetMins@tm,w,c
  3663  001F1E  26D9               	addwf	fsr2l,f,c
  3664  001F20  502B               	movf	SetMins@tm+1,w,c
  3665  001F22  22DA               	addwfc	fsr2h,f,c
  3666  001F24  06DF               	decf	indf2,f,c
  3667                           
  3668                           ;mini-project-clock.c: 640: Delay10KTCYx(25);
  3669  001F26  0E19               	movlw	25
  3670  001F28  ECC3  F013         	call	_Delay10KTCYx
  3671  001F2C                     l2473:
  3672                           
  3673                           ;mini-project-clock.c: 641: }
  3674                           ;mini-project-clock.c: 642: if(PB1pressed() && tm->mins == 0) {
  3675  001F2C  EC66  F013         	call	_PB1pressed	;wreg free
  3676  001F30  0900               	iorlw	0
  3677  001F32  B4D8               	btfsc	status,2,c
  3678  001F34  0012               	return	
  3679  001F36  EE20 F001          	lfsr	2,1
  3680  001F3A  502A               	movf	SetMins@tm,w,c
  3681  001F3C  26D9               	addwf	fsr2l,f,c
  3682  001F3E  502B               	movf	SetMins@tm+1,w,c
  3683  001F40  22DA               	addwfc	fsr2h,f,c
  3684  001F42  50DF               	movf	indf2,w,c
  3685  001F44  A4D8               	btfss	status,2,c
  3686  001F46  0012               	return	
  3687                           
  3688                           ;mini-project-clock.c: 643: tm->mins = 59;
  3689  001F48  EE20 F001          	lfsr	2,1
  3690  001F4C  502A               	movf	SetMins@tm,w,c
  3691  001F4E  26D9               	addwf	fsr2l,f,c
  3692  001F50  502B               	movf	SetMins@tm+1,w,c
  3693  001F52  22DA               	addwfc	fsr2h,f,c
  3694  001F54  0E3B               	movlw	59
  3695  001F56  6EDF               	movwf	indf2,c
  3696                           
  3697                           ;mini-project-clock.c: 644: Delay10KTCYx(25);
  3698  001F58  0E19               	movlw	25
  3699  001F5A  ECC3  F013         	call	_Delay10KTCYx
  3700  001F5E  0012               	return	
  3701  001F60                     __end_of_SetMins:
  3702                           	opt stack 0
  3703                           tblptru	equ	0xFF8
  3704                           tblptrh	equ	0xFF7
  3705                           tblptrl	equ	0xFF6
  3706                           tablat	equ	0xFF5
  3707                           prodh	equ	0xFF4
  3708                           prodl	equ	0xFF3
  3709                           intcon	equ	0xFF2
  3710                           intcon2	equ	0xFF1
  3711                           postinc0	equ	0xFEE
  3712                           wreg	equ	0xFE8
  3713                           postdec1	equ	0xFE5
  3714                           fsr1l	equ	0xFE1
  3715                           indf2	equ	0xFDF
  3716                           postinc2	equ	0xFDE
  3717                           postdec2	equ	0xFDD
  3718                           fsr2h	equ	0xFDA
  3719                           fsr2l	equ	0xFD9
  3720                           status	equ	0xFD8
  3721                           
  3722 ;; *************** function _SetHrs *****************
  3723 ;; Defined at:
  3724 ;;		line 648 in file "mini-project-clock.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  th              2   41[COMRAM] PTR struct .
  3727 ;;		 -> Alarm1Time(3), MainTime(3), 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;		None
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  1    wreg      void 
  3732 ;; Registers used:
  3733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3742 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;Total ram usage:        3 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:    6
  3746 ;; This function calls:
  3747 ;;		_Delay10KTCYx
  3748 ;;		_PB1pressed
  3749 ;;		_PB2pressed
  3750 ;; This function is called by:
  3751 ;;		_SetMenu
  3752 ;;		_SetAlarm1
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           	psect	text17
  3757  001F60                     __ptext17:
  3758                           	opt stack 0
  3759  001F60                     _SetHrs:
  3760                           	opt stack 23
  3761                           
  3762                           ;mini-project-clock.c: 649: if(PB2pressed() && th->hrs < 23) {
  3763                           
  3764                           ;incstack = 0
  3765  001F60  EC4C  F013         	call	_PB2pressed	;wreg free
  3766  001F64  0900               	iorlw	0
  3767  001F66  B4D8               	btfsc	status,2,c
  3768  001F68  D00F               	goto	l2519
  3769  001F6A  C02A  FFD9         	movff	SetHrs@th,fsr2l
  3770  001F6E  C02B  FFDA         	movff	SetHrs@th+1,fsr2h
  3771  001F72  0E17               	movlw	23
  3772  001F74  60DF               	cpfslt	indf2,c
  3773  001F76  D008               	goto	l2519
  3774                           
  3775                           ;mini-project-clock.c: 650: th->hrs++;
  3776  001F78  C02A  FFD9         	movff	SetHrs@th,fsr2l
  3777  001F7C  C02B  FFDA         	movff	SetHrs@th+1,fsr2h
  3778  001F80  2ADF               	incf	indf2,f,c
  3779                           
  3780                           ;mini-project-clock.c: 651: Delay10KTCYx(25);
  3781  001F82  0E19               	movlw	25
  3782  001F84  ECC3  F013         	call	_Delay10KTCYx
  3783  001F88                     l2519:
  3784                           
  3785                           ;mini-project-clock.c: 652: }
  3786                           ;mini-project-clock.c: 653: if(PB2pressed() && th->hrs == 23) {
  3787  001F88  EC4C  F013         	call	_PB2pressed	;wreg free
  3788  001F8C  0900               	iorlw	0
  3789  001F8E  B4D8               	btfsc	status,2,c
  3790  001F90  D011               	goto	l2527
  3791  001F92  C02A  FFD9         	movff	SetHrs@th,fsr2l
  3792  001F96  C02B  FFDA         	movff	SetHrs@th+1,fsr2h
  3793  001F9A  0E17               	movlw	23
  3794  001F9C  18DE               	xorwf	postinc2,w,c
  3795  001F9E  A4D8               	btfss	status,2,c
  3796  001FA0  D009               	goto	l2527
  3797                           
  3798                           ;mini-project-clock.c: 654: th->hrs = 0;
  3799  001FA2  C02A  FFD9         	movff	SetHrs@th,fsr2l
  3800  001FA6  C02B  FFDA         	movff	SetHrs@th+1,fsr2h
  3801  001FAA  0E00               	movlw	0
  3802  001FAC  6EDF               	movwf	indf2,c
  3803                           
  3804                           ;mini-project-clock.c: 655: Delay10KTCYx(25);
  3805  001FAE  0E19               	movlw	25
  3806  001FB0  ECC3  F013         	call	_Delay10KTCYx
  3807  001FB4                     l2527:
  3808                           
  3809                           ;mini-project-clock.c: 656: }
  3810                           ;mini-project-clock.c: 657: if(PB1pressed() && th->hrs > 0) {
  3811  001FB4  EC66  F013         	call	_PB1pressed	;wreg free
  3812  001FB8  0900               	iorlw	0
  3813  001FBA  B4D8               	btfsc	status,2,c
  3814  001FBC  D00F               	goto	l2535
  3815  001FBE  C02A  FFD9         	movff	SetHrs@th,fsr2l
  3816  001FC2  C02B  FFDA         	movff	SetHrs@th+1,fsr2h
  3817  001FC6  50DF               	movf	indf2,w,c
  3818  001FC8  B4D8               	btfsc	status,2,c
  3819  001FCA  D008               	goto	l2535
  3820                           
  3821                           ;mini-project-clock.c: 658: th->hrs--;
  3822  001FCC  C02A  FFD9         	movff	SetHrs@th,fsr2l
  3823  001FD0  C02B  FFDA         	movff	SetHrs@th+1,fsr2h
  3824  001FD4  06DF               	decf	indf2,f,c
  3825                           
  3826                           ;mini-project-clock.c: 659: Delay10KTCYx(25);
  3827  001FD6  0E19               	movlw	25
  3828  001FD8  ECC3  F013         	call	_Delay10KTCYx
  3829  001FDC                     l2535:
  3830                           
  3831                           ;mini-project-clock.c: 660: }
  3832                           ;mini-project-clock.c: 661: if(PB1pressed() && th->hrs == 0) {
  3833  001FDC  EC66  F013         	call	_PB1pressed	;wreg free
  3834  001FE0  0900               	iorlw	0
  3835  001FE2  B4D8               	btfsc	status,2,c
  3836  001FE4  0012               	return	
  3837  001FE6  C02A  FFD9         	movff	SetHrs@th,fsr2l
  3838  001FEA  C02B  FFDA         	movff	SetHrs@th+1,fsr2h
  3839  001FEE  50DF               	movf	indf2,w,c
  3840  001FF0  A4D8               	btfss	status,2,c
  3841  001FF2  0012               	return	
  3842                           
  3843                           ;mini-project-clock.c: 662: th->hrs = 23;
  3844  001FF4  C02A  FFD9         	movff	SetHrs@th,fsr2l
  3845  001FF8  C02B  FFDA         	movff	SetHrs@th+1,fsr2h
  3846  001FFC  0E17               	movlw	23
  3847  001FFE  6EDF               	movwf	indf2,c
  3848                           
  3849                           ;mini-project-clock.c: 663: Delay10KTCYx(25);
  3850  002000  0E19               	movlw	25
  3851  002002  ECC3  F013         	call	_Delay10KTCYx
  3852  002006  0012               	return	
  3853  002008                     __end_of_SetHrs:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           intcon2	equ	0xFF1
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           postdec1	equ	0xFE5
  3866                           fsr1l	equ	0xFE1
  3867                           indf2	equ	0xFDF
  3868                           postinc2	equ	0xFDE
  3869                           postdec2	equ	0xFDD
  3870                           fsr2h	equ	0xFDA
  3871                           fsr2l	equ	0xFD9
  3872                           status	equ	0xFD8
  3873                           
  3874 ;; *************** function _PB2pressed *****************
  3875 ;; Defined at:
  3876 ;;		line 510 in file "mini-project-clock.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      unsigned char 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used:    1
  3896 ;; Hardware stack levels required when called:    5
  3897 ;; This function calls:
  3898 ;;		Nothing
  3899 ;; This function is called by:
  3900 ;;		_SetSecs
  3901 ;;		_SetMins
  3902 ;;		_SetHrs
  3903 ;;		_SetDay
  3904 ;;		_SetMonth
  3905 ;;		_SetYear
  3906 ;;		_SetAlarm1
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text18
  3911  002698                     __ptext18:
  3912                           	opt stack 0
  3913  002698                     _PB2pressed:
  3914                           	opt stack 23
  3915                           
  3916                           ;mini-project-clock.c: 511: if(PORTBbits.RB0 == 0) {
  3917                           
  3918                           ;incstack = 0
  3919  002698  B081               	btfsc	3969,0,c	;volatile
  3920  00269A  D016               	goto	l2229
  3921                           
  3922                           ;mini-project-clock.c: 512: ms_count1 = 0;
  3923  00269C  0E00               	movlw	0
  3924  00269E  0100               	movlb	0	; () banked
  3925  0026A0  6F6B               	movwf	(_ms_count1+1)& (0+255),b	;volatile
  3926  0026A2  0E00               	movlw	0
  3927  0026A4  6F6A               	movwf	_ms_count1& (0+255),b	;volatile
  3928  0026A6                     l2217:
  3929                           
  3930                           ; BSR set to: 0
  3931  0026A6  0100               	movlb	0	; () banked
  3932  0026A8  BF6B               	btfsc	(_ms_count1+1)& (0+255),7,b	;volatile
  3933  0026AA  D7FD               	goto	l2217
  3934  0026AC  0100               	movlb	0	; () banked
  3935  0026AE  516B               	movf	(_ms_count1+1)& (0+255),w,b	;volatile
  3936  0026B0  E105               	bnz	u1320
  3937  0026B2  0E19               	movlw	25
  3938  0026B4  0100               	movlb	0	; () banked
  3939  0026B6  5D6A               	subwf	_ms_count1& (0+255),w,b	;volatile
  3940  0026B8  A0D8               	btfss	status,0,c
  3941  0026BA  D7F5               	goto	l2217
  3942  0026BC                     u1320:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;mini-project-clock.c: 514: }
  3946                           ;mini-project-clock.c: 515: if(PORTBbits.RB0 == 0) {
  3947  0026BC  B081               	btfsc	3969,0,c	;volatile
  3948  0026BE  D002               	goto	l2225
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;mini-project-clock.c: 516: return(1);
  3952  0026C0  0E01               	movlw	1
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;mini-project-clock.c: 517: }
  3956                           
  3957                           ; BSR set to: 0
  3958  0026C2  0012               	return	
  3959  0026C4                     l2225:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;mini-project-clock.c: 518: else {
  3963                           ;mini-project-clock.c: 519: return(0);
  3964  0026C4  0E00               	movlw	0
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;mini-project-clock.c: 520: }
  3968                           ;mini-project-clock.c: 521: }
  3969                           
  3970                           ; BSR set to: 0
  3971  0026C6  0012               	return	
  3972  0026C8                     l2229:
  3973                           
  3974                           ;mini-project-clock.c: 522: else {
  3975                           ;mini-project-clock.c: 523: return(0);
  3976  0026C8  0E00               	movlw	0
  3977  0026CA  0012               	return	
  3978  0026CC                     __end_of_PB2pressed:
  3979                           	opt stack 0
  3980                           tblptru	equ	0xFF8
  3981                           tblptrh	equ	0xFF7
  3982                           tblptrl	equ	0xFF6
  3983                           tablat	equ	0xFF5
  3984                           prodh	equ	0xFF4
  3985                           prodl	equ	0xFF3
  3986                           intcon	equ	0xFF2
  3987                           intcon2	equ	0xFF1
  3988                           postinc0	equ	0xFEE
  3989                           wreg	equ	0xFE8
  3990                           postdec1	equ	0xFE5
  3991                           fsr1l	equ	0xFE1
  3992                           indf2	equ	0xFDF
  3993                           postinc2	equ	0xFDE
  3994                           postdec2	equ	0xFDD
  3995                           fsr2h	equ	0xFDA
  3996                           fsr2l	equ	0xFD9
  3997                           status	equ	0xFD8
  3998                           
  3999 ;; *************** function _PB1pressed *****************
  4000 ;; Defined at:
  4001 ;;		line 493 in file "mini-project-clock.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      unsigned char 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;Total ram usage:        0 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    5
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;;		_SetSecs
  4027 ;;		_SetMins
  4028 ;;		_SetHrs
  4029 ;;		_SetDay
  4030 ;;		_SetMonth
  4031 ;;		_SetYear
  4032 ;;		_SetAlarm1
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           	psect	text19
  4037  0026CC                     __ptext19:
  4038                           	opt stack 0
  4039  0026CC                     _PB1pressed:
  4040                           	opt stack 23
  4041                           
  4042                           ;mini-project-clock.c: 494: if(PORTJbits.RJ5 == 0) {
  4043                           
  4044                           ;incstack = 0
  4045  0026CC  BA88               	btfsc	3976,5,c	;volatile
  4046  0026CE  D016               	goto	l2205
  4047                           
  4048                           ;mini-project-clock.c: 495: ms_count1 = 0;
  4049  0026D0  0E00               	movlw	0
  4050  0026D2  0100               	movlb	0	; () banked
  4051  0026D4  6F6B               	movwf	(_ms_count1+1)& (0+255),b	;volatile
  4052  0026D6  0E00               	movlw	0
  4053  0026D8  6F6A               	movwf	_ms_count1& (0+255),b	;volatile
  4054  0026DA                     l2193:
  4055                           
  4056                           ; BSR set to: 0
  4057  0026DA  0100               	movlb	0	; () banked
  4058  0026DC  BF6B               	btfsc	(_ms_count1+1)& (0+255),7,b	;volatile
  4059  0026DE  D7FD               	goto	l2193
  4060  0026E0  0100               	movlb	0	; () banked
  4061  0026E2  516B               	movf	(_ms_count1+1)& (0+255),w,b	;volatile
  4062  0026E4  E105               	bnz	u1290
  4063  0026E6  0E19               	movlw	25
  4064  0026E8  0100               	movlb	0	; () banked
  4065  0026EA  5D6A               	subwf	_ms_count1& (0+255),w,b	;volatile
  4066  0026EC  A0D8               	btfss	status,0,c
  4067  0026EE  D7F5               	goto	l2193
  4068  0026F0                     u1290:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;mini-project-clock.c: 497: }
  4072                           ;mini-project-clock.c: 498: if(PORTJbits.RJ0 == 0) {
  4073  0026F0  B088               	btfsc	3976,0,c	;volatile
  4074  0026F2  D002               	goto	l2201
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;mini-project-clock.c: 499: return(1);
  4078  0026F4  0E01               	movlw	1
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;mini-project-clock.c: 500: }
  4082                           
  4083                           ; BSR set to: 0
  4084  0026F6  0012               	return	
  4085  0026F8                     l2201:
  4086                           
  4087                           ; BSR set to: 0
  4088                           ;mini-project-clock.c: 501: else {
  4089                           ;mini-project-clock.c: 502: return(0);
  4090  0026F8  0E00               	movlw	0
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;mini-project-clock.c: 503: }
  4094                           ;mini-project-clock.c: 504: }
  4095                           
  4096                           ; BSR set to: 0
  4097  0026FA  0012               	return	
  4098  0026FC                     l2205:
  4099                           
  4100                           ;mini-project-clock.c: 505: else {
  4101                           ;mini-project-clock.c: 506: return(0);
  4102  0026FC  0E00               	movlw	0
  4103  0026FE  0012               	return	
  4104  002700                     __end_of_PB1pressed:
  4105                           	opt stack 0
  4106                           tblptru	equ	0xFF8
  4107                           tblptrh	equ	0xFF7
  4108                           tblptrl	equ	0xFF6
  4109                           tablat	equ	0xFF5
  4110                           prodh	equ	0xFF4
  4111                           prodl	equ	0xFF3
  4112                           intcon	equ	0xFF2
  4113                           intcon2	equ	0xFF1
  4114                           postinc0	equ	0xFEE
  4115                           wreg	equ	0xFE8
  4116                           postdec1	equ	0xFE5
  4117                           fsr1l	equ	0xFE1
  4118                           indf2	equ	0xFDF
  4119                           postinc2	equ	0xFDE
  4120                           postdec2	equ	0xFDD
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8
  4124                           
  4125 ;; *************** function _SecsFlash *****************
  4126 ;; Defined at:
  4127 ;;		line 750 in file "mini-project-clock.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;		None
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;		None
  4132 ;; Return value:  Size  Location     Type
  4133 ;;                  1    wreg      void 
  4134 ;; Registers used:
  4135 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4136 ;; Tracked objects:
  4137 ;;		On entry : 0/0
  4138 ;;		On exit  : 0/0
  4139 ;;		Unchanged: 0/0
  4140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;Total ram usage:        0 bytes
  4146 ;; Hardware stack levels used:    1
  4147 ;; Hardware stack levels required when called:    6
  4148 ;; This function calls:
  4149 ;;		_Delay10KTCYx
  4150 ;; This function is called by:
  4151 ;;		_SetMenu
  4152 ;;		_SetAlarm1
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text20
  4157  002200                     __ptext20:
  4158                           	opt stack 0
  4159  002200                     _SecsFlash:
  4160                           	opt stack 22
  4161                           
  4162                           ;mini-project-clock.c: 751: disp_LEDS &= 0xC0;
  4163                           
  4164                           ;incstack = 0
  4165  002200  0EC0               	movlw	192
  4166  002202  1637               	andwf	_disp_LEDS,f,c	;volatile
  4167                           
  4168                           ;mini-project-clock.c: 752: disp_LEDS |= 0x01;
  4169  002204  8037               	bsf	_disp_LEDS,0,c	;volatile
  4170                           
  4171                           ;mini-project-clock.c: 753: dp_mask |= (1 << 2);
  4172  002206  8433               	bsf	_dp_mask,2,c	;volatile
  4173                           
  4174                           ;mini-project-clock.c: 754: disp_U2 = DispChars.S;
  4175  002208  0E14               	movlw	low (_DispChars+19)
  4176  00220A  6EF6               	movwf	tblptrl,c
  4177  00220C  0E10               	movlw	high (_DispChars+19)
  4178  00220E  6EF7               	movwf	tblptrh,c
  4179  002210                     	if	0	;tblptru may be non-zero
  4180  002210                     	endif
  4181  002210                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4182  002210  0E00               	movlw	low (__mediumconst shr (0+16))
  4183  002212  6EF8               	movwf	tblptru,c
  4184  002214                     	endif
  4185  002214  0008               	tblrd		*
  4186  002216  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4187                           
  4188                           ;mini-project-clock.c: 755: disp_U1 = DispChars.S;
  4189  00221A  0E14               	movlw	low (_DispChars+19)
  4190  00221C  6EF6               	movwf	tblptrl,c
  4191  00221E  0E10               	movlw	high (_DispChars+19)
  4192  002220  6EF7               	movwf	tblptrh,c
  4193  002222                     	if	0	;tblptru may be non-zero
  4194  002222                     	endif
  4195  002222                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4196  002222  0E00               	movlw	low (__mediumconst shr (0+16))
  4197  002224  6EF8               	movwf	tblptru,c
  4198  002226                     	endif
  4199  002226  0008               	tblrd		*
  4200  002228  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4201                           
  4202                           ;mini-project-clock.c: 756: Delay10KTCYx(100);
  4203  00222C  0E64               	movlw	100
  4204  00222E  ECC3  F013         	call	_Delay10KTCYx
  4205                           
  4206                           ;mini-project-clock.c: 757: disp_U2 = 0xFF;
  4207  002232  6832               	setf	_disp_U2,c	;volatile
  4208                           
  4209                           ;mini-project-clock.c: 758: disp_U1 = 0xFF;
  4210  002234  6831               	setf	_disp_U1,c	;volatile
  4211                           
  4212                           ;mini-project-clock.c: 759: Delay10KTCYx(100);
  4213  002236  0E64               	movlw	100
  4214  002238  ECC3  F013         	call	_Delay10KTCYx
  4215                           
  4216                           ;mini-project-clock.c: 760: disp_U2 = DispChars.S;
  4217  00223C  0E14               	movlw	low (_DispChars+19)
  4218  00223E  6EF6               	movwf	tblptrl,c
  4219  002240  0E10               	movlw	high (_DispChars+19)
  4220  002242  6EF7               	movwf	tblptrh,c
  4221  002244                     	if	0	;tblptru may be non-zero
  4222  002244                     	endif
  4223  002244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4224  002244  0E00               	movlw	low (__mediumconst shr (0+16))
  4225  002246  6EF8               	movwf	tblptru,c
  4226  002248                     	endif
  4227  002248  0008               	tblrd		*
  4228  00224A  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4229                           
  4230                           ;mini-project-clock.c: 761: disp_U1 = DispChars.S;
  4231  00224E  0E14               	movlw	low (_DispChars+19)
  4232  002250  6EF6               	movwf	tblptrl,c
  4233  002252  0E10               	movlw	high (_DispChars+19)
  4234  002254  6EF7               	movwf	tblptrh,c
  4235  002256                     	if	0	;tblptru may be non-zero
  4236  002256                     	endif
  4237  002256                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4238  002256  0E00               	movlw	low (__mediumconst shr (0+16))
  4239  002258  6EF8               	movwf	tblptru,c
  4240  00225A                     	endif
  4241  00225A  0008               	tblrd		*
  4242  00225C  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4243                           
  4244                           ;mini-project-clock.c: 762: Delay10KTCYx(100);
  4245  002260  0E64               	movlw	100
  4246  002262  ECC3  F013         	call	_Delay10KTCYx
  4247                           
  4248                           ;mini-project-clock.c: 763: disp_U2 = 0xFF;
  4249  002266  6832               	setf	_disp_U2,c	;volatile
  4250                           
  4251                           ;mini-project-clock.c: 764: disp_U1 = 0xFF;
  4252  002268  6831               	setf	_disp_U1,c	;volatile
  4253                           
  4254                           ;mini-project-clock.c: 765: Delay10KTCYx(100);
  4255  00226A  0E64               	movlw	100
  4256  00226C  ECC3  F013         	call	_Delay10KTCYx
  4257  002270  0012               	return		;funcret
  4258  002272                     __end_of_SecsFlash:
  4259                           	opt stack 0
  4260                           tblptru	equ	0xFF8
  4261                           tblptrh	equ	0xFF7
  4262                           tblptrl	equ	0xFF6
  4263                           tablat	equ	0xFF5
  4264                           prodh	equ	0xFF4
  4265                           prodl	equ	0xFF3
  4266                           intcon	equ	0xFF2
  4267                           intcon2	equ	0xFF1
  4268                           postinc0	equ	0xFEE
  4269                           wreg	equ	0xFE8
  4270                           postdec1	equ	0xFE5
  4271                           fsr1l	equ	0xFE1
  4272                           indf2	equ	0xFDF
  4273                           postinc2	equ	0xFDE
  4274                           postdec2	equ	0xFDD
  4275                           fsr2h	equ	0xFDA
  4276                           fsr2l	equ	0xFD9
  4277                           status	equ	0xFD8
  4278                           
  4279 ;; *************** function _MinsFlash *****************
  4280 ;; Defined at:
  4281 ;;		line 768 in file "mini-project-clock.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    6
  4302 ;; This function calls:
  4303 ;;		_Delay10KTCYx
  4304 ;; This function is called by:
  4305 ;;		_SetMenu
  4306 ;;		_SetAlarm1
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text21
  4311  002272                     __ptext21:
  4312                           	opt stack 0
  4313  002272                     _MinsFlash:
  4314                           	opt stack 22
  4315                           
  4316                           ;mini-project-clock.c: 769: disp_LEDS &= 0xC0;
  4317                           
  4318                           ;incstack = 0
  4319  002272  0EC0               	movlw	192
  4320  002274  1637               	andwf	_disp_LEDS,f,c	;volatile
  4321                           
  4322                           ;mini-project-clock.c: 770: disp_LEDS |= 0x02;
  4323  002276  8237               	bsf	_disp_LEDS,1,c	;volatile
  4324                           
  4325                           ;mini-project-clock.c: 771: dp_mask |= (1 << 2);
  4326  002278  8433               	bsf	_dp_mask,2,c	;volatile
  4327                           
  4328                           ;mini-project-clock.c: 772: disp_U2 = DispChars.M;
  4329  00227A  0E0F               	movlw	low (_DispChars+14)
  4330  00227C  6EF6               	movwf	tblptrl,c
  4331  00227E  0E10               	movlw	high (_DispChars+14)
  4332  002280  6EF7               	movwf	tblptrh,c
  4333  002282                     	if	0	;tblptru may be non-zero
  4334  002282                     	endif
  4335  002282                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4336  002282  0E00               	movlw	low (__mediumconst shr (0+16))
  4337  002284  6EF8               	movwf	tblptru,c
  4338  002286                     	endif
  4339  002286  0008               	tblrd		*
  4340  002288  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4341                           
  4342                           ;mini-project-clock.c: 773: disp_U1 = DispChars.i;
  4343  00228C  0E0C               	movlw	low (_DispChars+11)
  4344  00228E  6EF6               	movwf	tblptrl,c
  4345  002290  0E10               	movlw	high (_DispChars+11)
  4346  002292  6EF7               	movwf	tblptrh,c
  4347  002294                     	if	0	;tblptru may be non-zero
  4348  002294                     	endif
  4349  002294                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4350  002294  0E00               	movlw	low (__mediumconst shr (0+16))
  4351  002296  6EF8               	movwf	tblptru,c
  4352  002298                     	endif
  4353  002298  0008               	tblrd		*
  4354  00229A  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4355                           
  4356                           ;mini-project-clock.c: 774: Delay10KTCYx(100);
  4357  00229E  0E64               	movlw	100
  4358  0022A0  ECC3  F013         	call	_Delay10KTCYx
  4359                           
  4360                           ;mini-project-clock.c: 775: disp_U2 = 0xFF;
  4361  0022A4  6832               	setf	_disp_U2,c	;volatile
  4362                           
  4363                           ;mini-project-clock.c: 776: disp_U1 = 0xFF;
  4364  0022A6  6831               	setf	_disp_U1,c	;volatile
  4365                           
  4366                           ;mini-project-clock.c: 777: Delay10KTCYx(100);
  4367  0022A8  0E64               	movlw	100
  4368  0022AA  ECC3  F013         	call	_Delay10KTCYx
  4369                           
  4370                           ;mini-project-clock.c: 778: disp_U2 = DispChars.M;
  4371  0022AE  0E0F               	movlw	low (_DispChars+14)
  4372  0022B0  6EF6               	movwf	tblptrl,c
  4373  0022B2  0E10               	movlw	high (_DispChars+14)
  4374  0022B4  6EF7               	movwf	tblptrh,c
  4375  0022B6                     	if	0	;tblptru may be non-zero
  4376  0022B6                     	endif
  4377  0022B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4378  0022B6  0E00               	movlw	low (__mediumconst shr (0+16))
  4379  0022B8  6EF8               	movwf	tblptru,c
  4380  0022BA                     	endif
  4381  0022BA  0008               	tblrd		*
  4382  0022BC  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4383                           
  4384                           ;mini-project-clock.c: 779: disp_U1 = DispChars.i;
  4385  0022C0  0E0C               	movlw	low (_DispChars+11)
  4386  0022C2  6EF6               	movwf	tblptrl,c
  4387  0022C4  0E10               	movlw	high (_DispChars+11)
  4388  0022C6  6EF7               	movwf	tblptrh,c
  4389  0022C8                     	if	0	;tblptru may be non-zero
  4390  0022C8                     	endif
  4391  0022C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4392  0022C8  0E00               	movlw	low (__mediumconst shr (0+16))
  4393  0022CA  6EF8               	movwf	tblptru,c
  4394  0022CC                     	endif
  4395  0022CC  0008               	tblrd		*
  4396  0022CE  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4397                           
  4398                           ;mini-project-clock.c: 780: Delay10KTCYx(100);
  4399  0022D2  0E64               	movlw	100
  4400  0022D4  ECC3  F013         	call	_Delay10KTCYx
  4401                           
  4402                           ;mini-project-clock.c: 781: disp_U2 = 0xFF;
  4403  0022D8  6832               	setf	_disp_U2,c	;volatile
  4404                           
  4405                           ;mini-project-clock.c: 782: disp_U1 = 0xFF;
  4406  0022DA  6831               	setf	_disp_U1,c	;volatile
  4407                           
  4408                           ;mini-project-clock.c: 783: Delay10KTCYx(100);
  4409  0022DC  0E64               	movlw	100
  4410  0022DE  ECC3  F013         	call	_Delay10KTCYx
  4411  0022E2  0012               	return		;funcret
  4412  0022E4                     __end_of_MinsFlash:
  4413                           	opt stack 0
  4414                           tblptru	equ	0xFF8
  4415                           tblptrh	equ	0xFF7
  4416                           tblptrl	equ	0xFF6
  4417                           tablat	equ	0xFF5
  4418                           prodh	equ	0xFF4
  4419                           prodl	equ	0xFF3
  4420                           intcon	equ	0xFF2
  4421                           intcon2	equ	0xFF1
  4422                           postinc0	equ	0xFEE
  4423                           wreg	equ	0xFE8
  4424                           postdec1	equ	0xFE5
  4425                           fsr1l	equ	0xFE1
  4426                           indf2	equ	0xFDF
  4427                           postinc2	equ	0xFDE
  4428                           postdec2	equ	0xFDD
  4429                           fsr2h	equ	0xFDA
  4430                           fsr2l	equ	0xFD9
  4431                           status	equ	0xFD8
  4432                           
  4433 ;; *************** function _HrsFlash *****************
  4434 ;; Defined at:
  4435 ;;		line 786 in file "mini-project-clock.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;Total ram usage:        0 bytes
  4454 ;; Hardware stack levels used:    1
  4455 ;; Hardware stack levels required when called:    6
  4456 ;; This function calls:
  4457 ;;		_Delay10KTCYx
  4458 ;; This function is called by:
  4459 ;;		_SetMenu
  4460 ;;		_SetAlarm1
  4461 ;; This function uses a non-reentrant model
  4462 ;;
  4463                           
  4464                           	psect	text22
  4465  0022E4                     __ptext22:
  4466                           	opt stack 0
  4467  0022E4                     _HrsFlash:
  4468                           	opt stack 22
  4469                           
  4470                           ;mini-project-clock.c: 787: disp_LEDS &= 0xC0;
  4471                           
  4472                           ;incstack = 0
  4473  0022E4  0EC0               	movlw	192
  4474  0022E6  1637               	andwf	_disp_LEDS,f,c	;volatile
  4475                           
  4476                           ;mini-project-clock.c: 788: disp_LEDS |= 0x04;
  4477  0022E8  8437               	bsf	_disp_LEDS,2,c	;volatile
  4478                           
  4479                           ;mini-project-clock.c: 789: dp_mask |= (1 << 2);
  4480  0022EA  8433               	bsf	_dp_mask,2,c	;volatile
  4481                           
  4482                           ;mini-project-clock.c: 790: disp_U2 = DispChars.H;
  4483  0022EC  0E09               	movlw	low (_DispChars+8)
  4484  0022EE  6EF6               	movwf	tblptrl,c
  4485  0022F0  0E10               	movlw	high (_DispChars+8)
  4486  0022F2  6EF7               	movwf	tblptrh,c
  4487  0022F4                     	if	0	;tblptru may be non-zero
  4488  0022F4                     	endif
  4489  0022F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4490  0022F4  0E00               	movlw	low (__mediumconst shr (0+16))
  4491  0022F6  6EF8               	movwf	tblptru,c
  4492  0022F8                     	endif
  4493  0022F8  0008               	tblrd		*
  4494  0022FA  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4495                           
  4496                           ;mini-project-clock.c: 791: disp_U1 = DispChars.h;
  4497  0022FE  0E0A               	movlw	low (_DispChars+9)
  4498  002300  6EF6               	movwf	tblptrl,c
  4499  002302  0E10               	movlw	high (_DispChars+9)
  4500  002304  6EF7               	movwf	tblptrh,c
  4501  002306                     	if	0	;tblptru may be non-zero
  4502  002306                     	endif
  4503  002306                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4504  002306  0E00               	movlw	low (__mediumconst shr (0+16))
  4505  002308  6EF8               	movwf	tblptru,c
  4506  00230A                     	endif
  4507  00230A  0008               	tblrd		*
  4508  00230C  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4509                           
  4510                           ;mini-project-clock.c: 792: Delay10KTCYx(100);
  4511  002310  0E64               	movlw	100
  4512  002312  ECC3  F013         	call	_Delay10KTCYx
  4513                           
  4514                           ;mini-project-clock.c: 793: disp_U2 = 0xFF;
  4515  002316  6832               	setf	_disp_U2,c	;volatile
  4516                           
  4517                           ;mini-project-clock.c: 794: disp_U1 = 0xFF;
  4518  002318  6831               	setf	_disp_U1,c	;volatile
  4519                           
  4520                           ;mini-project-clock.c: 795: Delay10KTCYx(100);
  4521  00231A  0E64               	movlw	100
  4522  00231C  ECC3  F013         	call	_Delay10KTCYx
  4523                           
  4524                           ;mini-project-clock.c: 796: disp_U2 = DispChars.H;
  4525  002320  0E09               	movlw	low (_DispChars+8)
  4526  002322  6EF6               	movwf	tblptrl,c
  4527  002324  0E10               	movlw	high (_DispChars+8)
  4528  002326  6EF7               	movwf	tblptrh,c
  4529  002328                     	if	0	;tblptru may be non-zero
  4530  002328                     	endif
  4531  002328                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4532  002328  0E00               	movlw	low (__mediumconst shr (0+16))
  4533  00232A  6EF8               	movwf	tblptru,c
  4534  00232C                     	endif
  4535  00232C  0008               	tblrd		*
  4536  00232E  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4537                           
  4538                           ;mini-project-clock.c: 797: disp_U1 = DispChars.h;
  4539  002332  0E0A               	movlw	low (_DispChars+9)
  4540  002334  6EF6               	movwf	tblptrl,c
  4541  002336  0E10               	movlw	high (_DispChars+9)
  4542  002338  6EF7               	movwf	tblptrh,c
  4543  00233A                     	if	0	;tblptru may be non-zero
  4544  00233A                     	endif
  4545  00233A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4546  00233A  0E00               	movlw	low (__mediumconst shr (0+16))
  4547  00233C  6EF8               	movwf	tblptru,c
  4548  00233E                     	endif
  4549  00233E  0008               	tblrd		*
  4550  002340  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4551                           
  4552                           ;mini-project-clock.c: 798: Delay10KTCYx(100);
  4553  002344  0E64               	movlw	100
  4554  002346  ECC3  F013         	call	_Delay10KTCYx
  4555                           
  4556                           ;mini-project-clock.c: 799: disp_U2 = 0xFF;
  4557  00234A  6832               	setf	_disp_U2,c	;volatile
  4558                           
  4559                           ;mini-project-clock.c: 800: disp_U1 = 0xFF;
  4560  00234C  6831               	setf	_disp_U1,c	;volatile
  4561                           
  4562                           ;mini-project-clock.c: 801: Delay10KTCYx(100);
  4563  00234E  0E64               	movlw	100
  4564  002350  ECC3  F013         	call	_Delay10KTCYx
  4565  002354  0012               	return		;funcret
  4566  002356                     __end_of_HrsFlash:
  4567                           	opt stack 0
  4568                           tblptru	equ	0xFF8
  4569                           tblptrh	equ	0xFF7
  4570                           tblptrl	equ	0xFF6
  4571                           tablat	equ	0xFF5
  4572                           prodh	equ	0xFF4
  4573                           prodl	equ	0xFF3
  4574                           intcon	equ	0xFF2
  4575                           intcon2	equ	0xFF1
  4576                           postinc0	equ	0xFEE
  4577                           wreg	equ	0xFE8
  4578                           postdec1	equ	0xFE5
  4579                           fsr1l	equ	0xFE1
  4580                           indf2	equ	0xFDF
  4581                           postinc2	equ	0xFDE
  4582                           postdec2	equ	0xFDD
  4583                           fsr2h	equ	0xFDA
  4584                           fsr2l	equ	0xFD9
  4585                           status	equ	0xFD8
  4586                           
  4587 ;; *************** function _MonthFlash *****************
  4588 ;; Defined at:
  4589 ;;		line 822 in file "mini-project-clock.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;Total ram usage:        0 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    6
  4610 ;; This function calls:
  4611 ;;		_Delay10KTCYx
  4612 ;; This function is called by:
  4613 ;;		_SetMenu
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text23
  4618  00211A                     __ptext23:
  4619                           	opt stack 0
  4620  00211A                     _MonthFlash:
  4621                           	opt stack 23
  4622                           
  4623                           ;mini-project-clock.c: 823: disp_LEDS &= 0xC0;
  4624                           
  4625                           ;incstack = 0
  4626  00211A  0EC0               	movlw	192
  4627  00211C  1637               	andwf	_disp_LEDS,f,c	;volatile
  4628                           
  4629                           ;mini-project-clock.c: 824: disp_LEDS &= 0x10;
  4630  00211E  0E10               	movlw	16
  4631  002120  1637               	andwf	_disp_LEDS,f,c	;volatile
  4632                           
  4633                           ;mini-project-clock.c: 825: dp_mask |= (1 << 2);
  4634  002122  8433               	bsf	_dp_mask,2,c	;volatile
  4635                           
  4636                           ;mini-project-clock.c: 826: disp_U2 = DispChars.M;
  4637  002124  0E0F               	movlw	low (_DispChars+14)
  4638  002126  6EF6               	movwf	tblptrl,c
  4639  002128  0E10               	movlw	high (_DispChars+14)
  4640  00212A  6EF7               	movwf	tblptrh,c
  4641  00212C                     	if	0	;tblptru may be non-zero
  4642  00212C                     	endif
  4643  00212C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4644  00212C  0E00               	movlw	low (__mediumconst shr (0+16))
  4645  00212E  6EF8               	movwf	tblptru,c
  4646  002130                     	endif
  4647  002130  0008               	tblrd		*
  4648  002132  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4649                           
  4650                           ;mini-project-clock.c: 827: disp_U1 = DispChars.o;
  4651  002136  0E11               	movlw	low (_DispChars+16)
  4652  002138  6EF6               	movwf	tblptrl,c
  4653  00213A  0E10               	movlw	high (_DispChars+16)
  4654  00213C  6EF7               	movwf	tblptrh,c
  4655  00213E                     	if	0	;tblptru may be non-zero
  4656  00213E                     	endif
  4657  00213E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4658  00213E  0E00               	movlw	low (__mediumconst shr (0+16))
  4659  002140  6EF8               	movwf	tblptru,c
  4660  002142                     	endif
  4661  002142  0008               	tblrd		*
  4662  002144  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4663                           
  4664                           ;mini-project-clock.c: 828: Delay10KTCYx(100);
  4665  002148  0E64               	movlw	100
  4666  00214A  ECC3  F013         	call	_Delay10KTCYx
  4667                           
  4668                           ;mini-project-clock.c: 829: disp_U2 = 0xFF;
  4669  00214E  6832               	setf	_disp_U2,c	;volatile
  4670                           
  4671                           ;mini-project-clock.c: 830: disp_U1 = 0xFF;
  4672  002150  6831               	setf	_disp_U1,c	;volatile
  4673                           
  4674                           ;mini-project-clock.c: 831: Delay10KTCYx(100);
  4675  002152  0E64               	movlw	100
  4676  002154  ECC3  F013         	call	_Delay10KTCYx
  4677                           
  4678                           ;mini-project-clock.c: 832: disp_U2 = DispChars.M;
  4679  002158  0E0F               	movlw	low (_DispChars+14)
  4680  00215A  6EF6               	movwf	tblptrl,c
  4681  00215C  0E10               	movlw	high (_DispChars+14)
  4682  00215E  6EF7               	movwf	tblptrh,c
  4683  002160                     	if	0	;tblptru may be non-zero
  4684  002160                     	endif
  4685  002160                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4686  002160  0E00               	movlw	low (__mediumconst shr (0+16))
  4687  002162  6EF8               	movwf	tblptru,c
  4688  002164                     	endif
  4689  002164  0008               	tblrd		*
  4690  002166  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4691                           
  4692                           ;mini-project-clock.c: 833: disp_U1 = DispChars.o;
  4693  00216A  0E11               	movlw	low (_DispChars+16)
  4694  00216C  6EF6               	movwf	tblptrl,c
  4695  00216E  0E10               	movlw	high (_DispChars+16)
  4696  002170  6EF7               	movwf	tblptrh,c
  4697  002172                     	if	0	;tblptru may be non-zero
  4698  002172                     	endif
  4699  002172                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4700  002172  0E00               	movlw	low (__mediumconst shr (0+16))
  4701  002174  6EF8               	movwf	tblptru,c
  4702  002176                     	endif
  4703  002176  0008               	tblrd		*
  4704  002178  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4705                           
  4706                           ;mini-project-clock.c: 834: Delay10KTCYx(100);
  4707  00217C  0E64               	movlw	100
  4708  00217E  ECC3  F013         	call	_Delay10KTCYx
  4709                           
  4710                           ;mini-project-clock.c: 835: disp_U2 = 0xFF;
  4711  002182  6832               	setf	_disp_U2,c	;volatile
  4712                           
  4713                           ;mini-project-clock.c: 836: disp_U1 = 0xFF;
  4714  002184  6831               	setf	_disp_U1,c	;volatile
  4715                           
  4716                           ;mini-project-clock.c: 837: Delay10KTCYx(100);
  4717  002186  0E64               	movlw	100
  4718  002188  ECC3  F013         	call	_Delay10KTCYx
  4719  00218C  0012               	return		;funcret
  4720  00218E                     __end_of_MonthFlash:
  4721                           	opt stack 0
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           intcon	equ	0xFF2
  4729                           intcon2	equ	0xFF1
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           postdec1	equ	0xFE5
  4733                           fsr1l	equ	0xFE1
  4734                           indf2	equ	0xFDF
  4735                           postinc2	equ	0xFDE
  4736                           postdec2	equ	0xFDD
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           status	equ	0xFD8
  4740                           
  4741 ;; *************** function _DayFlash *****************
  4742 ;; Defined at:
  4743 ;;		line 804 in file "mini-project-clock.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;		None
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;		None
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;Total ram usage:        0 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    6
  4764 ;; This function calls:
  4765 ;;		_Delay10KTCYx
  4766 ;; This function is called by:
  4767 ;;		_SetMenu
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           	psect	text24
  4772  002356                     __ptext24:
  4773                           	opt stack 0
  4774  002356                     _DayFlash:
  4775                           	opt stack 23
  4776                           
  4777                           ;mini-project-clock.c: 805: disp_LEDS &= 0xC0;
  4778                           
  4779                           ;incstack = 0
  4780  002356  0EC0               	movlw	192
  4781  002358  1637               	andwf	_disp_LEDS,f,c	;volatile
  4782                           
  4783                           ;mini-project-clock.c: 806: disp_LEDS |= 0x20;
  4784  00235A  8A37               	bsf	_disp_LEDS,5,c	;volatile
  4785                           
  4786                           ;mini-project-clock.c: 807: dp_mask |= (1 << 2);
  4787  00235C  8433               	bsf	_dp_mask,2,c	;volatile
  4788                           
  4789                           ;mini-project-clock.c: 808: disp_U2 = DispChars.d;
  4790  00235E  0E05               	movlw	low (_DispChars+4)
  4791  002360  6EF6               	movwf	tblptrl,c
  4792  002362  0E10               	movlw	high (_DispChars+4)
  4793  002364  6EF7               	movwf	tblptrh,c
  4794  002366                     	if	0	;tblptru may be non-zero
  4795  002366                     	endif
  4796  002366                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4797  002366  0E00               	movlw	low (__mediumconst shr (0+16))
  4798  002368  6EF8               	movwf	tblptru,c
  4799  00236A                     	endif
  4800  00236A  0008               	tblrd		*
  4801  00236C  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4802                           
  4803                           ;mini-project-clock.c: 809: disp_U1 = DispChars.d;
  4804  002370  0E05               	movlw	low (_DispChars+4)
  4805  002372  6EF6               	movwf	tblptrl,c
  4806  002374  0E10               	movlw	high (_DispChars+4)
  4807  002376  6EF7               	movwf	tblptrh,c
  4808  002378                     	if	0	;tblptru may be non-zero
  4809  002378                     	endif
  4810  002378                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4811  002378  0E00               	movlw	low (__mediumconst shr (0+16))
  4812  00237A  6EF8               	movwf	tblptru,c
  4813  00237C                     	endif
  4814  00237C  0008               	tblrd		*
  4815  00237E  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4816                           
  4817                           ;mini-project-clock.c: 810: Delay10KTCYx(100);
  4818  002382  0E64               	movlw	100
  4819  002384  ECC3  F013         	call	_Delay10KTCYx
  4820                           
  4821                           ;mini-project-clock.c: 811: disp_U2 = 0xFF;
  4822  002388  6832               	setf	_disp_U2,c	;volatile
  4823                           
  4824                           ;mini-project-clock.c: 812: disp_U1 = 0xFF;
  4825  00238A  6831               	setf	_disp_U1,c	;volatile
  4826                           
  4827                           ;mini-project-clock.c: 813: Delay10KTCYx(100);
  4828  00238C  0E64               	movlw	100
  4829  00238E  ECC3  F013         	call	_Delay10KTCYx
  4830                           
  4831                           ;mini-project-clock.c: 814: disp_U2 = DispChars.d;
  4832  002392  0E05               	movlw	low (_DispChars+4)
  4833  002394  6EF6               	movwf	tblptrl,c
  4834  002396  0E10               	movlw	high (_DispChars+4)
  4835  002398  6EF7               	movwf	tblptrh,c
  4836  00239A                     	if	0	;tblptru may be non-zero
  4837  00239A                     	endif
  4838  00239A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4839  00239A  0E00               	movlw	low (__mediumconst shr (0+16))
  4840  00239C  6EF8               	movwf	tblptru,c
  4841  00239E                     	endif
  4842  00239E  0008               	tblrd		*
  4843  0023A0  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4844                           
  4845                           ;mini-project-clock.c: 815: disp_U1 = DispChars.d;
  4846  0023A4  0E05               	movlw	low (_DispChars+4)
  4847  0023A6  6EF6               	movwf	tblptrl,c
  4848  0023A8  0E10               	movlw	high (_DispChars+4)
  4849  0023AA  6EF7               	movwf	tblptrh,c
  4850  0023AC                     	if	0	;tblptru may be non-zero
  4851  0023AC                     	endif
  4852  0023AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4853  0023AC  0E00               	movlw	low (__mediumconst shr (0+16))
  4854  0023AE  6EF8               	movwf	tblptru,c
  4855  0023B0                     	endif
  4856  0023B0  0008               	tblrd		*
  4857  0023B2  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4858                           
  4859                           ;mini-project-clock.c: 816: Delay10KTCYx(100);
  4860  0023B6  0E64               	movlw	100
  4861  0023B8  ECC3  F013         	call	_Delay10KTCYx
  4862                           
  4863                           ;mini-project-clock.c: 817: disp_U2 = 0xFF;
  4864  0023BC  6832               	setf	_disp_U2,c	;volatile
  4865                           
  4866                           ;mini-project-clock.c: 818: disp_U1 = 0xFF;
  4867  0023BE  6831               	setf	_disp_U1,c	;volatile
  4868                           
  4869                           ;mini-project-clock.c: 819: Delay10KTCYx(100);
  4870  0023C0  0E64               	movlw	100
  4871  0023C2  ECC3  F013         	call	_Delay10KTCYx
  4872  0023C6  0012               	return		;funcret
  4873  0023C8                     __end_of_DayFlash:
  4874                           	opt stack 0
  4875                           tblptru	equ	0xFF8
  4876                           tblptrh	equ	0xFF7
  4877                           tblptrl	equ	0xFF6
  4878                           tablat	equ	0xFF5
  4879                           prodh	equ	0xFF4
  4880                           prodl	equ	0xFF3
  4881                           intcon	equ	0xFF2
  4882                           intcon2	equ	0xFF1
  4883                           postinc0	equ	0xFEE
  4884                           wreg	equ	0xFE8
  4885                           postdec1	equ	0xFE5
  4886                           fsr1l	equ	0xFE1
  4887                           indf2	equ	0xFDF
  4888                           postinc2	equ	0xFDE
  4889                           postdec2	equ	0xFDD
  4890                           fsr2h	equ	0xFDA
  4891                           fsr2l	equ	0xFD9
  4892                           status	equ	0xFD8
  4893                           
  4894 ;; *************** function _Alarm1Flash *****************
  4895 ;; Defined at:
  4896 ;;		line 858 in file "mini-project-clock.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;		None
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;		None
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  1    wreg      void 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4914 ;;Total ram usage:        0 bytes
  4915 ;; Hardware stack levels used:    1
  4916 ;; Hardware stack levels required when called:    6
  4917 ;; This function calls:
  4918 ;;		_Delay10KTCYx
  4919 ;; This function is called by:
  4920 ;;		_SetMenu
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text25
  4925  0023C8                     __ptext25:
  4926                           	opt stack 0
  4927  0023C8                     _Alarm1Flash:
  4928                           	opt stack 23
  4929                           
  4930                           ;mini-project-clock.c: 859: disp_LEDS &= 0xC0;
  4931                           
  4932                           ;incstack = 0
  4933  0023C8  0EC0               	movlw	192
  4934  0023CA  1637               	andwf	_disp_LEDS,f,c	;volatile
  4935                           
  4936                           ;mini-project-clock.c: 860: disp_LEDS |= 0x80;
  4937  0023CC  8E37               	bsf	_disp_LEDS,7,c	;volatile
  4938                           
  4939                           ;mini-project-clock.c: 861: dp_mask |= (1 << 2);
  4940  0023CE  8433               	bsf	_dp_mask,2,c	;volatile
  4941                           
  4942                           ;mini-project-clock.c: 862: disp_U2 = DispChars.A;
  4943  0023D0  0E01               	movlw	low _DispChars
  4944  0023D2  6EF6               	movwf	tblptrl,c
  4945  0023D4                     	if	1	;There is more than 1 active tblptr byte
  4946  0023D4  0E10               	movlw	high _DispChars
  4947  0023D6  6EF7               	movwf	tblptrh,c
  4948  0023D8                     	endif
  4949  0023D8                     	if	1	;There are 3 active tblptr bytes
  4950  0023D8  0E00               	movlw	low (_DispChars shr (0+16))
  4951  0023DA  6EF8               	movwf	tblptru,c
  4952  0023DC                     	endif
  4953  0023DC  0008               	tblrd		*
  4954  0023DE  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4955                           
  4956                           ;mini-project-clock.c: 863: disp_U1 = DispNums[1];
  4957  0023E2  0E35               	movlw	low (_DispNums+1)
  4958  0023E4  6EF6               	movwf	tblptrl,c
  4959  0023E6  0E10               	movlw	high (_DispNums+1)
  4960  0023E8  6EF7               	movwf	tblptrh,c
  4961  0023EA                     	if	0	;tblptru may be non-zero
  4962  0023EA                     	endif
  4963  0023EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4964  0023EA  0E00               	movlw	low (__mediumconst shr (0+16))
  4965  0023EC  6EF8               	movwf	tblptru,c
  4966  0023EE                     	endif
  4967  0023EE  0008               	tblrd		*
  4968  0023F0  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  4969                           
  4970                           ;mini-project-clock.c: 864: Delay10KTCYx(100);
  4971  0023F4  0E64               	movlw	100
  4972  0023F6  ECC3  F013         	call	_Delay10KTCYx
  4973                           
  4974                           ;mini-project-clock.c: 865: disp_U2 = 0xFF;
  4975  0023FA  6832               	setf	_disp_U2,c	;volatile
  4976                           
  4977                           ;mini-project-clock.c: 866: disp_U1 = 0xFF;
  4978  0023FC  6831               	setf	_disp_U1,c	;volatile
  4979                           
  4980                           ;mini-project-clock.c: 867: Delay10KTCYx(100);
  4981  0023FE  0E64               	movlw	100
  4982  002400  ECC3  F013         	call	_Delay10KTCYx
  4983                           
  4984                           ;mini-project-clock.c: 868: disp_U2 = DispChars.A;
  4985  002404  0E01               	movlw	low _DispChars
  4986  002406  6EF6               	movwf	tblptrl,c
  4987  002408                     	if	1	;There is more than 1 active tblptr byte
  4988  002408  0E10               	movlw	high _DispChars
  4989  00240A  6EF7               	movwf	tblptrh,c
  4990  00240C                     	endif
  4991  00240C                     	if	1	;There are 3 active tblptr bytes
  4992  00240C  0E00               	movlw	low (_DispChars shr (0+16))
  4993  00240E  6EF8               	movwf	tblptru,c
  4994  002410                     	endif
  4995  002410  0008               	tblrd		*
  4996  002412  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  4997                           
  4998                           ;mini-project-clock.c: 869: disp_U1 = DispNums[1];
  4999  002416  0E35               	movlw	low (_DispNums+1)
  5000  002418  6EF6               	movwf	tblptrl,c
  5001  00241A  0E10               	movlw	high (_DispNums+1)
  5002  00241C  6EF7               	movwf	tblptrh,c
  5003  00241E                     	if	0	;tblptru may be non-zero
  5004  00241E                     	endif
  5005  00241E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5006  00241E  0E00               	movlw	low (__mediumconst shr (0+16))
  5007  002420  6EF8               	movwf	tblptru,c
  5008  002422                     	endif
  5009  002422  0008               	tblrd		*
  5010  002424  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  5011                           
  5012                           ;mini-project-clock.c: 870: Delay10KTCYx(100);
  5013  002428  0E64               	movlw	100
  5014  00242A  ECC3  F013         	call	_Delay10KTCYx
  5015                           
  5016                           ;mini-project-clock.c: 871: disp_U2 = 0xFF;
  5017  00242E  6832               	setf	_disp_U2,c	;volatile
  5018                           
  5019                           ;mini-project-clock.c: 872: disp_U1 = 0xFF;
  5020  002430  6831               	setf	_disp_U1,c	;volatile
  5021                           
  5022                           ;mini-project-clock.c: 873: Delay10KTCYx(100);
  5023  002432  0E64               	movlw	100
  5024  002434  ECC3  F013         	call	_Delay10KTCYx
  5025  002438  0012               	return		;funcret
  5026  00243A                     __end_of_Alarm1Flash:
  5027                           	opt stack 0
  5028                           tblptru	equ	0xFF8
  5029                           tblptrh	equ	0xFF7
  5030                           tblptrl	equ	0xFF6
  5031                           tablat	equ	0xFF5
  5032                           prodh	equ	0xFF4
  5033                           prodl	equ	0xFF3
  5034                           intcon	equ	0xFF2
  5035                           intcon2	equ	0xFF1
  5036                           postinc0	equ	0xFEE
  5037                           wreg	equ	0xFE8
  5038                           postdec1	equ	0xFE5
  5039                           fsr1l	equ	0xFE1
  5040                           indf2	equ	0xFDF
  5041                           postinc2	equ	0xFDE
  5042                           postdec2	equ	0xFDD
  5043                           fsr2h	equ	0xFDA
  5044                           fsr2l	equ	0xFD9
  5045                           status	equ	0xFD8
  5046                           
  5047 ;; *************** function _ReadADC *****************
  5048 ;; Defined at:
  5049 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\ADC\adcread.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;		None
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  2   39[COMRAM] int 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;Total ram usage:        4 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    5
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_main
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text26
  5078  002808                     __ptext26:
  5079                           	opt stack 0
  5080  002808                     _ReadADC:
  5081                           	opt stack 25
  5082                           
  5083                           ;incstack = 0
  5084  002808  50C4               	movf	4036,w,c	;volatile
  5085  00280A  6E2A               	movwf	??_ReadADC& (0+255),c
  5086  00280C  50C3               	movf	4035,w,c	;volatile
  5087  00280E  6E28               	movwf	?_ReadADC,c
  5088  002810  C02A  F029         	movff	??_ReadADC,?_ReadADC+1
  5089  002814  0012               	return	
  5090  002816                     __end_of_ReadADC:
  5091                           	opt stack 0
  5092                           tblptru	equ	0xFF8
  5093                           tblptrh	equ	0xFF7
  5094                           tblptrl	equ	0xFF6
  5095                           tablat	equ	0xFF5
  5096                           prodh	equ	0xFF4
  5097                           prodl	equ	0xFF3
  5098                           intcon	equ	0xFF2
  5099                           intcon2	equ	0xFF1
  5100                           postinc0	equ	0xFEE
  5101                           wreg	equ	0xFE8
  5102                           postdec1	equ	0xFE5
  5103                           fsr1l	equ	0xFE1
  5104                           indf2	equ	0xFDF
  5105                           postinc2	equ	0xFDE
  5106                           postdec2	equ	0xFDD
  5107                           fsr2h	equ	0xFDA
  5108                           fsr2l	equ	0xFD9
  5109                           status	equ	0xFD8
  5110                           
  5111 ;; *************** function _DegreesFlash *****************
  5112 ;; Defined at:
  5113 ;;		line 876 in file "mini-project-clock.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;Total ram usage:        0 bytes
  5132 ;; Hardware stack levels used:    1
  5133 ;; Hardware stack levels required when called:    6
  5134 ;; This function calls:
  5135 ;;		_Delay10KTCYx
  5136 ;; This function is called by:
  5137 ;;		_main
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text27
  5142  00243A                     __ptext27:
  5143                           	opt stack 0
  5144  00243A                     _DegreesFlash:
  5145                           	opt stack 24
  5146                           
  5147                           ;mini-project-clock.c: 877: disp_LEDS = 0x00;
  5148                           
  5149                           ;incstack = 0
  5150  00243A  0E00               	movlw	0
  5151  00243C  6E37               	movwf	_disp_LEDS,c	;volatile
  5152                           
  5153                           ;mini-project-clock.c: 878: dp_mask |= (1 << 2);
  5154  00243E  8433               	bsf	_dp_mask,2,c	;volatile
  5155                           
  5156                           ;mini-project-clock.c: 879: disp_U2 = DispChars.uo;
  5157  002440  0E19               	movlw	low (_DispChars+24)
  5158  002442  6EF6               	movwf	tblptrl,c
  5159  002444  0E10               	movlw	high (_DispChars+24)
  5160  002446  6EF7               	movwf	tblptrh,c
  5161  002448                     	if	0	;tblptru may be non-zero
  5162  002448                     	endif
  5163  002448                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5164  002448  0E00               	movlw	low (__mediumconst shr (0+16))
  5165  00244A  6EF8               	movwf	tblptru,c
  5166  00244C                     	endif
  5167  00244C  0008               	tblrd		*
  5168  00244E  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  5169                           
  5170                           ;mini-project-clock.c: 880: disp_U1 = DispChars.C;
  5171  002452  0E03               	movlw	low (_DispChars+2)
  5172  002454  6EF6               	movwf	tblptrl,c
  5173  002456  0E10               	movlw	high (_DispChars+2)
  5174  002458  6EF7               	movwf	tblptrh,c
  5175  00245A                     	if	0	;tblptru may be non-zero
  5176  00245A                     	endif
  5177  00245A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5178  00245A  0E00               	movlw	low (__mediumconst shr (0+16))
  5179  00245C  6EF8               	movwf	tblptru,c
  5180  00245E                     	endif
  5181  00245E  0008               	tblrd		*
  5182  002460  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  5183                           
  5184                           ;mini-project-clock.c: 881: Delay10KTCYx(100);
  5185  002464  0E64               	movlw	100
  5186  002466  ECC3  F013         	call	_Delay10KTCYx
  5187                           
  5188                           ;mini-project-clock.c: 882: disp_U2 = 0xFF;
  5189  00246A  6832               	setf	_disp_U2,c	;volatile
  5190                           
  5191                           ;mini-project-clock.c: 883: disp_U1 = 0xFF;
  5192  00246C  6831               	setf	_disp_U1,c	;volatile
  5193                           
  5194                           ;mini-project-clock.c: 884: Delay10KTCYx(100);
  5195  00246E  0E64               	movlw	100
  5196  002470  ECC3  F013         	call	_Delay10KTCYx
  5197                           
  5198                           ;mini-project-clock.c: 885: disp_U2 = DispChars.uo;
  5199  002474  0E19               	movlw	low (_DispChars+24)
  5200  002476  6EF6               	movwf	tblptrl,c
  5201  002478  0E10               	movlw	high (_DispChars+24)
  5202  00247A  6EF7               	movwf	tblptrh,c
  5203  00247C                     	if	0	;tblptru may be non-zero
  5204  00247C                     	endif
  5205  00247C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5206  00247C  0E00               	movlw	low (__mediumconst shr (0+16))
  5207  00247E  6EF8               	movwf	tblptru,c
  5208  002480                     	endif
  5209  002480  0008               	tblrd		*
  5210  002482  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  5211                           
  5212                           ;mini-project-clock.c: 886: disp_U1 = DispChars.C;
  5213  002486  0E03               	movlw	low (_DispChars+2)
  5214  002488  6EF6               	movwf	tblptrl,c
  5215  00248A  0E10               	movlw	high (_DispChars+2)
  5216  00248C  6EF7               	movwf	tblptrh,c
  5217  00248E                     	if	0	;tblptru may be non-zero
  5218  00248E                     	endif
  5219  00248E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5220  00248E  0E00               	movlw	low (__mediumconst shr (0+16))
  5221  002490  6EF8               	movwf	tblptru,c
  5222  002492                     	endif
  5223  002492  0008               	tblrd		*
  5224  002494  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  5225                           
  5226                           ;mini-project-clock.c: 887: Delay10KTCYx(100);
  5227  002498  0E64               	movlw	100
  5228  00249A  ECC3  F013         	call	_Delay10KTCYx
  5229                           
  5230                           ;mini-project-clock.c: 888: disp_U2 = 0xFF;
  5231  00249E  6832               	setf	_disp_U2,c	;volatile
  5232                           
  5233                           ;mini-project-clock.c: 889: disp_U1 = 0xFF;
  5234  0024A0  6831               	setf	_disp_U1,c	;volatile
  5235                           
  5236                           ;mini-project-clock.c: 890: Delay10KTCYx(100);
  5237  0024A2  0E64               	movlw	100
  5238  0024A4  ECC3  F013         	call	_Delay10KTCYx
  5239  0024A8  0012               	return		;funcret
  5240  0024AA                     __end_of_DegreesFlash:
  5241                           	opt stack 0
  5242                           tblptru	equ	0xFF8
  5243                           tblptrh	equ	0xFF7
  5244                           tblptrl	equ	0xFF6
  5245                           tablat	equ	0xFF5
  5246                           prodh	equ	0xFF4
  5247                           prodl	equ	0xFF3
  5248                           intcon	equ	0xFF2
  5249                           intcon2	equ	0xFF1
  5250                           postinc0	equ	0xFEE
  5251                           wreg	equ	0xFE8
  5252                           postdec1	equ	0xFE5
  5253                           fsr1l	equ	0xFE1
  5254                           indf2	equ	0xFDF
  5255                           postinc2	equ	0xFDE
  5256                           postdec2	equ	0xFDD
  5257                           fsr2h	equ	0xFDA
  5258                           fsr2l	equ	0xFD9
  5259                           status	equ	0xFD8
  5260                           
  5261 ;; *************** function _CurrentDisplay *****************
  5262 ;; Defined at:
  5263 ;;		line 947 in file "mini-project-clock.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  index           1    wreg     unsigned char 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  index           1    5[BANK0 ] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;Total ram usage:        1 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    7
  5284 ;; This function calls:
  5285 ;;		_Num2Disp
  5286 ;; This function is called by:
  5287 ;;		_main
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text28
  5292  001A08                     __ptext28:
  5293                           	opt stack 0
  5294  001A08                     _CurrentDisplay:
  5295                           	opt stack 23
  5296                           
  5297                           ;incstack = 0
  5298                           ;CurrentDisplay@index stored from wreg
  5299  001A08  0100               	movlb	0	; () banked
  5300  001A0A  6F7F               	movwf	CurrentDisplay@index& (0+255),b
  5301                           
  5302                           ;mini-project-clock.c: 948: switch(index) {
  5303  001A0C  D07B               	goto	l3519
  5304  001A0E                     l3489:
  5305                           
  5306                           ;mini-project-clock.c: 950: Num2Disp(&MainDate.day);
  5307  001A0E  0E6F               	movlw	low _MainDate
  5308  001A10  0100               	movlb	0	; () banked
  5309  001A12  6F7A               	movwf	Num2Disp@time& (0+255),b
  5310  001A14  0E00               	movlw	high _MainDate
  5311  001A16  0100               	movlb	0	; () banked
  5312  001A18  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  5313  001A1A  0100               	movlb	0	; () banked
  5314  001A1C  517A               	movf	Num2Disp@time& (0+255),w,b
  5315  001A1E  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  5316  001A20  A4D8               	btfss	status,2,c
  5317  001A22  0E20               	movlw	32
  5318  001A24  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  5319  001A26  EC97  F00D         	call	_Num2Disp	;wreg free
  5320                           
  5321                           ;mini-project-clock.c: 951: disp_LEDS = 0x20;
  5322  001A2A  0E20               	movlw	32
  5323  001A2C  6E37               	movwf	_disp_LEDS,c	;volatile
  5324                           
  5325                           ;mini-project-clock.c: 952: break;
  5326  001A2E  0012               	return	
  5327  001A30                     l3493:
  5328                           
  5329                           ;mini-project-clock.c: 954: Num2Disp(&MainDate.month);
  5330  001A30  0E70               	movlw	low (_MainDate+1)
  5331  001A32  0100               	movlb	0	; () banked
  5332  001A34  6F7A               	movwf	Num2Disp@time& (0+255),b
  5333  001A36  0E00               	movlw	high (_MainDate+1)
  5334  001A38  0100               	movlb	0	; () banked
  5335  001A3A  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  5336  001A3C  0100               	movlb	0	; () banked
  5337  001A3E  517A               	movf	Num2Disp@time& (0+255),w,b
  5338  001A40  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  5339  001A42  A4D8               	btfss	status,2,c
  5340  001A44  0E20               	movlw	32
  5341  001A46  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  5342  001A48  EC97  F00D         	call	_Num2Disp	;wreg free
  5343                           
  5344                           ;mini-project-clock.c: 955: disp_LEDS = 0x10;
  5345  001A4C  0E10               	movlw	16
  5346  001A4E  6E37               	movwf	_disp_LEDS,c	;volatile
  5347                           
  5348                           ;mini-project-clock.c: 956: break;
  5349  001A50  0012               	return	
  5350  001A52                     l3497:
  5351                           
  5352                           ;mini-project-clock.c: 958: Num2Disp(&MainDate.year_short);
  5353  001A52  0E71               	movlw	low (_MainDate+2)
  5354  001A54  0100               	movlb	0	; () banked
  5355  001A56  6F7A               	movwf	Num2Disp@time& (0+255),b
  5356  001A58  0E00               	movlw	high (_MainDate+2)
  5357  001A5A  0100               	movlb	0	; () banked
  5358  001A5C  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  5359  001A5E  0100               	movlb	0	; () banked
  5360  001A60  517A               	movf	Num2Disp@time& (0+255),w,b
  5361  001A62  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  5362  001A64  A4D8               	btfss	status,2,c
  5363  001A66  0E20               	movlw	32
  5364  001A68  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  5365  001A6A  EC97  F00D         	call	_Num2Disp	;wreg free
  5366                           
  5367                           ;mini-project-clock.c: 959: disp_LEDS = 0x08;
  5368  001A6E  0E08               	movlw	8
  5369  001A70  6E37               	movwf	_disp_LEDS,c	;volatile
  5370                           
  5371                           ;mini-project-clock.c: 960: break;
  5372  001A72  0012               	return	
  5373  001A74                     l3501:
  5374                           
  5375                           ;mini-project-clock.c: 962: Num2Disp(&MainTime.hrs);
  5376  001A74  0E77               	movlw	low _MainTime
  5377  001A76  0100               	movlb	0	; () banked
  5378  001A78  6F7A               	movwf	Num2Disp@time& (0+255),b
  5379  001A7A  0E00               	movlw	high _MainTime
  5380  001A7C  0100               	movlb	0	; () banked
  5381  001A7E  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  5382  001A80  0100               	movlb	0	; () banked
  5383  001A82  517A               	movf	Num2Disp@time& (0+255),w,b
  5384  001A84  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  5385  001A86  A4D8               	btfss	status,2,c
  5386  001A88  0E20               	movlw	32
  5387  001A8A  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  5388  001A8C  EC97  F00D         	call	_Num2Disp	;wreg free
  5389                           
  5390                           ;mini-project-clock.c: 963: disp_LEDS = 0x04;
  5391  001A90  0E04               	movlw	4
  5392  001A92  6E37               	movwf	_disp_LEDS,c	;volatile
  5393                           
  5394                           ;mini-project-clock.c: 964: break;
  5395  001A94  0012               	return	
  5396  001A96                     l3505:
  5397                           
  5398                           ;mini-project-clock.c: 966: Num2Disp(&MainTime.mins);
  5399  001A96  0E78               	movlw	low (_MainTime+1)
  5400  001A98  0100               	movlb	0	; () banked
  5401  001A9A  6F7A               	movwf	Num2Disp@time& (0+255),b
  5402  001A9C  0E00               	movlw	high (_MainTime+1)
  5403  001A9E  0100               	movlb	0	; () banked
  5404  001AA0  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  5405  001AA2  0100               	movlb	0	; () banked
  5406  001AA4  517A               	movf	Num2Disp@time& (0+255),w,b
  5407  001AA6  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  5408  001AA8  A4D8               	btfss	status,2,c
  5409  001AAA  0E20               	movlw	32
  5410  001AAC  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  5411  001AAE  EC97  F00D         	call	_Num2Disp	;wreg free
  5412                           
  5413                           ;mini-project-clock.c: 967: disp_LEDS = 0x02;
  5414  001AB2  0E02               	movlw	2
  5415  001AB4  6E37               	movwf	_disp_LEDS,c	;volatile
  5416                           
  5417                           ;mini-project-clock.c: 968: break;
  5418  001AB6  0012               	return	
  5419  001AB8                     l3509:
  5420                           
  5421                           ;mini-project-clock.c: 970: Num2Disp(&MainTime.secs);
  5422  001AB8  0E79               	movlw	low (_MainTime+2)
  5423  001ABA  0100               	movlb	0	; () banked
  5424  001ABC  6F7A               	movwf	Num2Disp@time& (0+255),b
  5425  001ABE  0E00               	movlw	high (_MainTime+2)
  5426  001AC0  0100               	movlb	0	; () banked
  5427  001AC2  6F7B               	movwf	(Num2Disp@time+1)& (0+255),b
  5428  001AC4  0100               	movlb	0	; () banked
  5429  001AC6  517A               	movf	Num2Disp@time& (0+255),w,b
  5430  001AC8  117B               	iorwf	(Num2Disp@time+1)& (0+255),w,b
  5431  001ACA  A4D8               	btfss	status,2,c
  5432  001ACC  0E20               	movlw	32
  5433  001ACE  6F7C               	movwf	(Num2Disp@time+2)& (0+255),b
  5434  001AD0  EC97  F00D         	call	_Num2Disp	;wreg free
  5435                           
  5436                           ;mini-project-clock.c: 971: disp_LEDS = 0x01;
  5437  001AD4  0E01               	movlw	1
  5438  001AD6  6E37               	movwf	_disp_LEDS,c	;volatile
  5439                           
  5440                           ;mini-project-clock.c: 972: break;
  5441  001AD8  0012               	return	
  5442  001ADA                     l3513:
  5443                           
  5444                           ;mini-project-clock.c: 974: disp_U2 = DispChars.E;
  5445  001ADA  0E06               	movlw	low (_DispChars+5)
  5446  001ADC  6EF6               	movwf	tblptrl,c
  5447  001ADE  0E10               	movlw	high (_DispChars+5)
  5448  001AE0  6EF7               	movwf	tblptrh,c
  5449  001AE2                     	if	0	;tblptru may be non-zero
  5450  001AE2                     	endif
  5451  001AE2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5452  001AE2  0E00               	movlw	low (__mediumconst shr (0+16))
  5453  001AE4  6EF8               	movwf	tblptru,c
  5454  001AE6                     	endif
  5455  001AE6  0008               	tblrd		*
  5456  001AE8  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  5457                           
  5458                           ;mini-project-clock.c: 975: disp_U1 = DispChars.r;
  5459  001AEC  0E13               	movlw	low (_DispChars+18)
  5460  001AEE  6EF6               	movwf	tblptrl,c
  5461  001AF0  0E10               	movlw	high (_DispChars+18)
  5462  001AF2  6EF7               	movwf	tblptrh,c
  5463  001AF4                     	if	0	;tblptru may be non-zero
  5464  001AF4                     	endif
  5465  001AF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5466  001AF4  0E00               	movlw	low (__mediumconst shr (0+16))
  5467  001AF6  6EF8               	movwf	tblptru,c
  5468  001AF8                     	endif
  5469  001AF8  0008               	tblrd		*
  5470  001AFA  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  5471                           
  5472                           ;mini-project-clock.c: 976: disp_LEDS = 0x04;
  5473  001AFE  0E04               	movlw	4
  5474  001B00  6E37               	movwf	_disp_LEDS,c	;volatile
  5475                           
  5476                           ;mini-project-clock.c: 978: }
  5477                           
  5478                           ;mini-project-clock.c: 977: break;
  5479  001B02  0012               	return	
  5480  001B04                     l3519:
  5481  001B04  0100               	movlb	0	; () banked
  5482  001B06  517F               	movf	CurrentDisplay@index& (0+255),w,b
  5483                           
  5484                           ; Switch size 1, requested type "space"
  5485                           ; Number of cases is 6, Range of values is 0 to 5
  5486                           ; switch strategies available:
  5487                           ; Name         Instructions Cycles
  5488                           ; simple_byte           19    10 (average)
  5489                           ;	Chosen strategy is simple_byte
  5490  001B08  0A00               	xorlw	0	; case 0
  5491  001B0A  B4D8               	btfsc	status,2,c
  5492  001B0C  D780               	goto	l3489
  5493  001B0E  0A01               	xorlw	1	; case 1
  5494  001B10  B4D8               	btfsc	status,2,c
  5495  001B12  D78E               	goto	l3493
  5496  001B14  0A03               	xorlw	3	; case 2
  5497  001B16  B4D8               	btfsc	status,2,c
  5498  001B18  D79C               	goto	l3497
  5499  001B1A  0A01               	xorlw	1	; case 3
  5500  001B1C  B4D8               	btfsc	status,2,c
  5501  001B1E  D7AA               	goto	l3501
  5502  001B20  0A07               	xorlw	7	; case 4
  5503  001B22  B4D8               	btfsc	status,2,c
  5504  001B24  D7B8               	goto	l3505
  5505  001B26  0A01               	xorlw	1	; case 5
  5506  001B28  B4D8               	btfsc	status,2,c
  5507  001B2A  D7C6               	goto	l3509
  5508  001B2C  D7D6               	goto	l3513
  5509  001B2E                     __end_of_CurrentDisplay:
  5510                           	opt stack 0
  5511                           tblptru	equ	0xFF8
  5512                           tblptrh	equ	0xFF7
  5513                           tblptrl	equ	0xFF6
  5514                           tablat	equ	0xFF5
  5515                           prodh	equ	0xFF4
  5516                           prodl	equ	0xFF3
  5517                           intcon	equ	0xFF2
  5518                           intcon2	equ	0xFF1
  5519                           postinc0	equ	0xFEE
  5520                           wreg	equ	0xFE8
  5521                           postdec1	equ	0xFE5
  5522                           fsr1l	equ	0xFE1
  5523                           indf2	equ	0xFDF
  5524                           postinc2	equ	0xFDE
  5525                           postdec2	equ	0xFDD
  5526                           fsr2h	equ	0xFDA
  5527                           fsr2l	equ	0xFD9
  5528                           status	equ	0xFD8
  5529                           
  5530 ;; *************** function _Num2Disp *****************
  5531 ;; Defined at:
  5532 ;;		line 388 in file "mini-project-clock.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  time            3    0[BANK0 ] PTR const unsigned char 
  5535 ;;		 -> ROM(131071), main@temperature(1), Alarm1Time.secs(1), Alarm1Time.mins(1), 
  5536 ;;		 -> Alarm1Time.hrs(1), Alarm1Time(3), MainDate.year_short(1), MainDate.month(1), 
  5537 ;;		 -> MainDate.day(1), MainDate(5), MainTime.secs(1), MainTime.mins(1), 
  5538 ;;		 -> MainTime.hrs(1), MainTime(3), 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  units           1    4[BANK0 ] unsigned char 
  5541 ;;  tens            1    3[BANK0 ] unsigned char 
  5542 ;; Return value:  Size  Location     Type
  5543 ;;                  1    wreg      void 
  5544 ;; Registers used:
  5545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5546 ;; Tracked objects:
  5547 ;;		On entry : 0/0
  5548 ;;		On exit  : 0/0
  5549 ;;		Unchanged: 0/0
  5550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5551 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5555 ;;Total ram usage:        6 bytes
  5556 ;; Hardware stack levels used:    1
  5557 ;; Hardware stack levels required when called:    6
  5558 ;; This function calls:
  5559 ;;		___awdiv
  5560 ;;		___awmod
  5561 ;; This function is called by:
  5562 ;;		_main
  5563 ;;		_SetMenu
  5564 ;;		_SetAlarm1
  5565 ;;		_CurrentDisplay
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text29
  5570  001B2E                     __ptext29:
  5571                           	opt stack 0
  5572  001B2E                     _Num2Disp:
  5573                           	opt stack 22
  5574                           
  5575                           ;mini-project-clock.c: 389: char tens, units;
  5576                           ;mini-project-clock.c: 390: if(*time > 99) {
  5577                           
  5578                           ;incstack = 0
  5579  001B2E  C07A  FFF6         	movff	Num2Disp@time,tblptrl
  5580  001B32  C07B  FFF7         	movff	Num2Disp@time+1,tblptrh
  5581  001B36  C07C  FFF8         	movff	Num2Disp@time+2,tblptru
  5582  001B3A  BAF8               	btfsc	tblptru,5,c
  5583  001B3C  D003               	bra	u2677
  5584  001B3E  0008               	tblrd		*
  5585  001B40  50F5               	movf	tablat,w,c
  5586  001B42  D005               	bra	u2670
  5587  001B44                     u2677:
  5588  001B44  CFF6 FFE9          	movff	tblptrl,fsr0l
  5589  001B48  CFF7 FFEA          	movff	tblptrh,fsr0h
  5590  001B4C  50EF               	movf	indf0,w,c
  5591  001B4E                     u2670:
  5592  001B4E  6E30               	movwf	??_Num2Disp& (0+255),c
  5593  001B50  0E63               	movlw	99
  5594  001B52  6430               	cpfsgt	??_Num2Disp,c
  5595  001B54  D015               	goto	l3355
  5596                           
  5597                           ;mini-project-clock.c: 391: disp_U1 = DispChars.r;
  5598  001B56  0E13               	movlw	low (_DispChars+18)
  5599  001B58  6EF6               	movwf	tblptrl,c
  5600  001B5A  0E10               	movlw	high (_DispChars+18)
  5601  001B5C  6EF7               	movwf	tblptrh,c
  5602  001B5E                     	if	0	;tblptru may be non-zero
  5603  001B5E                     	endif
  5604  001B5E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5605  001B5E  0E00               	movlw	low (__mediumconst shr (0+16))
  5606  001B60  6EF8               	movwf	tblptru,c
  5607  001B62                     	endif
  5608  001B62  0008               	tblrd		*
  5609  001B64  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  5610                           
  5611                           ;mini-project-clock.c: 392: disp_U2 = DispChars.E;
  5612  001B68  0E06               	movlw	low (_DispChars+5)
  5613  001B6A  6EF6               	movwf	tblptrl,c
  5614  001B6C  0E10               	movlw	high (_DispChars+5)
  5615  001B6E  6EF7               	movwf	tblptrh,c
  5616  001B70                     	if	0	;tblptru may be non-zero
  5617  001B70                     	endif
  5618  001B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5619  001B70  0E00               	movlw	low (__mediumconst shr (0+16))
  5620  001B72  6EF8               	movwf	tblptru,c
  5621  001B74                     	endif
  5622  001B74  0008               	tblrd		*
  5623  001B76  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  5624                           
  5625                           ;mini-project-clock.c: 393: disp_LEDS = 0x01;
  5626  001B7A  0E01               	movlw	1
  5627  001B7C  6E37               	movwf	_disp_LEDS,c	;volatile
  5628                           
  5629                           ;mini-project-clock.c: 395: }
  5630                           
  5631                           ;mini-project-clock.c: 394: return;
  5632  001B7E  0012               	return	
  5633  001B80                     l3355:
  5634                           
  5635                           ;mini-project-clock.c: 396: else {
  5636                           ;mini-project-clock.c: 397: tens = *time / 10;
  5637  001B80  C07A  FFF6         	movff	Num2Disp@time,tblptrl
  5638  001B84  C07B  FFF7         	movff	Num2Disp@time+1,tblptrh
  5639  001B88  C07C  FFF8         	movff	Num2Disp@time+2,tblptru
  5640  001B8C  BAF8               	btfsc	tblptru,5,c
  5641  001B8E  D003               	bra	u2697
  5642  001B90  0008               	tblrd		*
  5643  001B92  50F5               	movf	tablat,w,c
  5644  001B94  D005               	bra	u2690
  5645  001B96                     u2697:
  5646  001B96  CFF6 FFE9          	movff	tblptrl,fsr0l
  5647  001B9A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5648  001B9E  50EF               	movf	indf0,w,c
  5649  001BA0                     u2690:
  5650  001BA0  6E30               	movwf	??_Num2Disp& (0+255),c
  5651  001BA2  5030               	movf	??_Num2Disp,w,c
  5652  001BA4  6E28               	movwf	___awdiv@dividend,c
  5653  001BA6  6A29               	clrf	___awdiv@dividend+1,c
  5654  001BA8  0E00               	movlw	0
  5655  001BAA  6E2B               	movwf	___awdiv@divisor+1,c
  5656  001BAC  0E0A               	movlw	10
  5657  001BAE  6E2A               	movwf	___awdiv@divisor,c
  5658  001BB0  EC4B  F010         	call	___awdiv	;wreg free
  5659  001BB4  5028               	movf	?___awdiv,w,c
  5660  001BB6  0100               	movlb	0	; () banked
  5661  001BB8  6F7D               	movwf	Num2Disp@tens& (0+255),b
  5662                           
  5663                           ;mini-project-clock.c: 398: units = *time % 10;
  5664  001BBA  C07A  FFF6         	movff	Num2Disp@time,tblptrl
  5665  001BBE  C07B  FFF7         	movff	Num2Disp@time+1,tblptrh
  5666  001BC2  C07C  FFF8         	movff	Num2Disp@time+2,tblptru
  5667  001BC6  BAF8               	btfsc	tblptru,5,c
  5668  001BC8  D003               	bra	u2707
  5669  001BCA  0008               	tblrd		*
  5670  001BCC  50F5               	movf	tablat,w,c
  5671  001BCE  D005               	bra	u2700
  5672  001BD0                     u2707:
  5673  001BD0  CFF6 FFE9          	movff	tblptrl,fsr0l
  5674  001BD4  CFF7 FFEA          	movff	tblptrh,fsr0h
  5675  001BD8  50EF               	movf	indf0,w,c
  5676  001BDA                     u2700:
  5677  001BDA  6E30               	movwf	??_Num2Disp& (0+255),c
  5678  001BDC  5030               	movf	??_Num2Disp,w,c
  5679  001BDE  6E28               	movwf	___awmod@dividend,c
  5680  001BE0  6A29               	clrf	___awmod@dividend+1,c
  5681  001BE2  0E00               	movlw	0
  5682  001BE4  6E2B               	movwf	___awmod@divisor+1,c
  5683  001BE6  0E0A               	movlw	10
  5684  001BE8  6E2A               	movwf	___awmod@divisor,c
  5685  001BEA  EC55  F012         	call	___awmod	;wreg free
  5686  001BEE  5028               	movf	?___awmod,w,c
  5687  001BF0  0100               	movlb	0	; () banked
  5688  001BF2  6F7E               	movwf	Num2Disp@units& (0+255),b
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;mini-project-clock.c: 399: disp_U2 = DispNums[tens];
  5692  001BF4  0100               	movlb	0	; () banked
  5693  001BF6  517D               	movf	Num2Disp@tens& (0+255),w,b
  5694  001BF8  0D01               	mullw	1
  5695  001BFA  0E34               	movlw	low _DispNums
  5696  001BFC  24F3               	addwf	prodl,w,c
  5697  001BFE  6EF6               	movwf	tblptrl,c
  5698  001C00  0E10               	movlw	high _DispNums
  5699  001C02  20F4               	addwfc	prodh,w,c
  5700  001C04  6EF7               	movwf	tblptrh,c
  5701  001C06                     	if	1	;There are 3 active tblptr bytes
  5702  001C06  6AF8               	clrf	tblptru,c
  5703  001C08  0E00               	movlw	low (__mediumconst shr (0+16))
  5704  001C0A  22F8               	addwfc	tblptru,f,c
  5705  001C0C                     	endif
  5706  001C0C  0008               	tblrd		*
  5707  001C0E  CFF5 F032          	movff	tablat,_disp_U2	;volatile
  5708                           
  5709                           ; BSR set to: 0
  5710                           ;mini-project-clock.c: 400: disp_U1 = DispNums[units];
  5711  001C12  0100               	movlb	0	; () banked
  5712  001C14  517E               	movf	Num2Disp@units& (0+255),w,b
  5713  001C16  0D01               	mullw	1
  5714  001C18  0E34               	movlw	low _DispNums
  5715  001C1A  24F3               	addwf	prodl,w,c
  5716  001C1C  6EF6               	movwf	tblptrl,c
  5717  001C1E  0E10               	movlw	high _DispNums
  5718  001C20  20F4               	addwfc	prodh,w,c
  5719  001C22  6EF7               	movwf	tblptrh,c
  5720  001C24                     	if	1	;There are 3 active tblptr bytes
  5721  001C24  6AF8               	clrf	tblptru,c
  5722  001C26  0E00               	movlw	low (__mediumconst shr (0+16))
  5723  001C28  22F8               	addwfc	tblptru,f,c
  5724  001C2A                     	endif
  5725  001C2A  0008               	tblrd		*
  5726  001C2C  CFF5 F031          	movff	tablat,_disp_U1	;volatile
  5727                           
  5728                           ; BSR set to: 0
  5729                           ;mini-project-clock.c: 401: return;
  5730  001C30  0012               	return	
  5731  001C32                     __end_of_Num2Disp:
  5732                           	opt stack 0
  5733                           tblptru	equ	0xFF8
  5734                           tblptrh	equ	0xFF7
  5735                           tblptrl	equ	0xFF6
  5736                           tablat	equ	0xFF5
  5737                           prodh	equ	0xFF4
  5738                           prodl	equ	0xFF3
  5739                           intcon	equ	0xFF2
  5740                           intcon2	equ	0xFF1
  5741                           indf0	equ	0xFEF
  5742                           postinc0	equ	0xFEE
  5743                           fsr0h	equ	0xFEA
  5744                           fsr0l	equ	0xFE9
  5745                           wreg	equ	0xFE8
  5746                           postdec1	equ	0xFE5
  5747                           fsr1l	equ	0xFE1
  5748                           indf2	equ	0xFDF
  5749                           postinc2	equ	0xFDE
  5750                           postdec2	equ	0xFDD
  5751                           fsr2h	equ	0xFDA
  5752                           fsr2l	equ	0xFD9
  5753                           status	equ	0xFD8
  5754                           
  5755 ;; *************** function ___awmod *****************
  5756 ;; Defined at:
  5757 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;  dividend        2   39[COMRAM] int 
  5760 ;;  divisor         2   41[COMRAM] int 
  5761 ;; Auto vars:     Size  Location     Type
  5762 ;;  sign            1   44[COMRAM] unsigned char 
  5763 ;;  counter         1   43[COMRAM] unsigned char 
  5764 ;; Return value:  Size  Location     Type
  5765 ;;                  2   39[COMRAM] int 
  5766 ;; Registers used:
  5767 ;;		wreg, status,2, status,0
  5768 ;; Tracked objects:
  5769 ;;		On entry : 0/0
  5770 ;;		On exit  : 0/0
  5771 ;;		Unchanged: 0/0
  5772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5773 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5776 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5777 ;;Total ram usage:        6 bytes
  5778 ;; Hardware stack levels used:    1
  5779 ;; Hardware stack levels required when called:    5
  5780 ;; This function calls:
  5781 ;;		Nothing
  5782 ;; This function is called by:
  5783 ;;		_Num2Disp
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           	psect	text30
  5788  0024AA                     __ptext30:
  5789                           	opt stack 0
  5790  0024AA                     ___awmod:
  5791                           	opt stack 22
  5792                           
  5793                           ;incstack = 0
  5794  0024AA  0E00               	movlw	0
  5795  0024AC  6E2D               	movwf	___awmod@sign,c
  5796  0024AE  AE29               	btfss	___awmod@dividend+1,7,c
  5797  0024B0  D006               	goto	l3317
  5798  0024B2  6C28               	negf	___awmod@dividend,c
  5799  0024B4  1E29               	comf	___awmod@dividend+1,f,c
  5800  0024B6  B0D8               	btfsc	status,0,c
  5801  0024B8  2A29               	incf	___awmod@dividend+1,f,c
  5802  0024BA  0E01               	movlw	1
  5803  0024BC  6E2D               	movwf	___awmod@sign,c
  5804  0024BE                     l3317:
  5805  0024BE  AE2B               	btfss	___awmod@divisor+1,7,c
  5806  0024C0  D004               	goto	l3321
  5807  0024C2  6C2A               	negf	___awmod@divisor,c
  5808  0024C4  1E2B               	comf	___awmod@divisor+1,f,c
  5809  0024C6  B0D8               	btfsc	status,0,c
  5810  0024C8  2A2B               	incf	___awmod@divisor+1,f,c
  5811  0024CA                     l3321:
  5812  0024CA  502A               	movf	___awmod@divisor,w,c
  5813  0024CC  102B               	iorwf	___awmod@divisor+1,w,c
  5814  0024CE  B4D8               	btfsc	status,2,c
  5815  0024D0  D018               	goto	l3337
  5816  0024D2  0E01               	movlw	1
  5817  0024D4  6E2C               	movwf	___awmod@counter,c
  5818  0024D6  D004               	goto	l3327
  5819  0024D8                     l3325:
  5820  0024D8  90D8               	bcf	status,0,c
  5821  0024DA  362A               	rlcf	___awmod@divisor,f,c
  5822  0024DC  362B               	rlcf	___awmod@divisor+1,f,c
  5823  0024DE  2A2C               	incf	___awmod@counter,f,c
  5824  0024E0                     l3327:
  5825  0024E0  AE2B               	btfss	___awmod@divisor+1,7,c
  5826  0024E2  D7FA               	goto	l3325
  5827  0024E4                     l3329:
  5828  0024E4  502A               	movf	___awmod@divisor,w,c
  5829  0024E6  5C28               	subwf	___awmod@dividend,w,c
  5830  0024E8  502B               	movf	___awmod@divisor+1,w,c
  5831  0024EA  5829               	subwfb	___awmod@dividend+1,w,c
  5832  0024EC  A0D8               	btfss	status,0,c
  5833  0024EE  D004               	goto	l3333
  5834  0024F0  502A               	movf	___awmod@divisor,w,c
  5835  0024F2  5E28               	subwf	___awmod@dividend,f,c
  5836  0024F4  502B               	movf	___awmod@divisor+1,w,c
  5837  0024F6  5A29               	subwfb	___awmod@dividend+1,f,c
  5838  0024F8                     l3333:
  5839  0024F8  90D8               	bcf	status,0,c
  5840  0024FA  322B               	rrcf	___awmod@divisor+1,f,c
  5841  0024FC  322A               	rrcf	___awmod@divisor,f,c
  5842  0024FE  2E2C               	decfsz	___awmod@counter,f,c
  5843  002500  D7F1               	goto	l3329
  5844  002502                     l3337:
  5845  002502  502D               	movf	___awmod@sign,w,c
  5846  002504  B4D8               	btfsc	status,2,c
  5847  002506  D004               	goto	l3341
  5848  002508  6C28               	negf	___awmod@dividend,c
  5849  00250A  1E29               	comf	___awmod@dividend+1,f,c
  5850  00250C  B0D8               	btfsc	status,0,c
  5851  00250E  2A29               	incf	___awmod@dividend+1,f,c
  5852  002510                     l3341:
  5853  002510  C028  F028         	movff	___awmod@dividend,?___awmod
  5854  002514  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  5855  002518  0012               	return	
  5856  00251A                     __end_of___awmod:
  5857                           	opt stack 0
  5858                           tblptru	equ	0xFF8
  5859                           tblptrh	equ	0xFF7
  5860                           tblptrl	equ	0xFF6
  5861                           tablat	equ	0xFF5
  5862                           prodh	equ	0xFF4
  5863                           prodl	equ	0xFF3
  5864                           intcon	equ	0xFF2
  5865                           intcon2	equ	0xFF1
  5866                           indf0	equ	0xFEF
  5867                           postinc0	equ	0xFEE
  5868                           fsr0h	equ	0xFEA
  5869                           fsr0l	equ	0xFE9
  5870                           wreg	equ	0xFE8
  5871                           postdec1	equ	0xFE5
  5872                           fsr1l	equ	0xFE1
  5873                           indf2	equ	0xFDF
  5874                           postinc2	equ	0xFDE
  5875                           postdec2	equ	0xFDD
  5876                           fsr2h	equ	0xFDA
  5877                           fsr2l	equ	0xFD9
  5878                           status	equ	0xFD8
  5879                           
  5880 ;; *************** function ___awdiv *****************
  5881 ;; Defined at:
  5882 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  dividend        2   39[COMRAM] int 
  5885 ;;  divisor         2   41[COMRAM] int 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  quotient        2   45[COMRAM] int 
  5888 ;;  sign            1   44[COMRAM] unsigned char 
  5889 ;;  counter         1   43[COMRAM] unsigned char 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  2   39[COMRAM] int 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2, status,0
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;Total ram usage:        8 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    5
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_Num2Disp
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text31
  5914  002096                     __ptext31:
  5915                           	opt stack 0
  5916  002096                     ___awdiv:
  5917                           	opt stack 22
  5918                           
  5919                           ;incstack = 0
  5920  002096  0E00               	movlw	0
  5921  002098  6E2D               	movwf	___awdiv@sign,c
  5922  00209A  AE2B               	btfss	___awdiv@divisor+1,7,c
  5923  00209C  D006               	goto	l3273
  5924  00209E  6C2A               	negf	___awdiv@divisor,c
  5925  0020A0  1E2B               	comf	___awdiv@divisor+1,f,c
  5926  0020A2  B0D8               	btfsc	status,0,c
  5927  0020A4  2A2B               	incf	___awdiv@divisor+1,f,c
  5928  0020A6  0E01               	movlw	1
  5929  0020A8  6E2D               	movwf	___awdiv@sign,c
  5930  0020AA                     l3273:
  5931  0020AA  AE29               	btfss	___awdiv@dividend+1,7,c
  5932  0020AC  D006               	goto	l3279
  5933  0020AE  6C28               	negf	___awdiv@dividend,c
  5934  0020B0  1E29               	comf	___awdiv@dividend+1,f,c
  5935  0020B2  B0D8               	btfsc	status,0,c
  5936  0020B4  2A29               	incf	___awdiv@dividend+1,f,c
  5937  0020B6  0E01               	movlw	1
  5938  0020B8  1A2D               	xorwf	___awdiv@sign,f,c
  5939  0020BA                     l3279:
  5940  0020BA  0E00               	movlw	0
  5941  0020BC  6E2F               	movwf	___awdiv@quotient+1,c
  5942  0020BE  0E00               	movlw	0
  5943  0020C0  6E2E               	movwf	___awdiv@quotient,c
  5944  0020C2  502A               	movf	___awdiv@divisor,w,c
  5945  0020C4  102B               	iorwf	___awdiv@divisor+1,w,c
  5946  0020C6  B4D8               	btfsc	status,2,c
  5947  0020C8  D01C               	goto	l3301
  5948  0020CA  0E01               	movlw	1
  5949  0020CC  6E2C               	movwf	___awdiv@counter,c
  5950  0020CE  D004               	goto	l3287
  5951  0020D0                     l3285:
  5952  0020D0  90D8               	bcf	status,0,c
  5953  0020D2  362A               	rlcf	___awdiv@divisor,f,c
  5954  0020D4  362B               	rlcf	___awdiv@divisor+1,f,c
  5955  0020D6  2A2C               	incf	___awdiv@counter,f,c
  5956  0020D8                     l3287:
  5957  0020D8  AE2B               	btfss	___awdiv@divisor+1,7,c
  5958  0020DA  D7FA               	goto	l3285
  5959  0020DC                     l3289:
  5960  0020DC  90D8               	bcf	status,0,c
  5961  0020DE  362E               	rlcf	___awdiv@quotient,f,c
  5962  0020E0  362F               	rlcf	___awdiv@quotient+1,f,c
  5963  0020E2  502A               	movf	___awdiv@divisor,w,c
  5964  0020E4  5C28               	subwf	___awdiv@dividend,w,c
  5965  0020E6  502B               	movf	___awdiv@divisor+1,w,c
  5966  0020E8  5829               	subwfb	___awdiv@dividend+1,w,c
  5967  0020EA  A0D8               	btfss	status,0,c
  5968  0020EC  D005               	goto	l3297
  5969  0020EE  502A               	movf	___awdiv@divisor,w,c
  5970  0020F0  5E28               	subwf	___awdiv@dividend,f,c
  5971  0020F2  502B               	movf	___awdiv@divisor+1,w,c
  5972  0020F4  5A29               	subwfb	___awdiv@dividend+1,f,c
  5973  0020F6  802E               	bsf	___awdiv@quotient,0,c
  5974  0020F8                     l3297:
  5975  0020F8  90D8               	bcf	status,0,c
  5976  0020FA  322B               	rrcf	___awdiv@divisor+1,f,c
  5977  0020FC  322A               	rrcf	___awdiv@divisor,f,c
  5978  0020FE  2E2C               	decfsz	___awdiv@counter,f,c
  5979  002100  D7ED               	goto	l3289
  5980  002102                     l3301:
  5981  002102  502D               	movf	___awdiv@sign,w,c
  5982  002104  B4D8               	btfsc	status,2,c
  5983  002106  D004               	goto	l3305
  5984  002108  6C2E               	negf	___awdiv@quotient,c
  5985  00210A  1E2F               	comf	___awdiv@quotient+1,f,c
  5986  00210C  B0D8               	btfsc	status,0,c
  5987  00210E  2A2F               	incf	___awdiv@quotient+1,f,c
  5988  002110                     l3305:
  5989  002110  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  5990  002114  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  5991  002118  0012               	return	
  5992  00211A                     __end_of___awdiv:
  5993                           	opt stack 0
  5994                           tblptru	equ	0xFF8
  5995                           tblptrh	equ	0xFF7
  5996                           tblptrl	equ	0xFF6
  5997                           tablat	equ	0xFF5
  5998                           prodh	equ	0xFF4
  5999                           prodl	equ	0xFF3
  6000                           intcon	equ	0xFF2
  6001                           intcon2	equ	0xFF1
  6002                           indf0	equ	0xFEF
  6003                           postinc0	equ	0xFEE
  6004                           fsr0h	equ	0xFEA
  6005                           fsr0l	equ	0xFE9
  6006                           wreg	equ	0xFE8
  6007                           postdec1	equ	0xFE5
  6008                           fsr1l	equ	0xFE1
  6009                           indf2	equ	0xFDF
  6010                           postinc2	equ	0xFDE
  6011                           postdec2	equ	0xFDD
  6012                           fsr2h	equ	0xFDA
  6013                           fsr2l	equ	0xFD9
  6014                           status	equ	0xFD8
  6015                           
  6016 ;; *************** function _ConvertADC *****************
  6017 ;; Defined at:
  6018 ;;		line 22 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\ADC\adcconv.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;		None
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;		None
  6023 ;; Return value:  Size  Location     Type
  6024 ;;                  1    wreg      void 
  6025 ;; Registers used:
  6026 ;;		None
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;Total ram usage:        0 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; Hardware stack levels required when called:    5
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_main
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text32
  6047  002836                     __ptext32:
  6048                           	opt stack 0
  6049  002836                     _ConvertADC:
  6050                           	opt stack 25
  6051                           
  6052                           ;incstack = 0
  6053  002836  82C2               	bsf	4034,1,c	;volatile
  6054  002838  0012               	return		;funcret
  6055  00283A                     __end_of_ConvertADC:
  6056                           	opt stack 0
  6057                           tblptru	equ	0xFF8
  6058                           tblptrh	equ	0xFF7
  6059                           tblptrl	equ	0xFF6
  6060                           tablat	equ	0xFF5
  6061                           prodh	equ	0xFF4
  6062                           prodl	equ	0xFF3
  6063                           intcon	equ	0xFF2
  6064                           intcon2	equ	0xFF1
  6065                           indf0	equ	0xFEF
  6066                           postinc0	equ	0xFEE
  6067                           fsr0h	equ	0xFEA
  6068                           fsr0l	equ	0xFE9
  6069                           wreg	equ	0xFE8
  6070                           postdec1	equ	0xFE5
  6071                           fsr1l	equ	0xFE1
  6072                           indf2	equ	0xFDF
  6073                           postinc2	equ	0xFDE
  6074                           postdec2	equ	0xFDD
  6075                           fsr2h	equ	0xFDA
  6076                           fsr2l	equ	0xFD9
  6077                           status	equ	0xFD8
  6078                           
  6079 ;; *************** function _ConfigureIO *****************
  6080 ;; Defined at:
  6081 ;;		line 527 in file "mini-project-clock.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;		None
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;		None
  6086 ;; Return value:  Size  Location     Type
  6087 ;;                  1    wreg      void 
  6088 ;; Registers used:
  6089 ;;		wreg, status,2
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;Total ram usage:        0 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; Hardware stack levels required when called:    5
  6102 ;; This function calls:
  6103 ;;		Nothing
  6104 ;; This function is called by:
  6105 ;;		_main
  6106 ;; This function uses a non-reentrant model
  6107 ;;
  6108                           
  6109                           	psect	text33
  6110  002742                     __ptext33:
  6111                           	opt stack 0
  6112  002742                     _ConfigureIO:
  6113                           	opt stack 25
  6114                           
  6115                           ;mini-project-clock.c: 528: ADCON1 = 0x3F;
  6116                           
  6117                           ;incstack = 0
  6118  002742  0E3F               	movlw	63
  6119  002744  6EC1               	movwf	4033,c	;volatile
  6120                           
  6121                           ;mini-project-clock.c: 529: TRISF = 0x00;
  6122  002746  0E00               	movlw	0
  6123  002748  6E97               	movwf	3991,c	;volatile
  6124                           
  6125                           ;mini-project-clock.c: 530: TRISH = 0xFC;
  6126  00274A  0EFC               	movlw	252
  6127  00274C  6E99               	movwf	3993,c	;volatile
  6128                           
  6129                           ;mini-project-clock.c: 531: TRISA = 0xEF;
  6130  00274E  0EEF               	movlw	239
  6131  002750  6E92               	movwf	3986,c	;volatile
  6132                           
  6133                           ;mini-project-clock.c: 532: TRISB = 0xFF;
  6134  002752  6893               	setf	3987,c	;volatile
  6135                           
  6136                           ;mini-project-clock.c: 533: TRISC = 0xFF;
  6137  002754  6894               	setf	3988,c	;volatile
  6138                           
  6139                           ;mini-project-clock.c: 534: TRISJ = 0xFF;
  6140  002756  689A               	setf	3994,c	;volatile
  6141  002758  0012               	return		;funcret
  6142  00275A                     __end_of_ConfigureIO:
  6143                           	opt stack 0
  6144                           tblptru	equ	0xFF8
  6145                           tblptrh	equ	0xFF7
  6146                           tblptrl	equ	0xFF6
  6147                           tablat	equ	0xFF5
  6148                           prodh	equ	0xFF4
  6149                           prodl	equ	0xFF3
  6150                           intcon	equ	0xFF2
  6151                           intcon2	equ	0xFF1
  6152                           indf0	equ	0xFEF
  6153                           postinc0	equ	0xFEE
  6154                           fsr0h	equ	0xFEA
  6155                           fsr0l	equ	0xFE9
  6156                           wreg	equ	0xFE8
  6157                           postdec1	equ	0xFE5
  6158                           fsr1l	equ	0xFE1
  6159                           indf2	equ	0xFDF
  6160                           postinc2	equ	0xFDE
  6161                           postdec2	equ	0xFDD
  6162                           fsr2h	equ	0xFDA
  6163                           fsr2l	equ	0xFD9
  6164                           status	equ	0xFD8
  6165                           
  6166 ;; *************** function _CalcDate *****************
  6167 ;; Defined at:
  6168 ;;		line 548 in file "mini-project-clock.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;		None
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      void 
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;Total ram usage:        0 bytes
  6187 ;; Hardware stack levels used:    1
  6188 ;; Hardware stack levels required when called:    7
  6189 ;; This function calls:
  6190 ;;		_CalcLeapYear
  6191 ;; This function is called by:
  6192 ;;		_main
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text34
  6197  001C32                     __ptext34:
  6198                           	opt stack 0
  6199  001C32                     _CalcDate:
  6200                           	opt stack 23
  6201                           
  6202                           ;mini-project-clock.c: 549: day_rollover = 0;
  6203                           
  6204                           ;incstack = 0
  6205  001C32  0E00               	movlw	0
  6206  001C34  0100               	movlb	0	; () banked
  6207  001C36  6F6C               	movwf	_day_rollover& (0+255),b	;volatile
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;mini-project-clock.c: 550: if(CalcLeapYear(MainDate.year_long) == 0) {
  6211  001C38  C072  F02D         	movff	_MainDate+3,CalcLeapYear@year	;volatile
  6212  001C3C  C073  F02E         	movff	_MainDate+4,CalcLeapYear@year+1	;volatile
  6213  001C40  ECBC  F012         	call	_CalcLeapYear	;wreg free
  6214  001C44  0900               	iorlw	0
  6215  001C46  A4D8               	btfss	status,2,c
  6216  001C48  D038               	goto	l2947
  6217                           
  6218                           ;mini-project-clock.c: 551: if(MainDate.day < DaysInMonth[MainDate.month]) {
  6219  001C4A  0100               	movlb	0	; () banked
  6220  001C4C  5170               	movf	(_MainDate+1)& (0+255),w,b	;volatile
  6221  001C4E  0D01               	mullw	1
  6222  001C50  0E1A               	movlw	low _DaysInMonth
  6223  001C52  24F3               	addwf	prodl,w,c
  6224  001C54  6EF6               	movwf	tblptrl,c
  6225  001C56  0E10               	movlw	high _DaysInMonth
  6226  001C58  20F4               	addwfc	prodh,w,c
  6227  001C5A  6EF7               	movwf	tblptrh,c
  6228  001C5C                     	if	1	;There are 3 active tblptr bytes
  6229  001C5C  6AF8               	clrf	tblptru,c
  6230  001C5E  0E00               	movlw	low (__mediumconst shr (0+16))
  6231  001C60  22F8               	addwfc	tblptru,f,c
  6232  001C62                     	endif
  6233  001C62  0008               	tblrd		*
  6234  001C64  50F5               	movf	tablat,w,c
  6235  001C66  0100               	movlb	0	; () banked
  6236  001C68  616F               	cpfslt	_MainDate& (0+255),b	;volatile
  6237  001C6A  D003               	goto	l2933
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;mini-project-clock.c: 552: MainDate.day++;
  6241  001C6C  0100               	movlb	0	; () banked
  6242  001C6E  2B6F               	incf	_MainDate& (0+255),f,b	;volatile
  6243                           
  6244                           ;mini-project-clock.c: 553: }
  6245  001C70  0012               	return	
  6246  001C72                     l2933:
  6247                           
  6248                           ; BSR set to: 0
  6249                           ;mini-project-clock.c: 554: else {
  6250                           ;mini-project-clock.c: 555: MainDate.day = 1;
  6251  001C72  0E01               	movlw	1
  6252  001C74  0100               	movlb	0	; () banked
  6253  001C76  6F6F               	movwf	_MainDate& (0+255),b	;volatile
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;mini-project-clock.c: 556: if(MainDate.month < 12) {
  6257  001C78  0E0C               	movlw	12
  6258  001C7A  0100               	movlb	0	; () banked
  6259  001C7C  6170               	cpfslt	(_MainDate+1)& (0+255),b	;volatile
  6260  001C7E  D003               	goto	l2939
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;mini-project-clock.c: 557: MainDate.month++;
  6264  001C80  0100               	movlb	0	; () banked
  6265  001C82  2B70               	incf	(_MainDate+1)& (0+255),f,b	;volatile
  6266                           
  6267                           ;mini-project-clock.c: 558: }
  6268  001C84  0012               	return	
  6269  001C86                     l2939:
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;mini-project-clock.c: 559: else {
  6273                           ;mini-project-clock.c: 560: MainDate.month = 1;
  6274  001C86  0E01               	movlw	1
  6275  001C88  0100               	movlb	0	; () banked
  6276  001C8A  6F70               	movwf	(_MainDate+1)& (0+255),b	;volatile
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;mini-project-clock.c: 561: if(MainDate.year_long < 99) {
  6280  001C8C  0100               	movlb	0	; () banked
  6281  001C8E  5173               	movf	(_MainDate+4)& (0+255),w,b	;volatile
  6282  001C90  E10B               	bnz	l2945
  6283  001C92  0E63               	movlw	99
  6284  001C94  0100               	movlb	0	; () banked
  6285  001C96  5D72               	subwf	(_MainDate+3)& (0+255),w,b	;volatile
  6286  001C98  B0D8               	btfsc	status,0,c
  6287  001C9A  D006               	goto	l2945
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;mini-project-clock.c: 562: MainDate.year_long++;
  6291  001C9C  0100               	movlb	0	; () banked
  6292  001C9E  4B72               	infsnz	(_MainDate+3)& (0+255),f,b	;volatile
  6293  001CA0  2B73               	incf	(_MainDate+4)& (0+255),f,b	;volatile
  6294                           
  6295                           ;mini-project-clock.c: 563: MainDate.year_short++;
  6296  001CA2  0100               	movlb	0	; () banked
  6297  001CA4  2B71               	incf	(_MainDate+2)& (0+255),f,b	;volatile
  6298                           
  6299                           ;mini-project-clock.c: 564: }
  6300  001CA6  0012               	return	
  6301  001CA8                     l2945:
  6302                           
  6303                           ; BSR set to: 0
  6304                           ;mini-project-clock.c: 565: else {
  6305                           ;mini-project-clock.c: 566: MainDate.year_long = 2000;
  6306  001CA8  0E07               	movlw	7
  6307  001CAA  0100               	movlb	0	; () banked
  6308  001CAC  6F73               	movwf	(_MainDate+4)& (0+255),b	;volatile
  6309  001CAE  0ED0               	movlw	208
  6310  001CB0  6F72               	movwf	(_MainDate+3)& (0+255),b	;volatile
  6311                           
  6312                           ;mini-project-clock.c: 567: MainDate.year_short = 00;
  6313  001CB2  0E00               	movlw	0
  6314  001CB4  0100               	movlb	0	; () banked
  6315  001CB6  6F71               	movwf	(_MainDate+2)& (0+255),b	;volatile
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;mini-project-clock.c: 568: }
  6319                           ;mini-project-clock.c: 570: }
  6320                           ;mini-project-clock.c: 571: }
  6321                           ;mini-project-clock.c: 572: }
  6322                           
  6323                           ; BSR set to: 0
  6324                           
  6325                           ; BSR set to: 0
  6326  001CB8  0012               	return	
  6327  001CBA                     l2947:
  6328                           
  6329                           ;mini-project-clock.c: 573: else {
  6330                           ;mini-project-clock.c: 574: if(MainDate.day < DaysInMonthLeap[MainDate.month]) {
  6331  001CBA  0100               	movlb	0	; () banked
  6332  001CBC  5170               	movf	(_MainDate+1)& (0+255),w,b	;volatile
  6333  001CBE  0D01               	mullw	1
  6334  001CC0  0E27               	movlw	low _DaysInMonthLeap
  6335  001CC2  24F3               	addwf	prodl,w,c
  6336  001CC4  6EF6               	movwf	tblptrl,c
  6337  001CC6  0E10               	movlw	high _DaysInMonthLeap
  6338  001CC8  20F4               	addwfc	prodh,w,c
  6339  001CCA  6EF7               	movwf	tblptrh,c
  6340  001CCC                     	if	1	;There are 3 active tblptr bytes
  6341  001CCC  6AF8               	clrf	tblptru,c
  6342  001CCE  0E00               	movlw	low (__mediumconst shr (0+16))
  6343  001CD0  22F8               	addwfc	tblptru,f,c
  6344  001CD2                     	endif
  6345  001CD2  0008               	tblrd		*
  6346  001CD4  50F5               	movf	tablat,w,c
  6347  001CD6  0100               	movlb	0	; () banked
  6348  001CD8  616F               	cpfslt	_MainDate& (0+255),b	;volatile
  6349  001CDA  D003               	goto	l2951
  6350                           
  6351                           ; BSR set to: 0
  6352                           ;mini-project-clock.c: 575: MainDate.day++;
  6353  001CDC  0100               	movlb	0	; () banked
  6354  001CDE  2B6F               	incf	_MainDate& (0+255),f,b	;volatile
  6355                           
  6356                           ;mini-project-clock.c: 576: }
  6357  001CE0  0012               	return	
  6358  001CE2                     l2951:
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;mini-project-clock.c: 577: else {
  6362                           ;mini-project-clock.c: 578: MainDate.day = 1;
  6363  001CE2  0E01               	movlw	1
  6364  001CE4  0100               	movlb	0	; () banked
  6365  001CE6  6F6F               	movwf	_MainDate& (0+255),b	;volatile
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;mini-project-clock.c: 579: if(MainDate.month < 12) {
  6369  001CE8  0E0C               	movlw	12
  6370  001CEA  0100               	movlb	0	; () banked
  6371  001CEC  6170               	cpfslt	(_MainDate+1)& (0+255),b	;volatile
  6372  001CEE  D003               	goto	l2957
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;mini-project-clock.c: 580: MainDate.month++;
  6376  001CF0  0100               	movlb	0	; () banked
  6377  001CF2  2B70               	incf	(_MainDate+1)& (0+255),f,b	;volatile
  6378                           
  6379                           ;mini-project-clock.c: 581: }
  6380  001CF4  0012               	return	
  6381  001CF6                     l2957:
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;mini-project-clock.c: 582: else {
  6385                           ;mini-project-clock.c: 583: MainDate.month = 1;
  6386  001CF6  0E01               	movlw	1
  6387  001CF8  0100               	movlb	0	; () banked
  6388  001CFA  6F70               	movwf	(_MainDate+1)& (0+255),b	;volatile
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;mini-project-clock.c: 584: MainDate.year_long++;
  6392  001CFC  0100               	movlb	0	; () banked
  6393  001CFE  4B72               	infsnz	(_MainDate+3)& (0+255),f,b	;volatile
  6394  001D00  2B73               	incf	(_MainDate+4)& (0+255),f,b	;volatile
  6395                           
  6396                           ; BSR set to: 0
  6397                           ;mini-project-clock.c: 585: MainDate.year_short++;
  6398  001D02  0100               	movlb	0	; () banked
  6399  001D04  2B71               	incf	(_MainDate+2)& (0+255),f,b	;volatile
  6400                           
  6401                           ; BSR set to: 0
  6402                           
  6403                           ; BSR set to: 0
  6404  001D06  0012               	return	
  6405  001D08                     __end_of_CalcDate:
  6406                           	opt stack 0
  6407                           tblptru	equ	0xFF8
  6408                           tblptrh	equ	0xFF7
  6409                           tblptrl	equ	0xFF6
  6410                           tablat	equ	0xFF5
  6411                           prodh	equ	0xFF4
  6412                           prodl	equ	0xFF3
  6413                           intcon	equ	0xFF2
  6414                           intcon2	equ	0xFF1
  6415                           indf0	equ	0xFEF
  6416                           postinc0	equ	0xFEE
  6417                           fsr0h	equ	0xFEA
  6418                           fsr0l	equ	0xFE9
  6419                           wreg	equ	0xFE8
  6420                           postdec1	equ	0xFE5
  6421                           fsr1l	equ	0xFE1
  6422                           indf2	equ	0xFDF
  6423                           postinc2	equ	0xFDE
  6424                           postdec2	equ	0xFDD
  6425                           fsr2h	equ	0xFDA
  6426                           fsr2l	equ	0xFD9
  6427                           status	equ	0xFD8
  6428                           
  6429 ;; *************** function _CalcLeapYear *****************
  6430 ;; Defined at:
  6431 ;;		line 591 in file "mini-project-clock.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  year            2   44[COMRAM] unsigned int 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      unsigned char 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6445 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;Total ram usage:        4 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    6
  6452 ;; This function calls:
  6453 ;;		___lwmod
  6454 ;; This function is called by:
  6455 ;;		_CalcDate
  6456 ;;		_SetDay
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text35
  6461  002578                     __ptext35:
  6462                           	opt stack 0
  6463  002578                     _CalcLeapYear:
  6464                           	opt stack 22
  6465                           
  6466                           ;mini-project-clock.c: 592: if((year % 4) == 0) {
  6467                           
  6468                           ; BSR set to: 0
  6469                           ;incstack = 0
  6470  002578  0E03               	movlw	3
  6471  00257A  142D               	andwf	CalcLeapYear@year,w,c
  6472  00257C  6E2F               	movwf	??_CalcLeapYear& (0+255),c
  6473  00257E  0E00               	movlw	0
  6474  002580  142E               	andwf	CalcLeapYear@year+1,w,c
  6475  002582  6E30               	movwf	(??_CalcLeapYear+1)& (0+255),c
  6476  002584  502F               	movf	??_CalcLeapYear,w,c
  6477  002586  1030               	iorwf	??_CalcLeapYear+1,w,c
  6478  002588  A4D8               	btfss	status,2,c
  6479  00258A  D022               	goto	l2563
  6480                           
  6481                           ;mini-project-clock.c: 593: if((year % 100) == 0) {
  6482  00258C  C02D  F028         	movff	CalcLeapYear@year,___lwmod@dividend
  6483  002590  C02E  F029         	movff	CalcLeapYear@year+1,___lwmod@dividend+1
  6484  002594  0E00               	movlw	0
  6485  002596  6E2B               	movwf	___lwmod@divisor+1,c
  6486  002598  0E64               	movlw	100
  6487  00259A  6E2A               	movwf	___lwmod@divisor,c
  6488  00259C  EC0E  F013         	call	___lwmod	;wreg free
  6489  0025A0  5028               	movf	?___lwmod,w,c
  6490  0025A2  1029               	iorwf	?___lwmod+1,w,c
  6491  0025A4  A4D8               	btfss	status,2,c
  6492  0025A6  D012               	goto	l2559
  6493                           
  6494                           ;mini-project-clock.c: 594: if ((year % 400) == 0) {
  6495  0025A8  C02D  F028         	movff	CalcLeapYear@year,___lwmod@dividend
  6496  0025AC  C02E  F029         	movff	CalcLeapYear@year+1,___lwmod@dividend+1
  6497  0025B0  0E01               	movlw	1
  6498  0025B2  6E2B               	movwf	___lwmod@divisor+1,c
  6499  0025B4  0E90               	movlw	144
  6500  0025B6  6E2A               	movwf	___lwmod@divisor,c
  6501  0025B8  EC0E  F013         	call	___lwmod	;wreg free
  6502  0025BC  5028               	movf	?___lwmod,w,c
  6503  0025BE  1029               	iorwf	?___lwmod+1,w,c
  6504  0025C0  A4D8               	btfss	status,2,c
  6505  0025C2  D002               	goto	l2555
  6506                           
  6507                           ;mini-project-clock.c: 595: return(1);
  6508  0025C4  0E01               	movlw	1
  6509                           
  6510                           ;mini-project-clock.c: 596: }
  6511  0025C6  0012               	return	
  6512  0025C8                     l2555:
  6513                           
  6514                           ;mini-project-clock.c: 597: else {
  6515                           ;mini-project-clock.c: 598: return(0);
  6516  0025C8  0E00               	movlw	0
  6517                           
  6518                           ;mini-project-clock.c: 599: }
  6519                           ;mini-project-clock.c: 600: }
  6520  0025CA  0012               	return	
  6521  0025CC                     l2559:
  6522                           
  6523                           ;mini-project-clock.c: 601: else {
  6524                           ;mini-project-clock.c: 602: return(1);
  6525  0025CC  0E01               	movlw	1
  6526                           
  6527                           ;mini-project-clock.c: 603: }
  6528                           ;mini-project-clock.c: 604: }
  6529  0025CE  0012               	return	
  6530  0025D0                     l2563:
  6531                           
  6532                           ;mini-project-clock.c: 605: else {
  6533                           ;mini-project-clock.c: 606: return(0);
  6534  0025D0  0E00               	movlw	0
  6535  0025D2  0012               	return	
  6536  0025D4                     __end_of_CalcLeapYear:
  6537                           	opt stack 0
  6538                           tblptru	equ	0xFF8
  6539                           tblptrh	equ	0xFF7
  6540                           tblptrl	equ	0xFF6
  6541                           tablat	equ	0xFF5
  6542                           prodh	equ	0xFF4
  6543                           prodl	equ	0xFF3
  6544                           intcon	equ	0xFF2
  6545                           intcon2	equ	0xFF1
  6546                           indf0	equ	0xFEF
  6547                           postinc0	equ	0xFEE
  6548                           fsr0h	equ	0xFEA
  6549                           fsr0l	equ	0xFE9
  6550                           wreg	equ	0xFE8
  6551                           postdec1	equ	0xFE5
  6552                           fsr1l	equ	0xFE1
  6553                           indf2	equ	0xFDF
  6554                           postinc2	equ	0xFDE
  6555                           postdec2	equ	0xFDD
  6556                           fsr2h	equ	0xFDA
  6557                           fsr2l	equ	0xFD9
  6558                           status	equ	0xFD8
  6559                           
  6560 ;; *************** function ___lwmod *****************
  6561 ;; Defined at:
  6562 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;  dividend        2   39[COMRAM] unsigned int 
  6565 ;;  divisor         2   41[COMRAM] unsigned int 
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;  counter         1   43[COMRAM] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  2   39[COMRAM] unsigned int 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;Total ram usage:        5 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    5
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_CalcLeapYear
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text36
  6592  00261C                     __ptext36:
  6593                           	opt stack 0
  6594  00261C                     ___lwmod:
  6595                           	opt stack 22
  6596                           
  6597                           ;incstack = 0
  6598  00261C  502A               	movf	___lwmod@divisor,w,c
  6599  00261E  102B               	iorwf	___lwmod@divisor+1,w,c
  6600  002620  B4D8               	btfsc	status,2,c
  6601  002622  D018               	goto	l910
  6602  002624  0E01               	movlw	1
  6603  002626  6E2C               	movwf	___lwmod@counter,c
  6604  002628  D004               	goto	l2319
  6605  00262A                     l2317:
  6606  00262A  90D8               	bcf	status,0,c
  6607  00262C  362A               	rlcf	___lwmod@divisor,f,c
  6608  00262E  362B               	rlcf	___lwmod@divisor+1,f,c
  6609  002630  2A2C               	incf	___lwmod@counter,f,c
  6610  002632                     l2319:
  6611  002632  AE2B               	btfss	___lwmod@divisor+1,7,c
  6612  002634  D7FA               	goto	l2317
  6613  002636                     l2321:
  6614  002636  502A               	movf	___lwmod@divisor,w,c
  6615  002638  5C28               	subwf	___lwmod@dividend,w,c
  6616  00263A  502B               	movf	___lwmod@divisor+1,w,c
  6617  00263C  5829               	subwfb	___lwmod@dividend+1,w,c
  6618  00263E  A0D8               	btfss	status,0,c
  6619  002640  D004               	goto	l2325
  6620  002642  502A               	movf	___lwmod@divisor,w,c
  6621  002644  5E28               	subwf	___lwmod@dividend,f,c
  6622  002646  502B               	movf	___lwmod@divisor+1,w,c
  6623  002648  5A29               	subwfb	___lwmod@dividend+1,f,c
  6624  00264A                     l2325:
  6625  00264A  90D8               	bcf	status,0,c
  6626  00264C  322B               	rrcf	___lwmod@divisor+1,f,c
  6627  00264E  322A               	rrcf	___lwmod@divisor,f,c
  6628  002650  2E2C               	decfsz	___lwmod@counter,f,c
  6629  002652  D7F1               	goto	l2321
  6630  002654                     l910:
  6631  002654  C028  F028         	movff	___lwmod@dividend,?___lwmod
  6632  002658  C029  F029         	movff	___lwmod@dividend+1,?___lwmod+1
  6633  00265C  0012               	return		;funcret
  6634  00265E                     __end_of___lwmod:
  6635                           	opt stack 0
  6636                           tblptru	equ	0xFF8
  6637                           tblptrh	equ	0xFF7
  6638                           tblptrl	equ	0xFF6
  6639                           tablat	equ	0xFF5
  6640                           prodh	equ	0xFF4
  6641                           prodl	equ	0xFF3
  6642                           intcon	equ	0xFF2
  6643                           intcon2	equ	0xFF1
  6644                           indf0	equ	0xFEF
  6645                           postinc0	equ	0xFEE
  6646                           fsr0h	equ	0xFEA
  6647                           fsr0l	equ	0xFE9
  6648                           wreg	equ	0xFE8
  6649                           postdec1	equ	0xFE5
  6650                           fsr1l	equ	0xFE1
  6651                           indf2	equ	0xFDF
  6652                           postinc2	equ	0xFDE
  6653                           postdec2	equ	0xFDD
  6654                           fsr2h	equ	0xFDA
  6655                           fsr2l	equ	0xFD9
  6656                           status	equ	0xFD8
  6657                           
  6658 ;; *************** function _BusyADC *****************
  6659 ;; Defined at:
  6660 ;;		line 26 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\ADC\adcbusy.c"
  6661 ;; Parameters:    Size  Location     Type
  6662 ;;		None
  6663 ;; Auto vars:     Size  Location     Type
  6664 ;;		None
  6665 ;; Return value:  Size  Location     Type
  6666 ;;                  1    wreg      unsigned char 
  6667 ;; Registers used:
  6668 ;;		wreg
  6669 ;; Tracked objects:
  6670 ;;		On entry : 0/0
  6671 ;;		On exit  : 0/0
  6672 ;;		Unchanged: 0/0
  6673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6678 ;;Total ram usage:        0 bytes
  6679 ;; Hardware stack levels used:    1
  6680 ;; Hardware stack levels required when called:    5
  6681 ;; This function calls:
  6682 ;;		Nothing
  6683 ;; This function is called by:
  6684 ;;		_main
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text37
  6689  002816                     __ptext37:
  6690                           	opt stack 0
  6691  002816                     _BusyADC:
  6692                           	opt stack 25
  6693                           
  6694                           ;incstack = 0
  6695  002816  A2C2               	btfss	4034,1,c	;volatile
  6696  002818  D002               	goto	u2340
  6697  00281A  0E01               	movlw	1
  6698  00281C  0012               	return	
  6699  00281E                     u2340:
  6700  00281E  0E00               	movlw	0
  6701  002820  0012               	return	
  6702  002822                     __end_of_BusyADC:
  6703                           	opt stack 0
  6704                           tblptru	equ	0xFF8
  6705                           tblptrh	equ	0xFF7
  6706                           tblptrl	equ	0xFF6
  6707                           tablat	equ	0xFF5
  6708                           prodh	equ	0xFF4
  6709                           prodl	equ	0xFF3
  6710                           intcon	equ	0xFF2
  6711                           intcon2	equ	0xFF1
  6712                           indf0	equ	0xFEF
  6713                           postinc0	equ	0xFEE
  6714                           fsr0h	equ	0xFEA
  6715                           fsr0l	equ	0xFE9
  6716                           wreg	equ	0xFE8
  6717                           postdec1	equ	0xFE5
  6718                           fsr1l	equ	0xFE1
  6719                           indf2	equ	0xFDF
  6720                           postinc2	equ	0xFDE
  6721                           postdec2	equ	0xFDD
  6722                           fsr2h	equ	0xFDA
  6723                           fsr2l	equ	0xFD9
  6724                           status	equ	0xFD8
  6725                           
  6726 ;; *************** function _BootTest *****************
  6727 ;; Defined at:
  6728 ;;		line 537 in file "mini-project-clock.c"
  6729 ;; Parameters:    Size  Location     Type
  6730 ;;		None
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;		None
  6733 ;; Return value:  Size  Location     Type
  6734 ;;                  1    wreg      void 
  6735 ;; Registers used:
  6736 ;;		wreg, status,2, cstack
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;Total ram usage:        0 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; Hardware stack levels required when called:    6
  6749 ;; This function calls:
  6750 ;;		_Delay10KTCYx
  6751 ;; This function is called by:
  6752 ;;		_main
  6753 ;; This function uses a non-reentrant model
  6754 ;;
  6755                           
  6756                           	psect	text38
  6757  002722                     __ptext38:
  6758                           	opt stack 0
  6759  002722                     _BootTest:
  6760                           	opt stack 24
  6761                           
  6762                           ;mini-project-clock.c: 538: disp_LEDS = 0xFF;
  6763                           
  6764                           ;incstack = 0
  6765  002722  6837               	setf	_disp_LEDS,c	;volatile
  6766                           
  6767                           ;mini-project-clock.c: 539: disp_U1 = 0x00;
  6768  002724  0E00               	movlw	0
  6769  002726  6E31               	movwf	_disp_U1,c	;volatile
  6770                           
  6771                           ;mini-project-clock.c: 540: disp_U2 = 0x00;
  6772  002728  0E00               	movlw	0
  6773  00272A  6E32               	movwf	_disp_U2,c	;volatile
  6774                           
  6775                           ;mini-project-clock.c: 541: Delay10KTCYx(250);
  6776  00272C  0EFA               	movlw	250
  6777  00272E  ECC3  F013         	call	_Delay10KTCYx
  6778                           
  6779                           ;mini-project-clock.c: 542: disp_LEDS = 0x00;
  6780  002732  0E00               	movlw	0
  6781  002734  6E37               	movwf	_disp_LEDS,c	;volatile
  6782                           
  6783                           ;mini-project-clock.c: 543: disp_U1 = 0xFF;
  6784  002736  6831               	setf	_disp_U1,c	;volatile
  6785                           
  6786                           ;mini-project-clock.c: 544: disp_U2 = 0xFF;
  6787  002738  6832               	setf	_disp_U2,c	;volatile
  6788                           
  6789                           ;mini-project-clock.c: 545: Delay10KTCYx(250);
  6790  00273A  0EFA               	movlw	250
  6791  00273C  ECC3  F013         	call	_Delay10KTCYx
  6792  002740  0012               	return		;funcret
  6793  002742                     __end_of_BootTest:
  6794                           	opt stack 0
  6795                           tblptru	equ	0xFF8
  6796                           tblptrh	equ	0xFF7
  6797                           tblptrl	equ	0xFF6
  6798                           tablat	equ	0xFF5
  6799                           prodh	equ	0xFF4
  6800                           prodl	equ	0xFF3
  6801                           intcon	equ	0xFF2
  6802                           intcon2	equ	0xFF1
  6803                           indf0	equ	0xFEF
  6804                           postinc0	equ	0xFEE
  6805                           fsr0h	equ	0xFEA
  6806                           fsr0l	equ	0xFE9
  6807                           wreg	equ	0xFE8
  6808                           postdec1	equ	0xFE5
  6809                           fsr1l	equ	0xFE1
  6810                           indf2	equ	0xFDF
  6811                           postinc2	equ	0xFDE
  6812                           postdec2	equ	0xFDD
  6813                           fsr2h	equ	0xFDA
  6814                           fsr2l	equ	0xFD9
  6815                           status	equ	0xFD8
  6816                           
  6817 ;; *************** function _Delay10KTCYx *****************
  6818 ;; Defined at:
  6819 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\d10ktcyx.c"
  6820 ;; Parameters:    Size  Location     Type
  6821 ;;  unit            1    wreg     unsigned char 
  6822 ;; Auto vars:     Size  Location     Type
  6823 ;;  unit            1   40[COMRAM] unsigned char 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  1    wreg      void 
  6826 ;; Registers used:
  6827 ;;		wreg
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6837 ;;Total ram usage:        2 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; Hardware stack levels required when called:    5
  6840 ;; This function calls:
  6841 ;;		Nothing
  6842 ;; This function is called by:
  6843 ;;		_main
  6844 ;;		_BootTest
  6845 ;;		_SetSecs
  6846 ;;		_SetMins
  6847 ;;		_SetHrs
  6848 ;;		_SetDay
  6849 ;;		_SetMonth
  6850 ;;		_SetYear
  6851 ;;		_SecsFlash
  6852 ;;		_MinsFlash
  6853 ;;		_HrsFlash
  6854 ;;		_DayFlash
  6855 ;;		_MonthFlash
  6856 ;;		_YearFlash
  6857 ;;		_Alarm1Flash
  6858 ;;		_DegreesFlash
  6859 ;;		_SetAlarm1
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text39
  6864  002786                     __ptext39:
  6865                           	opt stack 0
  6866  002786                     _Delay10KTCYx:
  6867                           	opt stack 23
  6868                           
  6869                           ;incstack = 0
  6870                           ;Delay10KTCYx@unit stored from wreg
  6871  002786  6E29               	movwf	Delay10KTCYx@unit,c
  6872  002788  0E0D               	movlw	13
  6873  00278A  6E28               	movwf	??_Delay10KTCYx& (0+255),c
  6874  00278C  0EFC               	movlw	252
  6875  00278E                     u3167:
  6876  00278E  2EE8               	decfsz	wreg,f,c
  6877  002790  D7FE               	goto	u3167
  6878  002792  2E28               	decfsz	??_Delay10KTCYx& (0+255),f,c
  6879  002794  D7FC               	goto	u3167
  6880  002796  2E29               	decfsz	Delay10KTCYx@unit,f,c
  6881  002798  D7F7               	goto	l2209
  6882  00279A  0012               	return	
  6883  00279C                     __end_of_Delay10KTCYx:
  6884                           	opt stack 0
  6885                           tblptru	equ	0xFF8
  6886                           tblptrh	equ	0xFF7
  6887                           tblptrl	equ	0xFF6
  6888                           tablat	equ	0xFF5
  6889                           prodh	equ	0xFF4
  6890                           prodl	equ	0xFF3
  6891                           intcon	equ	0xFF2
  6892                           intcon2	equ	0xFF1
  6893                           indf0	equ	0xFEF
  6894                           postinc0	equ	0xFEE
  6895                           fsr0h	equ	0xFEA
  6896                           fsr0l	equ	0xFE9
  6897                           wreg	equ	0xFE8
  6898                           postdec1	equ	0xFE5
  6899                           fsr1l	equ	0xFE1
  6900                           indf2	equ	0xFDF
  6901                           postinc2	equ	0xFDE
  6902                           postdec2	equ	0xFDD
  6903                           fsr2h	equ	0xFDA
  6904                           fsr2l	equ	0xFD9
  6905                           status	equ	0xFD8
  6906                           
  6907 ;; *************** function _lp_isr *****************
  6908 ;; Defined at:
  6909 ;;		line 273 in file "mini-project-clock.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;		None
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;		None
  6914 ;; Return value:  Size  Location     Type
  6915 ;;                  1    wreg      void 
  6916 ;; Registers used:
  6917 ;;		wreg, status,2, status,0, cstack
  6918 ;; Tracked objects:
  6919 ;;		On entry : 0/0
  6920 ;;		On exit  : 0/0
  6921 ;;		Unchanged: 0/0
  6922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6925 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;Total ram usage:       17 bytes
  6928 ;; Hardware stack levels used:    1
  6929 ;; Hardware stack levels required when called:    4
  6930 ;; This function calls:
  6931 ;;		_Timer0_isr
  6932 ;; This function is called by:
  6933 ;;		Interrupt level 1
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	intcodelo
  6938  000018                     __pintcodelo:
  6939                           	opt stack 0
  6940  000018                     _lp_isr:
  6941                           	opt stack 22
  6942                           
  6943                           ;incstack = 0
  6944  000018  8038               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  6945  00001A  CFD8 F017          	movff	status,??_lp_isr
  6946  00001E  CFE8 F018          	movff	wreg,??_lp_isr+1
  6947  000022  CFE0 F019          	movff	bsr,??_lp_isr+2
  6948  000026  CFFA F01A          	movff	pclath,??_lp_isr+3
  6949  00002A  CFFB F01B          	movff	pclatu,??_lp_isr+4
  6950  00002E  CFE9 F01C          	movff	fsr0l,??_lp_isr+5
  6951  000032  CFEA F01D          	movff	fsr0h,??_lp_isr+6
  6952  000036  CFE1 F01E          	movff	fsr1l,??_lp_isr+7
  6953  00003A  CFE2 F01F          	movff	fsr1h,??_lp_isr+8
  6954  00003E  CFD9 F020          	movff	fsr2l,??_lp_isr+9
  6955  000042  CFDA F021          	movff	fsr2h,??_lp_isr+10
  6956  000046  CFF3 F022          	movff	prodl,??_lp_isr+11
  6957  00004A  CFF4 F023          	movff	prodh,??_lp_isr+12
  6958  00004E  CFF6 F024          	movff	tblptrl,??_lp_isr+13
  6959  000052  CFF7 F025          	movff	tblptrh,??_lp_isr+14
  6960  000056  CFF8 F026          	movff	tblptru,??_lp_isr+15
  6961  00005A  CFF5 F027          	movff	tablat,??_lp_isr+16
  6962                           
  6963                           ;mini-project-clock.c: 274: if(INTCONbits.TMR0IF == 1) {
  6964  00005E  A4F2               	btfss	intcon,2,c	;volatile
  6965  000060  D003               	goto	i1l213
  6966                           
  6967                           ;mini-project-clock.c: 275: INTCONbits.TMR0IF = 0;
  6968  000062  94F2               	bcf	intcon,2,c	;volatile
  6969                           
  6970                           ;mini-project-clock.c: 276: Timer0_isr();
  6971  000064  EC8D  F012         	call	_Timer0_isr	;wreg free
  6972  000068                     i1l213:
  6973  000068  C027  FFF5         	movff	??_lp_isr+16,tablat
  6974  00006C  C026  FFF8         	movff	??_lp_isr+15,tblptru
  6975  000070  C025  FFF7         	movff	??_lp_isr+14,tblptrh
  6976  000074  C024  FFF6         	movff	??_lp_isr+13,tblptrl
  6977  000078  C023  FFF4         	movff	??_lp_isr+12,prodh
  6978  00007C  C022  FFF3         	movff	??_lp_isr+11,prodl
  6979  000080  C021  FFDA         	movff	??_lp_isr+10,fsr2h
  6980  000084  C020  FFD9         	movff	??_lp_isr+9,fsr2l
  6981  000088  C01F  FFE2         	movff	??_lp_isr+8,fsr1h
  6982  00008C  C01E  FFE1         	movff	??_lp_isr+7,fsr1l
  6983  000090  C01D  FFEA         	movff	??_lp_isr+6,fsr0h
  6984  000094  C01C  FFE9         	movff	??_lp_isr+5,fsr0l
  6985  000098  C01B  FFFB         	movff	??_lp_isr+4,pclatu
  6986  00009C  C01A  FFFA         	movff	??_lp_isr+3,pclath
  6987  0000A0  C019  FFE0         	movff	??_lp_isr+2,bsr
  6988  0000A4  C018  FFE8         	movff	??_lp_isr+1,wreg
  6989  0000A8  C017  FFD8         	movff	??_lp_isr,status
  6990  0000AC  9038               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6991  0000AE  0010               	retfie	
  6992  0000B0                     __end_of_lp_isr:
  6993                           	opt stack 0
  6994                           pclatu	equ	0xFFB
  6995                           pclath	equ	0xFFA
  6996                           tblptru	equ	0xFF8
  6997                           tblptrh	equ	0xFF7
  6998                           tblptrl	equ	0xFF6
  6999                           tablat	equ	0xFF5
  7000                           prodh	equ	0xFF4
  7001                           prodl	equ	0xFF3
  7002                           intcon	equ	0xFF2
  7003                           intcon2	equ	0xFF1
  7004                           indf0	equ	0xFEF
  7005                           postinc0	equ	0xFEE
  7006                           fsr0h	equ	0xFEA
  7007                           fsr0l	equ	0xFE9
  7008                           wreg	equ	0xFE8
  7009                           postdec1	equ	0xFE5
  7010                           fsr1h	equ	0xFE2
  7011                           fsr1l	equ	0xFE1
  7012                           bsr	equ	0xFE0
  7013                           indf2	equ	0xFDF
  7014                           postinc2	equ	0xFDE
  7015                           postdec2	equ	0xFDD
  7016                           fsr2h	equ	0xFDA
  7017                           fsr2l	equ	0xFD9
  7018                           status	equ	0xFD8
  7019                           
  7020 ;; *************** function _Timer0_isr *****************
  7021 ;; Defined at:
  7022 ;;		line 303 in file "mini-project-clock.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;		None
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;		None
  7027 ;; Return value:  Size  Location     Type
  7028 ;;                  1    wreg      void 
  7029 ;; Registers used:
  7030 ;;		wreg, status,2, status,0, cstack
  7031 ;; Tracked objects:
  7032 ;;		On entry : 0/0
  7033 ;;		On exit  : 0/0
  7034 ;;		Unchanged: 0/0
  7035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7040 ;;Total ram usage:        0 bytes
  7041 ;; Hardware stack levels used:    1
  7042 ;; Hardware stack levels required when called:    3
  7043 ;; This function calls:
  7044 ;;		i1_WriteTimer0
  7045 ;; This function is called by:
  7046 ;;		_lp_isr
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text41
  7051  00251A                     __ptext41:
  7052                           	opt stack 0
  7053  00251A                     _Timer0_isr:
  7054                           	opt stack 22
  7055                           
  7056                           ;mini-project-clock.c: 304: switch(multiplex_count) {
  7057                           
  7058                           ;incstack = 0
  7059  00251A  D015               	goto	i1l3149
  7060  00251C                     i1l226:
  7061                           
  7062                           ;mini-project-clock.c: 306: LATHbits.LH0 = 1;
  7063  00251C  8090               	bsf	3984,0,c	;volatile
  7064                           
  7065                           ;mini-project-clock.c: 307: LATHbits.LH1 = 1;
  7066  00251E  8290               	bsf	3984,1,c	;volatile
  7067                           
  7068                           ;mini-project-clock.c: 308: LATAbits.LA4 = 1;
  7069  002520  8889               	bsf	3977,4,c	;volatile
  7070                           
  7071                           ;mini-project-clock.c: 309: LATF = disp_LEDS;
  7072  002522  C037  FF8E         	movff	_disp_LEDS,3982	;volatile
  7073                           
  7074                           ;mini-project-clock.c: 310: break;
  7075  002526  D01A               	goto	i1l3151
  7076  002528                     i1l228:
  7077                           
  7078                           ;mini-project-clock.c: 312: LATHbits.LH0 = 0;
  7079  002528  9090               	bcf	3984,0,c	;volatile
  7080                           
  7081                           ;mini-project-clock.c: 313: LATHbits.LH1 = 1;
  7082  00252A  8290               	bsf	3984,1,c	;volatile
  7083                           
  7084                           ;mini-project-clock.c: 314: LATAbits.LA4 = 0;
  7085  00252C  9889               	bcf	3977,4,c	;volatile
  7086                           
  7087                           ;mini-project-clock.c: 315: LATF = disp_U1 & dp_mask;
  7088  00252E  5031               	movf	_disp_U1,w,c	;volatile
  7089  002530  1433               	andwf	_dp_mask,w,c	;volatile
  7090  002532  6E8E               	movwf	3982,c	;volatile
  7091                           
  7092                           ;mini-project-clock.c: 316: break;
  7093  002534  D013               	goto	i1l3151
  7094  002536                     i1l229:
  7095                           
  7096                           ;mini-project-clock.c: 318: LATHbits.LH0 = 1;
  7097  002536  8090               	bsf	3984,0,c	;volatile
  7098                           
  7099                           ;mini-project-clock.c: 319: LATHbits.LH1 = 0;
  7100  002538  9290               	bcf	3984,1,c	;volatile
  7101                           
  7102                           ;mini-project-clock.c: 320: LATAbits.LA4 = 0;
  7103  00253A  9889               	bcf	3977,4,c	;volatile
  7104                           
  7105                           ;mini-project-clock.c: 321: LATF = disp_U2;
  7106  00253C  C032  FF8E         	movff	_disp_U2,3982	;volatile
  7107  002540                     i1l3145:
  7108                           
  7109                           ;mini-project-clock.c: 325: multiplex_count = 0;
  7110  002540  0E00               	movlw	0
  7111  002542  6E34               	movwf	_multiplex_count,c	;volatile
  7112                           
  7113                           ;mini-project-clock.c: 327: }
  7114                           
  7115                           ;mini-project-clock.c: 326: break;
  7116  002544  D00B               	goto	i1l3151
  7117  002546                     i1l3149:
  7118  002546  5034               	movf	_multiplex_count,w,c	;volatile
  7119                           
  7120                           ; Switch size 1, requested type "space"
  7121                           ; Number of cases is 3, Range of values is 1 to 3
  7122                           ; switch strategies available:
  7123                           ; Name         Instructions Cycles
  7124                           ; simple_byte           10     6 (average)
  7125                           ;	Chosen strategy is simple_byte
  7126  002548  0A01               	xorlw	1	; case 1
  7127  00254A  B4D8               	btfsc	status,2,c
  7128  00254C  D7E7               	goto	i1l226
  7129  00254E  0A03               	xorlw	3	; case 2
  7130  002550  B4D8               	btfsc	status,2,c
  7131  002552  D7EA               	goto	i1l228
  7132  002554  0A01               	xorlw	1	; case 3
  7133  002556  B4D8               	btfsc	status,2,c
  7134  002558  D7EE               	goto	i1l229
  7135  00255A  D7F2               	goto	i1l3145
  7136  00255C                     i1l3151:
  7137                           
  7138                           ;mini-project-clock.c: 328: multiplex_count++;
  7139  00255C  2A34               	incf	_multiplex_count,f,c	;volatile
  7140                           
  7141                           ;mini-project-clock.c: 329: ms_count0++;
  7142  00255E  0100               	movlb	0	; () banked
  7143  002560  4B68               	infsnz	_ms_count0& (0+255),f,b	;volatile
  7144  002562  2B69               	incf	(_ms_count0+1)& (0+255),f,b	;volatile
  7145                           
  7146                           ;mini-project-clock.c: 330: ms_count1++;
  7147  002564  0100               	movlb	0	; () banked
  7148  002566  4B6A               	infsnz	_ms_count1& (0+255),f,b	;volatile
  7149  002568  2B6B               	incf	(_ms_count1+1)& (0+255),f,b	;volatile
  7150                           
  7151                           ; BSR set to: 0
  7152                           ;mini-project-clock.c: 331: WriteTimer0(63036);
  7153  00256A  0EF6               	movlw	246
  7154  00256C  6E14               	movwf	i1WriteTimer0@timer0+1,c
  7155  00256E  0E3C               	movlw	60
  7156  002570  6E13               	movwf	i1WriteTimer0@timer0,c
  7157  002572  ECEB  F013         	call	i1_WriteTimer0	;wreg free
  7158  002576  0012               	return		;funcret
  7159  002578                     __end_of_Timer0_isr:
  7160                           	opt stack 0
  7161                           pclatu	equ	0xFFB
  7162                           pclath	equ	0xFFA
  7163                           tblptru	equ	0xFF8
  7164                           tblptrh	equ	0xFF7
  7165                           tblptrl	equ	0xFF6
  7166                           tablat	equ	0xFF5
  7167                           prodh	equ	0xFF4
  7168                           prodl	equ	0xFF3
  7169                           intcon	equ	0xFF2
  7170                           intcon2	equ	0xFF1
  7171                           indf0	equ	0xFEF
  7172                           postinc0	equ	0xFEE
  7173                           fsr0h	equ	0xFEA
  7174                           fsr0l	equ	0xFE9
  7175                           wreg	equ	0xFE8
  7176                           postdec1	equ	0xFE5
  7177                           fsr1h	equ	0xFE2
  7178                           fsr1l	equ	0xFE1
  7179                           bsr	equ	0xFE0
  7180                           indf2	equ	0xFDF
  7181                           postinc2	equ	0xFDE
  7182                           postdec2	equ	0xFDD
  7183                           fsr2h	equ	0xFDA
  7184                           fsr2l	equ	0xFD9
  7185                           status	equ	0xFD8
  7186                           
  7187 ;; *************** function i1_WriteTimer0 *****************
  7188 ;; Defined at:
  7189 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\Timers\t0write.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  timer0          2   18[COMRAM] unsigned int 
  7192 ;; Auto vars:     Size  Location     Type
  7193 ;;  WriteTimer0     2   20[COMRAM] struct Timers
  7194 ;; Return value:  Size  Location     Type
  7195 ;;                  1    wreg      void 
  7196 ;; Registers used:
  7197 ;;		None
  7198 ;; Tracked objects:
  7199 ;;		On entry : 0/0
  7200 ;;		On exit  : 0/0
  7201 ;;		Unchanged: 0/0
  7202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7204 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7206 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;Total ram usage:        4 bytes
  7208 ;; Hardware stack levels used:    1
  7209 ;; Hardware stack levels required when called:    2
  7210 ;; This function calls:
  7211 ;;		Nothing
  7212 ;; This function is called by:
  7213 ;;		_Timer0_isr
  7214 ;; This function uses a non-reentrant model
  7215 ;;
  7216                           
  7217                           	psect	text42
  7218  0027D6                     __ptext42:
  7219                           	opt stack 0
  7220  0027D6                     i1_WriteTimer0:
  7221                           	opt stack 22
  7222                           
  7223                           ;incstack = 0
  7224  0027D6  C013  F015         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
  7225  0027DA  C014  F016         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
  7226  0027DE  C016  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
  7227  0027E2  C015  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
  7228  0027E6  0012               	return		;funcret
  7229  0027E8                     __end_ofi1_WriteTimer0:
  7230                           	opt stack 0
  7231                           pclatu	equ	0xFFB
  7232                           pclath	equ	0xFFA
  7233                           tblptru	equ	0xFF8
  7234                           tblptrh	equ	0xFF7
  7235                           tblptrl	equ	0xFF6
  7236                           tablat	equ	0xFF5
  7237                           prodh	equ	0xFF4
  7238                           prodl	equ	0xFF3
  7239                           intcon	equ	0xFF2
  7240                           intcon2	equ	0xFF1
  7241                           indf0	equ	0xFEF
  7242                           postinc0	equ	0xFEE
  7243                           fsr0h	equ	0xFEA
  7244                           fsr0l	equ	0xFE9
  7245                           wreg	equ	0xFE8
  7246                           postdec1	equ	0xFE5
  7247                           fsr1h	equ	0xFE2
  7248                           fsr1l	equ	0xFE1
  7249                           bsr	equ	0xFE0
  7250                           indf2	equ	0xFDF
  7251                           postinc2	equ	0xFDE
  7252                           postdec2	equ	0xFDD
  7253                           fsr2h	equ	0xFDA
  7254                           fsr2l	equ	0xFD9
  7255                           status	equ	0xFD8
  7256                           
  7257 ;; *************** function _hp_secs_count_isr *****************
  7258 ;; Defined at:
  7259 ;;		line 261 in file "mini-project-clock.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;		None
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1    wreg      void 
  7266 ;; Registers used:
  7267 ;;		wreg, status,2, status,0, cstack
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/0
  7270 ;;		On exit  : 0/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7275 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7276 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7277 ;;Total ram usage:       14 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:    1
  7280 ;; This function calls:
  7281 ;;		_RB0_isr
  7282 ;;		_Timer1_isr
  7283 ;;		i2_WriteTimer1
  7284 ;; This function is called by:
  7285 ;;		Interrupt level 2
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	intcode
  7290  000008                     __pintcode:
  7291                           	opt stack 0
  7292  000008                     _hp_secs_count_isr:
  7293                           	opt stack 22
  7294                           
  7295                           ;incstack = 0
  7296  000008  8238               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7297  00000A  CFFA F005          	movff	pclath,??_hp_secs_count_isr
  7298  00000E  CFFB F006          	movff	pclatu,??_hp_secs_count_isr+1
  7299  000012  ED04  F010         	call	int_func,f	;refresh shadow registers
  7300                           pclatu	equ	0xFFB
  7301                           pclath	equ	0xFFA
  7302                           tblptru	equ	0xFF8
  7303                           tblptrh	equ	0xFF7
  7304                           tblptrl	equ	0xFF6
  7305                           tablat	equ	0xFF5
  7306                           prodh	equ	0xFF4
  7307                           prodl	equ	0xFF3
  7308                           intcon	equ	0xFF2
  7309                           intcon2	equ	0xFF1
  7310                           indf0	equ	0xFEF
  7311                           postinc0	equ	0xFEE
  7312                           fsr0h	equ	0xFEA
  7313                           fsr0l	equ	0xFE9
  7314                           wreg	equ	0xFE8
  7315                           postdec1	equ	0xFE5
  7316                           fsr1h	equ	0xFE2
  7317                           fsr1l	equ	0xFE1
  7318                           bsr	equ	0xFE0
  7319                           indf2	equ	0xFDF
  7320                           postinc2	equ	0xFDE
  7321                           postdec2	equ	0xFDD
  7322                           fsr2h	equ	0xFDA
  7323                           fsr2l	equ	0xFD9
  7324                           status	equ	0xFD8
  7325                           
  7326                           	psect	intcode_body
  7327  002008                     __pintcode_body:
  7328                           	opt stack 22
  7329  002008                     int_func:
  7330                           	opt stack 22
  7331  002008  0006               	pop		; remove dummy address from shadow register refresh
  7332  00200A  CFE9 F007          	movff	fsr0l,??_hp_secs_count_isr+2
  7333  00200E  CFEA F008          	movff	fsr0h,??_hp_secs_count_isr+3
  7334  002012  CFE1 F009          	movff	fsr1l,??_hp_secs_count_isr+4
  7335  002016  CFE2 F00A          	movff	fsr1h,??_hp_secs_count_isr+5
  7336  00201A  CFD9 F00B          	movff	fsr2l,??_hp_secs_count_isr+6
  7337  00201E  CFDA F00C          	movff	fsr2h,??_hp_secs_count_isr+7
  7338  002022  CFF3 F00D          	movff	prodl,??_hp_secs_count_isr+8
  7339  002026  CFF4 F00E          	movff	prodh,??_hp_secs_count_isr+9
  7340  00202A  CFF6 F00F          	movff	tblptrl,??_hp_secs_count_isr+10
  7341  00202E  CFF7 F010          	movff	tblptrh,??_hp_secs_count_isr+11
  7342  002032  CFF8 F011          	movff	tblptru,??_hp_secs_count_isr+12
  7343  002036  CFF5 F012          	movff	tablat,??_hp_secs_count_isr+13
  7344                           
  7345                           ;mini-project-clock.c: 262: if (PIR1bits.TMR1IF == 1) {
  7346  00203A  A09E               	btfss	3998,0,c	;volatile
  7347  00203C  D009               	goto	i2l3253
  7348                           
  7349                           ;mini-project-clock.c: 263: PIR1bits.TMR1IF = 0;
  7350  00203E  909E               	bcf	3998,0,c	;volatile
  7351                           
  7352                           ;mini-project-clock.c: 264: WriteTimer1(32768);
  7353  002040  0E80               	movlw	128
  7354  002042  6E02               	movwf	i2WriteTimer1@timer1+1,c
  7355  002044  0E00               	movlw	0
  7356  002046  6E01               	movwf	i2WriteTimer1@timer1,c
  7357  002048  ECF4  F013         	call	i2_WriteTimer1	;wreg free
  7358                           
  7359                           ;mini-project-clock.c: 265: Timer1_isr();
  7360  00204C  ECEA  F012         	call	_Timer1_isr	;wreg free
  7361  002050                     i2l3253:
  7362                           
  7363                           ;mini-project-clock.c: 266: }
  7364                           ;mini-project-clock.c: 267: if (INTCONbits.INT0IF == 1) {
  7365  002050  A2F2               	btfss	intcon,1,c	;volatile
  7366  002052  D003               	goto	i2l209
  7367                           
  7368                           ;mini-project-clock.c: 268: INTCONbits.INT0IF = 0;
  7369  002054  92F2               	bcf	intcon,1,c	;volatile
  7370                           
  7371                           ;mini-project-clock.c: 269: RB0_isr();
  7372  002056  ECCE  F013         	call	_RB0_isr	;wreg free
  7373  00205A                     i2l209:
  7374  00205A  C012  FFF5         	movff	??_hp_secs_count_isr+13,tablat
  7375  00205E  C011  FFF8         	movff	??_hp_secs_count_isr+12,tblptru
  7376  002062  C010  FFF7         	movff	??_hp_secs_count_isr+11,tblptrh
  7377  002066  C00F  FFF6         	movff	??_hp_secs_count_isr+10,tblptrl
  7378  00206A  C00E  FFF4         	movff	??_hp_secs_count_isr+9,prodh
  7379  00206E  C00D  FFF3         	movff	??_hp_secs_count_isr+8,prodl
  7380  002072  C00C  FFDA         	movff	??_hp_secs_count_isr+7,fsr2h
  7381  002076  C00B  FFD9         	movff	??_hp_secs_count_isr+6,fsr2l
  7382  00207A  C00A  FFE2         	movff	??_hp_secs_count_isr+5,fsr1h
  7383  00207E  C009  FFE1         	movff	??_hp_secs_count_isr+4,fsr1l
  7384  002082  C008  FFEA         	movff	??_hp_secs_count_isr+3,fsr0h
  7385  002086  C007  FFE9         	movff	??_hp_secs_count_isr+2,fsr0l
  7386  00208A  C006  FFFB         	movff	??_hp_secs_count_isr+1,pclatu
  7387  00208E  C005  FFFA         	movff	??_hp_secs_count_isr,pclath
  7388  002092  9238               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7389  002094  0011               	retfie		f
  7390  002096                     __end_of_hp_secs_count_isr:
  7391                           	opt stack 0
  7392                           pclatu	equ	0xFFB
  7393                           pclath	equ	0xFFA
  7394                           tblptru	equ	0xFF8
  7395                           tblptrh	equ	0xFF7
  7396                           tblptrl	equ	0xFF6
  7397                           tablat	equ	0xFF5
  7398                           prodh	equ	0xFF4
  7399                           prodl	equ	0xFF3
  7400                           intcon	equ	0xFF2
  7401                           intcon2	equ	0xFF1
  7402                           indf0	equ	0xFEF
  7403                           postinc0	equ	0xFEE
  7404                           fsr0h	equ	0xFEA
  7405                           fsr0l	equ	0xFE9
  7406                           wreg	equ	0xFE8
  7407                           postdec1	equ	0xFE5
  7408                           fsr1h	equ	0xFE2
  7409                           fsr1l	equ	0xFE1
  7410                           bsr	equ	0xFE0
  7411                           indf2	equ	0xFDF
  7412                           postinc2	equ	0xFDE
  7413                           postdec2	equ	0xFDD
  7414                           fsr2h	equ	0xFDA
  7415                           fsr2l	equ	0xFD9
  7416                           status	equ	0xFD8
  7417                           
  7418 ;; *************** function i2_WriteTimer1 *****************
  7419 ;; Defined at:
  7420 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic18\plib\Timers\t1write.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;  timer1          2    0[COMRAM] unsigned int 
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  WriteTimer1     2    2[COMRAM] struct Timers
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      void 
  7427 ;; Registers used:
  7428 ;;		None
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;Total ram usage:        4 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; This function calls:
  7441 ;;		Nothing
  7442 ;; This function is called by:
  7443 ;;		_hp_secs_count_isr
  7444 ;; This function uses a non-reentrant model
  7445 ;;
  7446                           
  7447                           	psect	text44
  7448  0027E8                     __ptext44:
  7449                           	opt stack 0
  7450  0027E8                     i2_WriteTimer1:
  7451                           	opt stack 22
  7452                           
  7453                           ;incstack = 0
  7454  0027E8  C001  F003         	movff	i2WriteTimer1@timer1,i2WriteTimer1@timer
  7455  0027EC  C002  F004         	movff	i2WriteTimer1@timer1+1,i2WriteTimer1@timer+1
  7456  0027F0  C004  FFCF         	movff	i2WriteTimer1@timer+1,4047	;volatile
  7457  0027F4  C003  FFCE         	movff	i2WriteTimer1@timer,4046	;volatile
  7458  0027F8  0012               	return		;funcret
  7459  0027FA                     __end_ofi2_WriteTimer1:
  7460                           	opt stack 0
  7461                           pclatu	equ	0xFFB
  7462                           pclath	equ	0xFFA
  7463                           tblptru	equ	0xFF8
  7464                           tblptrh	equ	0xFF7
  7465                           tblptrl	equ	0xFF6
  7466                           tablat	equ	0xFF5
  7467                           prodh	equ	0xFF4
  7468                           prodl	equ	0xFF3
  7469                           intcon	equ	0xFF2
  7470                           intcon2	equ	0xFF1
  7471                           indf0	equ	0xFEF
  7472                           postinc0	equ	0xFEE
  7473                           fsr0h	equ	0xFEA
  7474                           fsr0l	equ	0xFE9
  7475                           wreg	equ	0xFE8
  7476                           postdec1	equ	0xFE5
  7477                           fsr1h	equ	0xFE2
  7478                           fsr1l	equ	0xFE1
  7479                           bsr	equ	0xFE0
  7480                           indf2	equ	0xFDF
  7481                           postinc2	equ	0xFDE
  7482                           postdec2	equ	0xFDD
  7483                           fsr2h	equ	0xFDA
  7484                           fsr2l	equ	0xFD9
  7485                           status	equ	0xFD8
  7486                           
  7487 ;; *************** function _Timer1_isr *****************
  7488 ;; Defined at:
  7489 ;;		line 281 in file "mini-project-clock.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, status,2, status,0
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;Total ram usage:        0 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; This function calls:
  7510 ;;		Nothing
  7511 ;; This function is called by:
  7512 ;;		_hp_secs_count_isr
  7513 ;; This function uses a non-reentrant model
  7514 ;;
  7515                           
  7516                           	psect	text45
  7517  0025D4                     __ptext45:
  7518                           	opt stack 0
  7519  0025D4                     _Timer1_isr:
  7520                           	opt stack 22
  7521                           
  7522                           ;mini-project-clock.c: 282: if(MainTime.secs < 59)
  7523                           
  7524                           ;incstack = 0
  7525  0025D4  0E3B               	movlw	59
  7526  0025D6  0100               	movlb	0	; () banked
  7527  0025D8  6179               	cpfslt	(_MainTime+2)& (0+255),b	;volatile
  7528  0025DA  D003               	goto	i2l3117
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;mini-project-clock.c: 283: MainTime.secs++;
  7532  0025DC  0100               	movlb	0	; () banked
  7533  0025DE  2B79               	incf	(_MainTime+2)& (0+255),f,b	;volatile
  7534  0025E0  D01A               	goto	i2l3131
  7535  0025E2                     i2l3117:
  7536                           
  7537                           ; BSR set to: 0
  7538                           ;mini-project-clock.c: 284: else {
  7539                           ;mini-project-clock.c: 285: MainTime.secs = 0;
  7540  0025E2  0E00               	movlw	0
  7541  0025E4  0100               	movlb	0	; () banked
  7542  0025E6  6F79               	movwf	(_MainTime+2)& (0+255),b	;volatile
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;mini-project-clock.c: 286: if(MainTime.mins < 59)
  7546  0025E8  0E3B               	movlw	59
  7547  0025EA  0100               	movlb	0	; () banked
  7548  0025EC  6178               	cpfslt	(_MainTime+1)& (0+255),b	;volatile
  7549  0025EE  D003               	goto	i2l3123
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;mini-project-clock.c: 287: MainTime.mins++;
  7553  0025F0  0100               	movlb	0	; () banked
  7554  0025F2  2B78               	incf	(_MainTime+1)& (0+255),f,b	;volatile
  7555  0025F4  D010               	goto	i2l3131
  7556  0025F6                     i2l3123:
  7557                           
  7558                           ; BSR set to: 0
  7559                           ;mini-project-clock.c: 288: else {
  7560                           ;mini-project-clock.c: 289: MainTime.mins = 0;
  7561  0025F6  0E00               	movlw	0
  7562  0025F8  0100               	movlb	0	; () banked
  7563  0025FA  6F78               	movwf	(_MainTime+1)& (0+255),b	;volatile
  7564                           
  7565                           ; BSR set to: 0
  7566                           ;mini-project-clock.c: 290: if(MainTime.hrs < 23) {
  7567  0025FC  0E17               	movlw	23
  7568  0025FE  0100               	movlb	0	; () banked
  7569  002600  6177               	cpfslt	_MainTime& (0+255),b	;volatile
  7570  002602  D003               	goto	i2l3129
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;mini-project-clock.c: 291: MainTime.hrs++;
  7574  002604  0100               	movlb	0	; () banked
  7575  002606  2B77               	incf	_MainTime& (0+255),f,b	;volatile
  7576                           
  7577                           ;mini-project-clock.c: 292: }
  7578  002608  D006               	goto	i2l3131
  7579  00260A                     i2l3129:
  7580                           
  7581                           ; BSR set to: 0
  7582                           ;mini-project-clock.c: 293: else {
  7583                           ;mini-project-clock.c: 294: MainTime.hrs = 0;
  7584  00260A  0E00               	movlw	0
  7585  00260C  0100               	movlb	0	; () banked
  7586  00260E  6F77               	movwf	_MainTime& (0+255),b	;volatile
  7587                           
  7588                           ;mini-project-clock.c: 295: day_rollover = 1;
  7589  002610  0E01               	movlw	1
  7590  002612  0100               	movlb	0	; () banked
  7591  002614  6F6C               	movwf	_day_rollover& (0+255),b	;volatile
  7592  002616                     i2l3131:
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;mini-project-clock.c: 296: }
  7596                           ;mini-project-clock.c: 297: }
  7597                           ;mini-project-clock.c: 299: }
  7598                           ;mini-project-clock.c: 300: dp_mask ^= (1 << 2);
  7599  002616  0E04               	movlw	4
  7600  002618  1A33               	xorwf	_dp_mask,f,c	;volatile
  7601                           
  7602                           ; BSR set to: 0
  7603  00261A  0012               	return		;funcret
  7604  00261C                     __end_of_Timer1_isr:
  7605                           	opt stack 0
  7606                           pclatu	equ	0xFFB
  7607                           pclath	equ	0xFFA
  7608                           tblptru	equ	0xFF8
  7609                           tblptrh	equ	0xFF7
  7610                           tblptrl	equ	0xFF6
  7611                           tablat	equ	0xFF5
  7612                           prodh	equ	0xFF4
  7613                           prodl	equ	0xFF3
  7614                           intcon	equ	0xFF2
  7615                           intcon2	equ	0xFF1
  7616                           indf0	equ	0xFEF
  7617                           postinc0	equ	0xFEE
  7618                           fsr0h	equ	0xFEA
  7619                           fsr0l	equ	0xFE9
  7620                           wreg	equ	0xFE8
  7621                           postdec1	equ	0xFE5
  7622                           fsr1h	equ	0xFE2
  7623                           fsr1l	equ	0xFE1
  7624                           bsr	equ	0xFE0
  7625                           indf2	equ	0xFDF
  7626                           postinc2	equ	0xFDE
  7627                           postdec2	equ	0xFDD
  7628                           fsr2h	equ	0xFDA
  7629                           fsr2l	equ	0xFD9
  7630                           status	equ	0xFD8
  7631                           
  7632 ;; *************** function _RB0_isr *****************
  7633 ;; Defined at:
  7634 ;;		line 334 in file "mini-project-clock.c"
  7635 ;; Parameters:    Size  Location     Type
  7636 ;;		None
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;		None
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  1    wreg      void 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7652 ;;Total ram usage:        0 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_hp_secs_count_isr
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text46
  7662  00279C                     __ptext46:
  7663                           	opt stack 0
  7664  00279C                     _RB0_isr:
  7665                           	opt stack 22
  7666                           
  7667                           ;mini-project-clock.c: 336: if (mode < 2) {
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;incstack = 0
  7671  00279C  0E02               	movlw	2
  7672  00279E  0100               	movlb	0	; () banked
  7673  0027A0  616E               	cpfslt	_mode& (0+255),b	;volatile
  7674  0027A2  D003               	goto	i2l3137
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;mini-project-clock.c: 337: mode++;
  7678  0027A4  0100               	movlb	0	; () banked
  7679  0027A6  2B6E               	incf	_mode& (0+255),f,b	;volatile
  7680                           
  7681                           ;mini-project-clock.c: 338: } else {
  7682  0027A8  0012               	return	
  7683  0027AA                     i2l3137:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;mini-project-clock.c: 339: mode = 0;
  7687  0027AA  0E00               	movlw	0
  7688  0027AC  0100               	movlb	0	; () banked
  7689  0027AE  6F6E               	movwf	_mode& (0+255),b	;volatile
  7690  0027B0  0012               	return	
  7691  0027B2                     __end_of_RB0_isr:
  7692                           	opt stack 0
  7693                           pclatu	equ	0xFFB
  7694                           pclath	equ	0xFFA
  7695                           tblptru	equ	0xFF8
  7696                           tblptrh	equ	0xFF7
  7697                           tblptrl	equ	0xFF6
  7698                           tablat	equ	0xFF5
  7699                           prodh	equ	0xFF4
  7700                           prodl	equ	0xFF3
  7701                           intcon	equ	0xFF2
  7702                           intcon2	equ	0xFF1
  7703                           indf0	equ	0xFEF
  7704                           postinc0	equ	0xFEE
  7705                           fsr0h	equ	0xFEA
  7706                           fsr0l	equ	0xFE9
  7707                           wreg	equ	0xFE8
  7708                           postdec1	equ	0xFE5
  7709                           fsr1h	equ	0xFE2
  7710                           fsr1l	equ	0xFE1
  7711                           bsr	equ	0xFE0
  7712                           indf2	equ	0xFDF
  7713                           postinc2	equ	0xFDE
  7714                           postdec2	equ	0xFDD
  7715                           fsr2h	equ	0xFDA
  7716                           fsr2l	equ	0xFD9
  7717                           status	equ	0xFD8
  7718                           pclatu	equ	0xFFB
  7719                           pclath	equ	0xFFA
  7720                           tblptru	equ	0xFF8
  7721                           tblptrh	equ	0xFF7
  7722                           tblptrl	equ	0xFF6
  7723                           tablat	equ	0xFF5
  7724                           prodh	equ	0xFF4
  7725                           prodl	equ	0xFF3
  7726                           intcon	equ	0xFF2
  7727                           intcon2	equ	0xFF1
  7728                           indf0	equ	0xFEF
  7729                           postinc0	equ	0xFEE
  7730                           fsr0h	equ	0xFEA
  7731                           fsr0l	equ	0xFE9
  7732                           wreg	equ	0xFE8
  7733                           postdec1	equ	0xFE5
  7734                           fsr1h	equ	0xFE2
  7735                           fsr1l	equ	0xFE1
  7736                           bsr	equ	0xFE0
  7737                           indf2	equ	0xFDF
  7738                           postinc2	equ	0xFDE
  7739                           postdec2	equ	0xFDD
  7740                           fsr2h	equ	0xFDA
  7741                           fsr2l	equ	0xFD9
  7742                           status	equ	0xFD8
  7743                           
  7744                           	psect	rparam
  7745  0000                     pclatu	equ	0xFFB
  7746                           pclath	equ	0xFFA
  7747                           tblptru	equ	0xFF8
  7748                           tblptrh	equ	0xFF7
  7749                           tblptrl	equ	0xFF6
  7750                           tablat	equ	0xFF5
  7751                           prodh	equ	0xFF4
  7752                           prodl	equ	0xFF3
  7753                           intcon	equ	0xFF2
  7754                           intcon2	equ	0xFF1
  7755                           indf0	equ	0xFEF
  7756                           postinc0	equ	0xFEE
  7757                           fsr0h	equ	0xFEA
  7758                           fsr0l	equ	0xFE9
  7759                           wreg	equ	0xFE8
  7760                           postdec1	equ	0xFE5
  7761                           fsr1h	equ	0xFE2
  7762                           fsr1l	equ	0xFE1
  7763                           bsr	equ	0xFE0
  7764                           indf2	equ	0xFDF
  7765                           postinc2	equ	0xFDE
  7766                           postdec2	equ	0xFDD
  7767                           fsr2h	equ	0xFDA
  7768                           fsr2l	equ	0xFD9
  7769                           status	equ	0xFD8
  7770                           
  7771                           	psect	temp
  7772  000038                     btemp:
  7773                           	opt stack 0
  7774  000038                     	ds	1
  7775  0000                     int$flags	set	btemp
  7776                           pclatu	equ	0xFFB
  7777                           pclath	equ	0xFFA
  7778                           tblptru	equ	0xFF8
  7779                           tblptrh	equ	0xFF7
  7780                           tblptrl	equ	0xFF6
  7781                           tablat	equ	0xFF5
  7782                           prodh	equ	0xFF4
  7783                           prodl	equ	0xFF3
  7784                           intcon	equ	0xFF2
  7785                           intcon2	equ	0xFF1
  7786                           indf0	equ	0xFEF
  7787                           postinc0	equ	0xFEE
  7788                           fsr0h	equ	0xFEA
  7789                           fsr0l	equ	0xFE9
  7790                           wreg	equ	0xFE8
  7791                           postdec1	equ	0xFE5
  7792                           fsr1h	equ	0xFE2
  7793                           fsr1l	equ	0xFE1
  7794                           bsr	equ	0xFE0
  7795                           indf2	equ	0xFDF
  7796                           postinc2	equ	0xFDE
  7797                           postdec2	equ	0xFDD
  7798                           fsr2h	equ	0xFDA
  7799                           fsr2l	equ	0xFD9
  7800                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    61
    Data        4
    BSS         28
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      55
    BANK0           160     10      36
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    SetYear@dy	PTR struct . size(2) Largest target is 5
		 -> MainDate(BANK0[5]), 

    SetMonth@dm	PTR struct . size(2) Largest target is 5
		 -> MainDate(BANK0[5]), 

    SetDay@dd	PTR struct . size(2) Largest target is 5
		 -> MainDate(BANK0[5]), 

    SetHrs@th	PTR struct . size(2) Largest target is 3
		 -> Alarm1Time(BANK0[3]), MainTime(BANK0[3]), 

    SetMins@tm	PTR struct . size(2) Largest target is 3
		 -> Alarm1Time(BANK0[3]), MainTime(BANK0[3]), 

    SetSecs@ts	PTR struct . size(2) Largest target is 3
		 -> Alarm1Time(BANK0[3]), MainTime(BANK0[3]), 

    Num2Disp@time	PTR const unsigned char  size(3) Largest target is 131071
		 -> ROM(CODE[131071]), main@temperature(BANK0[1]), Alarm1Time.secs(BANK0[1]), Alarm1Time.mins(BANK0[1]), 
		 -> Alarm1Time.hrs(BANK0[1]), Alarm1Time(BANK0[3]), MainDate.year_short(BANK0[1]), MainDate.month(BANK0[1]), 
		 -> MainDate.day(BANK0[1]), MainDate(BANK0[5]), MainTime.secs(BANK0[1]), MainTime.mins(BANK0[1]), 
		 -> MainTime.hrs(BANK0[1]), MainTime(BANK0[3]), 


Critical Paths under _main in COMRAM

    _main->_Num2Disp
    _SetMenu->_Num2Disp
    _YearFlash->_Delay10KTCYx
    _SetYear->_Delay10KTCYx
    _SetMonth->_Delay10KTCYx
    _SetDay->_CalcLeapYear
    _SetAlarm1->_Num2Disp
    _SetSecs->_Delay10KTCYx
    _SetMins->_Delay10KTCYx
    _SetHrs->_Delay10KTCYx
    _SecsFlash->_Delay10KTCYx
    _MinsFlash->_Delay10KTCYx
    _HrsFlash->_Delay10KTCYx
    _MonthFlash->_Delay10KTCYx
    _DayFlash->_Delay10KTCYx
    _Alarm1Flash->_Delay10KTCYx
    _DegreesFlash->_Delay10KTCYx
    _CurrentDisplay->_Num2Disp
    _Num2Disp->___awdiv
    _CalcDate->_CalcLeapYear
    _CalcLeapYear->___lwmod
    _BootTest->_Delay10KTCYx

Critical Paths under _lp_isr in COMRAM

    _Timer0_isr->i1_WriteTimer0

Critical Paths under _hp_secs_count_isr in COMRAM

    _hp_secs_count_isr->i2_WriteTimer1

Critical Paths under _main in BANK0

    _main->_SetMenu
    _SetMenu->_Num2Disp
    _SetAlarm1->_Num2Disp
    _CurrentDisplay->_Num2Disp

Critical Paths under _lp_isr in BANK0

    None.

Critical Paths under _hp_secs_count_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _lp_isr in BANK1

    None.

Critical Paths under _hp_secs_count_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _lp_isr in BANK2

    None.

Critical Paths under _hp_secs_count_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _lp_isr in BANK3

    None.

Critical Paths under _hp_secs_count_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _lp_isr in BANK4

    None.

Critical Paths under _hp_secs_count_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _lp_isr in BANK5

    None.

Critical Paths under _hp_secs_count_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _lp_isr in BANK6

    None.

Critical Paths under _hp_secs_count_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _lp_isr in BANK7

    None.

Critical Paths under _hp_secs_count_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _lp_isr in BANK8

    None.

Critical Paths under _hp_secs_count_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _lp_isr in BANK9

    None.

Critical Paths under _hp_secs_count_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _lp_isr in BANK10

    None.

Critical Paths under _hp_secs_count_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _lp_isr in BANK11

    None.

Critical Paths under _hp_secs_count_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _lp_isr in BANK12

    None.

Critical Paths under _hp_secs_count_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _lp_isr in BANK13

    None.

Critical Paths under _hp_secs_count_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _lp_isr in BANK14

    None.

Critical Paths under _hp_secs_count_isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _lp_isr in BANK15

    None.

Critical Paths under _hp_secs_count_isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   17705
                                              8 BANK0      2     2      0
                           _BootTest
                            _BusyADC
                           _CalcDate
                        _ConfigureIO
                         _ConvertADC
                     _CurrentDisplay
                       _DegreesFlash
                       _Delay10KTCYx
                           _Num2Disp
                         _PB1pressed
                            _ReadADC
                            _SetMenu
                           _StartADC
                        _StartTimer0
                        _StartTimer1
                           _Switches
                        _WriteTimer0
                        _WriteTimer1
               _enable_PB1_interrupt
              _enable_interrupts_all
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts_all                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _enable_PB1_interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteTimer1                                          4     2      2     171
                                             39 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _WriteTimer0                                          4     2      2     171
                                             39 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _StartTimer1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartTimer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetMenu                                              3     3      0   10395
                                              5 BANK0      3     3      0
                        _Alarm1Flash
                           _DayFlash
                           _HrsFlash
                          _MinsFlash
                         _MonthFlash
                           _Num2Disp
                          _SecsFlash
                          _SetAlarm1
                             _SetDay
                             _SetHrs
                            _SetMins
                           _SetMonth
                            _SetSecs
                            _SetYear
                           _Switches
                          _YearFlash
 ---------------------------------------------------------------------------------
 (2) _YearFlash                                            0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _SetYear                                              4     2      2     350
                                             41 COMRAM     4     2      2
                       _Delay10KTCYx
                         _PB1pressed
                         _PB2pressed
 ---------------------------------------------------------------------------------
 (2) _SetMonth                                             3     1      2     262
                                             41 COMRAM     3     1      2
                       _Delay10KTCYx
                         _PB1pressed
                         _PB2pressed
 ---------------------------------------------------------------------------------
 (2) _SetDay                                               4     2      2    1359
                                              0 BANK0      4     2      2
                       _CalcLeapYear
                       _Delay10KTCYx
                         _PB1pressed
                         _PB2pressed
 ---------------------------------------------------------------------------------
 (2) _SetAlarm1                                            0     0      0    4179
                       _Delay10KTCYx
                           _HrsFlash
                          _MinsFlash
                           _Num2Disp
                         _PB1pressed
                         _PB2pressed
                          _SecsFlash
                             _SetHrs
                            _SetMins
                            _SetSecs
                           _Switches
 ---------------------------------------------------------------------------------
 (1) _Switches                                             3     3      0      72
                                             39 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _SetSecs                                              3     1      2     326
                                             41 COMRAM     3     1      2
                       _Delay10KTCYx
                         _PB1pressed
                         _PB2pressed
 ---------------------------------------------------------------------------------
 (2) _SetMins                                              3     1      2     326
                                             41 COMRAM     3     1      2
                       _Delay10KTCYx
                         _PB1pressed
                         _PB2pressed
 ---------------------------------------------------------------------------------
 (2) _SetHrs                                               3     1      2     326
                                             41 COMRAM     3     1      2
                       _Delay10KTCYx
                         _PB1pressed
                         _PB2pressed
 ---------------------------------------------------------------------------------
 (3) _PB2pressed                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PB1pressed                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SecsFlash                                            0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (3) _MinsFlash                                            0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (3) _HrsFlash                                             0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _MonthFlash                                           0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _DayFlash                                             0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (2) _Alarm1Flash                                          0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                             39 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _DegreesFlash                                         0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (1) _CurrentDisplay                                       1     1      0    3072
                                              5 BANK0      1     1      0
                           _Num2Disp
 ---------------------------------------------------------------------------------
 (3) _Num2Disp                                             6     3      3    3041
                                             47 COMRAM     1     1      0
                                              0 BANK0      5     2      3
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     587
                                             39 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     599
                                             39 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureIO                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CalcDate                                             0     0      0     609
                       _CalcLeapYear
 ---------------------------------------------------------------------------------
 (3) _CalcLeapYear                                         4     2      2     609
                                             44 COMRAM     4     2      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     415
                                             39 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BootTest                                             0     0      0      22
                       _Delay10KTCYx
 ---------------------------------------------------------------------------------
 (3) _Delay10KTCYx                                         2     2      0      22
                                             39 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _lp_isr                                              17    17      0      93
                                             22 COMRAM    17    17      0
                         _Timer0_isr
 ---------------------------------------------------------------------------------
 (6) _Timer0_isr                                           0     0      0      93
                      i1_WriteTimer0
 ---------------------------------------------------------------------------------
 (7) i1_WriteTimer0                                        4     2      2      93
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _hp_secs_count_isr                                   14    14      0      93
                                              4 COMRAM    14    14      0
                            _RB0_isr
                         _Timer1_isr
                      i2_WriteTimer1
 ---------------------------------------------------------------------------------
 (9) i2_WriteTimer1                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _Timer1_isr                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RB0_isr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BootTest
     _Delay10KTCYx
   _BusyADC
   _CalcDate
     _CalcLeapYear
       ___lwmod
   _ConfigureIO
   _ConvertADC
   _CurrentDisplay
     _Num2Disp
       ___awdiv
       ___awmod
   _DegreesFlash
     _Delay10KTCYx
   _Delay10KTCYx
   _Num2Disp
     ___awdiv
     ___awmod
   _PB1pressed
   _ReadADC
   _SetMenu
     _Alarm1Flash
       _Delay10KTCYx
     _DayFlash
       _Delay10KTCYx
     _HrsFlash
       _Delay10KTCYx
     _MinsFlash
       _Delay10KTCYx
     _MonthFlash
       _Delay10KTCYx
     _Num2Disp
       ___awdiv
       ___awmod
     _SecsFlash
       _Delay10KTCYx
     _SetAlarm1
       _Delay10KTCYx
       _HrsFlash
         _Delay10KTCYx
       _MinsFlash
         _Delay10KTCYx
       _Num2Disp
         ___awdiv
         ___awmod
       _PB1pressed
       _PB2pressed
       _SecsFlash
         _Delay10KTCYx
       _SetHrs
         _Delay10KTCYx
         _PB1pressed
         _PB2pressed
       _SetMins
         _Delay10KTCYx
         _PB1pressed
         _PB2pressed
       _SetSecs
         _Delay10KTCYx
         _PB1pressed
         _PB2pressed
       _Switches
     _SetDay
       _CalcLeapYear
         ___lwmod
       _Delay10KTCYx
       _PB1pressed
       _PB2pressed
     _SetHrs
       _Delay10KTCYx
       _PB1pressed
       _PB2pressed
     _SetMins
       _Delay10KTCYx
       _PB1pressed
       _PB2pressed
     _SetMonth
       _Delay10KTCYx
       _PB1pressed
       _PB2pressed
     _SetSecs
       _Delay10KTCYx
       _PB1pressed
       _PB2pressed
     _SetYear
       _Delay10KTCYx
       _PB1pressed
       _PB2pressed
     _Switches
     _YearFlash
       _Delay10KTCYx
   _StartADC
   _StartTimer0
   _StartTimer1
   _Switches
   _WriteTimer0
   _WriteTimer1
   _enable_PB1_interrupt
   _enable_interrupts_all

 _lp_isr (ROOT)
   _Timer0_isr
     i1_WriteTimer0

 _hp_secs_count_isr (ROOT)
   _RB0_isr
   _Timer1_isr
   i2_WriteTimer1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           EF      0       0      33        0.0%
BANK14              EF      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      24       5       22.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      37       1       58.5%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5B       6        0.0%
DATA                 0      0      5B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Fri Dec 09 16:52:53 2016

           __end_of_DaysInMonth 1027                    ___awdiv@sign 002D                              bsr 000FE0  
                   __CFG_BORV$0 000000            _enable_PB1_interrupt 282A                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000                    __CFG_CP4$OFF 000000                    __CFG_CP5$OFF 000000  
                  __CFG_CP6$OFF 000000                    __CFG_CP7$OFF 000000                             l281 114A  
                           l273 109A                             l292 1254                             l268 1042  
                           l285 11A6                             l277 10F2                             l289 11FE  
                           l397 1A06                             l910 2654                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000            __size_of_WriteTimer0 0012            __size_of_WriteTimer1 0012  
                  ___awmod@sign 002D                             wreg 000FE8                      _Alarm2Date 0060  
                  __CFG_MODE$MC 000000                     ?_PB1pressed 0001                      _Alarm1Time 0074  
                    _Alarm2Time 0065                     ?_PB2pressed 0001                    __CFG_LVP$OFF 000000  
                  __CFG_WDT$OFF 000000                 __end_of_RB0_isr 27B2                            l2201 26F8  
                          l2205 26FC                            l2209 2788                            l2321 2636  
                          l2225 26C4                            l2217 26A6                            l2411 1E64  
                          l2403 1E34                            l2325 264A                            l2317 262A  
                          l3301 2102                            l2229 26C8                            l2319 2632  
                          l3305 2110                            l3321 24CA                            l2193 26DA  
                          l3341 2510                            l3333 24F8                            l3325 24D8  
                          l3317 24BE                            l3501 1A74                            l3421 151A  
                          l3413 14F2                            l3405 1490                            l3327 24E0  
                          l2535 1FDC                            l2527 1FB4                            l2519 1F88  
                          l3431 1740                            l3273 20AA                            l3329 24E4  
                          l3337 2502                            l3513 1ADA                            l3505 1A96  
                          l2473 1F2C                            l2465 1EFC                            l2457 1EC8  
                          l3441 1780                            l3433 1746                            l2555 25C8  
                          l2563 25D0                            l3355 1B80                            l2395 1E00  
                          l2715 1D9C                            l2707 1D6C                            l3531 108E  
                          l3285 20D0                            l3509 1AB8                            l3453 17E2  
                          l3445 17A8                            l3437 176E                            l3381 13C2  
                          l3373 1360                            l3541 10E6                            l3621 160C  
                          l2559 25CC                            l3287 20D8                            l3279 20BA  
                          l3519 1B04                            l3455 17EE                            l3447 17B4  
                          l3439 177A                            l3551 113E                            l3527 1066  
                          l3297 20F8                            l3289 20DC                            l3473 185A  
                          l3465 182C                            l3457 17F4                            l3449 17BA  
                          l2761 1920                            l3561 119A                            l3537 10BE  
                          l3571 11F2                            l3547 1116                            l3651 168A  
                          l3635 164C                            l2933 1C72                            l3493 1A30  
                          l3469 183A                            l3477 1884                            l3485 18BA  
                          l3389 13EA                            l3397 1430                            l3581 124A  
                          l3557 116E                            l3637 1652                            l2951 1CE2  
                          l3479 1890                            l3583 1258                            l3567 11CA  
                          l3663 16B0                            l2945 1CA8                            l3497 1A52  
                          l3489 1A0E                            l2777 19B6                            l2769 196E  
                          l3585 125E                            l3577 1222                            l3681 1708  
                          l3649 1684                            l3657 16A2                            l2939 1C86  
                          l2947 1CBA                            l2699 1D38                            l3587 1262  
                          l3595 12A4                            l2957 1CF6                            l3589 127A  
                          l3597 12D4                            l3685 1732                            u1320 26BC  
                          u1290 26F0                            _LATF 000F8E                            u2340 281E  
                          u2700 1BDA                            u3167 278E                            u2707 1BD0  
                          u2670 1B4E                            u2690 1BA0                            u2677 1B44  
                          u2697 1B96                    _CalcLeapYear 2578                            _main 1560  
                          _mode 006E                            fsr0h 000FEA                            fsr1h 000FE2  
                          indf0 000FEF                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 0038                 _DaysInMonthLeap 1027          __size_ofi2_WriteTimer1 0012  
                          pclat 000FFA             i1WriteTimer0@timer0 0013                            prodh 000FF4  
                          prodl 000FF3                            start 00B0                   __CFG_IESO$OFF 000000  
                 __CFG_MCLRE$ON 000000                    ___param_bank 000010                 __end_of_BusyADC 2822  
               __end_of_ReadADC 2816         __size_of_CurrentDisplay 0126                     _Alarm1Flash 23C8  
           __end_of_ConfigureIO 275A                 __end_of_SetMenu 12E0                 __end_of_SetMins 1F60  
               __end_of_SetSecs 1E98                 __end_of_SetYear 1A08           ?_enable_PB1_interrupt 0001  
                 __CFG_WAIT$OFF 000000                           ?_main 0001                   i1_WriteTimer0 27D6  
               __end_of___awdiv 211A                 __end_of___awmod 251A                           _T0CON 000FD5  
               ___awdiv@divisor 002A                           _T1CON 000FCD                           i1l213 0068  
                         i1l226 251C                           i1l228 2528                           i1l229 2536  
               __end_of___lwmod 265E                           i2l209 205A                 ___awdiv@counter 002C  
                         _TMR0H 000FD7                           _TMR1H 000FCF                           _TMR0L 000FD6  
                         _TMR1L 000FCE                           _PORTC 000F82                           _PORTH 000F87  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISF 000F97                           _TRISH 000F99                           _TRISJ 000F9A  
         __size_of_Delay10KTCYx 0016                   __CFG_PWRT$OFF 000000                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
                 __CFG_WRT4$OFF 000000                   __CFG_WRT5$OFF 000000                   __CFG_WRT6$OFF 000000  
                 __CFG_WRT7$OFF 000000                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000  
                __CFG_EBTR4$OFF 000000                  __CFG_EBTR5$OFF 000000                  __CFG_EBTR6$OFF 000000  
                __CFG_EBTR7$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000                           _index 006D  
                    _ConvertADC 2836                __end_of_CalcDate 1D08                  __CFG_BOREN$OFF 000000  
                         tablat 000FF5                __end_of_DayFlash 23C8                           status 000FD8  
                   _DaysInMonth 101A                __end_of_DispNums 103E                 __initialization 265E  
              __end_of_BootTest 2742                    __end_of_main 173E             __size_of_PB1pressed 0034  
              __end_of_HrsFlash 2356             __size_of_PB2pressed 0034                    _Delay10KTCYx 2786  
                    SetMonth@dm 002A                __end_of_Num2Disp 1C32                  ?i1_WriteTimer0 0013  
                        ??_main 0031                   i2_WriteTimer1 27E8                __end_of_SetMonth 1DD0  
                 __activetblptr 000003                       ??_RB0_isr 0001                __end_of_StartADC 2808  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
       __end_of_DaysInMonthLeap 1034                          _ADRESH 000FC4                          _ADRESL 000FC3  
              ___awdiv@dividend 0028                __end_of_Switches 2722           __size_of_DegreesFlash 0070  
                        i1l3151 255C                          i1l3145 2540                          i1l3149 2546  
               __CFG_BBSIZ$BB2K 000000                          i2l3123 25F6                          i2l3131 2616  
                        i2l3117 25E2                          i2l3137 27AA                          i2l3129 260A  
                        i2l3253 2050                      _MonthFlash 211A                       ??_BusyADC 0028  
                     ??_ReadADC 002A              __size_of_MinsFlash 0072                     _ConfigureIO 2742  
                     ??_SetMenu 007F                       ??_SetMins 002C                       ??_SetSecs 002C  
                        _SetDay 12E0                  __CFG_XINST$OFF 000000                       ??_SetYear 002C  
                        _SetHrs 1F60              __size_of_SecsFlash 0072              __size_of_SetAlarm1 019A  
                    _Timer0_isr 251A                      _Timer1_isr 25D4                       ??___awdiv 002C  
                     ??___awmod 002C          ??_enable_PB1_interrupt 0028                       ??___lwmod 002C  
                        _lp_isr 0018                          clear_0 2684                ___awdiv@quotient 002E  
               ___awmod@divisor 002A                  ?i2_WriteTimer1 0001                 ___awmod@counter 002C  
            __size_of_YearFlash 0072                    _DegreesFlash 243A                    __pdataCOMRAM 0031  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                     ?_ConvertADC 0001                    Num2Disp@tens 007D  
                  Num2Disp@time 007A                      __accesstop 0060         __end_of__initialization 268E  
       ??_enable_interrupts_all 0028                   ___rparam_used 000001                    Switches@temp 0028  
             __end_of_DispChars 101A                  _CurrentDisplay 1A08                  __pcstackCOMRAM 0001  
                 ??_StartTimer0 0028                   ??_StartTimer1 0028                 ??i1_WriteTimer0 0015  
                     ?_CalcDate 0001                       ?_DayFlash 0001               __end_of_MinsFlash 22E4  
             __end_of_SecsFlash 2272               __end_of_SetAlarm1 18D8                    ??_PB1pressed 0028  
                  ??_PB2pressed 0028                       ?_BootTest 0001                      __pbssBANK0 0060  
                     ?_HrsFlash 0001               _hp_secs_count_isr 0008                       ?_Num2Disp 007A  
                   ?_MonthFlash 0001                      __pnvCOMRAM 0037              ?_hp_secs_count_isr 0001  
             __end_of_YearFlash 2200          __end_of_CurrentDisplay 1B2E                       ?_SetMonth 002A  
                       ?_SetDay 007A                         ?_SetHrs 002A                     ?_Timer0_isr 0001  
                   ?_Timer1_isr 0001                    ?_Alarm1Flash 0001             ??_hp_secs_count_isr 0005  
                     ?_StartADC 0001                 ??i2_WriteTimer1 0003              __end_of_PB1pressed 2700  
              WriteTimer0@timer 002A              __end_of_PB2pressed 26CC                WriteTimer1@timer 002A  
                 ??_WriteTimer0 002A                   ??_WriteTimer1 002A                         ?_lp_isr 0001  
           __size_of_ConvertADC 0004                       ?_Switches 0001                      ??_CalcDate 0031  
           CurrentDisplay@index 007F                      ??_DayFlash 002A             __end_of_StartTimer0 2786  
           __end_of_StartTimer1 2770                    _day_rollover 006C                         _RB0_isr 279C  
                    ??_BootTest 002A       __end_of_hp_secs_count_isr 2096                      ??_HrsFlash 002A  
                    ??_Num2Disp 0030                         _BusyADC 2816                         _ReadADC 2808  
               ?_CurrentDisplay 0001             i2WriteTimer1@timer1 0001                      ??_SetMonth 002C  
                       __Hparam 0000                         _SetMenu 1040                         _SetMins 1E98  
                       _SetSecs 1DD0                         _SetYear 18D8                         __Lparam 0000  
               __size_of_SetDay 0280                 __size_of_SetHrs 00A8                      ??_StartADC 0028  
                       ___awdiv 2096                         ___awmod 24AA                         ___lwmod 261C  
                  __psmallconst 1000                 __CFG_STVREN$OFF 000000                         __pcinit 265E  
                    ??_Switches 0028                 __size_of_lp_isr 0098                         __ramtop 1000  
                       __ptext0 1560                         __ptext1 2822                         __ptext2 282A  
                       __ptext3 27B2                         __ptext4 27C4                         __ptext5 275A  
                       __ptext6 2770                         __ptext7 27FA                         _disp_U1 0031  
                       __ptext8 1040                         _disp_U2 0032                         __ptext9 218E  
                       _dp_mask 0033                       _T0CONbits 000FD5                       _T1CONbits 000FCD  
           __size_of_MonthFlash 0074                ___awmod@dividend 0028             __end_of_WriteTimer0 27D6  
           __end_of_WriteTimer1 27C4             __size_of_Timer0_isr 005E             __size_of_Timer1_isr 0048  
                __pintcode_body 2008            end_of_initialization 268E                         int_func 2008  
                  ?_ConfigureIO 0001                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE                     _StartTimer0 2770  
                   _StartTimer1 275A                       _PORTBbits 000F81                       _PORTJbits 000F88  
                 Num2Disp@units 007E      __size_of_hp_secs_count_isr 208E                    ??_ConvertADC 0028  
                 Switches@temp1 002A                   Switches@temp2 0029  __size_of_enable_interrupts_all 0008  
            i1WriteTimer0@timer 0015   __end_of_enable_interrupts_all 282A                  __end_of_SetDay 1560  
                __end_of_SetHrs 2008                       _DispChars 1001            __size_of_Alarm1Flash 0072  
                 __pidataCOMRAM 2832   __size_of_enable_PB1_interrupt 0008                     _WriteTimer0 27C4  
                   _WriteTimer1 27B2              __end_of_ConvertADC 283A                  __end_of_lp_isr 00B0  
             __size_of_CalcDate 00D6             start_initialization 265E                       SetMins@tm 002A  
             __size_of_DayFlash 0072                       SetSecs@ts 002A                       SetYear@dy 002A  
                     _MinsFlash 2272                       _SecsFlash 2200                   ?_CalcLeapYear 002D  
                     _SetAlarm1 173E               __size_of_BootTest 0020                    ??_MonthFlash 002A  
             __size_of_HrsFlash 0072               __size_of_Num2Disp 0104                        ??_SetDay 007C  
                      ??_SetHrs 002C                    ??_Timer0_isr 0017                    ??_Timer1_isr 0001  
                     _YearFlash 218E               __size_of_SetMonth 00C8                __CFG_LPT1OSC$OFF 000000  
                      ??_lp_isr 0017               __size_of_StartADC 000E           __end_ofi1_WriteTimer0 27E8  
             __size_of_Switches 0022              __end_of_MonthFlash 218E                        ?_RB0_isr 0001  
                   __pbssCOMRAM 0035                   __pcstackBANK0 007A              __end_of_Timer0_isr 2578  
                    ?_MinsFlash 0001              __end_of_Timer1_isr 261C                  ??_CalcLeapYear 002F  
              ??_CurrentDisplay 0031                      ?_SecsFlash 0001                      ?_SetAlarm1 0001  
                      ?_BusyADC 0001                        ?_ReadADC 0028                        ?_SetMenu 0001  
                      ?_SetMins 002A                        ?_SetSecs 002A                        ?_SetYear 002A  
             __CFG_CCP2MX$PORTC 000000                       __pintcode 0008                      ?_YearFlash 0001  
          __size_of_ConfigureIO 0018                        ?___awdiv 0028                        ?___awmod 0028  
                     _disp_LEDS 0037                   ?_Delay10KTCYx 0001                        ?___lwmod 0028  
                   __pintcodelo 0018           __end_ofi2_WriteTimer1 27FA                     __smallconst 1000  
             WriteTimer0@timer0 0028               WriteTimer1@timer1 0028                 _multiplex_count 0034  
            i2WriteTimer1@timer 0003                       _ms_count0 0068                       _ms_count1 006A  
                      _LATAbits 000F89                        _LATHbits 000F90                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                        _PIR1bits 000F9E           __CFG_DATABW$DATA16BIT 000000  
                      _RCONbits 000FD0                __CFG_WDTPS$32768 000000                  ??_Delay10KTCYx 0028  
              CalcLeapYear@year 002D                    ?_StartTimer0 0001                    ?_StartTimer1 0001  
             __CFG_ECCPMX$PORTE 000000                        _CalcDate 1C32                      _ADCON0bits 000FC2  
                 ?_DegreesFlash 0001                        _DayFlash 2356                        _Alarm1On 0035  
                      _Alarm2On 0036                Delay10KTCYx@unit 0029                __size_of_RB0_isr 0016  
                      _DispNums 1034                        _BootTest 2722                     _INTCON2bits 000FF1  
                      _MainDate 006F                     ??_MinsFlash 002A                       copy_data0 2672  
                      SetDay@dd 007A                        _MainTime 0077                     ??_SecsFlash 002A  
                   ??_SetAlarm1 0031                        _HrsFlash 22E4                        SetHrs@th 002A  
                      _Num2Disp 1B2E                __size_of_BusyADC 000C                __size_of_ReadADC 000E  
                      _SetMonth 1D08                        __Hrparam 0000                        __Lrparam 0000  
              __size_of_SetMenu 02A0                __size_of_SetMins 00C8                __size_of_SetSecs 00C8  
              __size_of_SetYear 0130                     ??_YearFlash 002A                        _StartADC 27FA  
              __size_of___awdiv 0084                __size_of___awmod 0070            __end_of_CalcLeapYear 25D4  
              __size_of___lwmod 0042                    ?_WriteTimer0 0028                    ?_WriteTimer1 0028  
                      _Switches 2700                  ??_DegreesFlash 002A                        __ptext10 18D8  
                      __ptext11 1D08                        __ptext20 2200                        __ptext12 12E0  
                      __ptext21 2272                        __ptext13 173E                        __ptext30 24AA  
                      __ptext22 22E4                        __ptext14 2700                        __ptext31 2096  
                      __ptext23 211A                        __ptext15 1DD0                        __ptext32 2836  
                      __ptext24 2356                        __ptext16 1E98                        __ptext41 251A  
                      __ptext33 2742                        __ptext25 23C8                        __ptext17 1F60  
                      __ptext42 27D6                        __ptext34 1C32                        __ptext26 2808  
                      __ptext18 2698                        __ptext35 2578                        __ptext27 243A  
                      __ptext19 26CC                        __ptext44 27E8                        __ptext36 261C  
                      __ptext28 1A08                        __ptext45 25D4                        __ptext37 2816  
                      __ptext29 1B2E                        __ptext46 279C                        __ptext38 2722  
                      __ptext39 2786    __end_of_enable_PB1_interrupt 2832                   __size_of_main 01DE  
                 ??_Alarm1Flash 002A           _enable_interrupts_all 2822                        int$flags 0038  
                 main@ADC_value 0083                 main@temperature 0082           __CFG_ADDRBW$ADDR20BIT 000000  
                    _INTCONbits 000FF2                      _PB1pressed 26CC                      _PB2pressed 2698  
          __end_of_Delay10KTCYx 279C                        intlevel1 0000                        intlevel2 0000  
              ___lwmod@dividend 0028             __end_of_Alarm1Flash 243A            __size_of_StartTimer0 0016  
          __size_of_StartTimer1 0016                 ___lwmod@divisor 002A                 ___lwmod@counter 002C  
        __size_ofi1_WriteTimer0 0012            __end_of_DegreesFlash 24AA                   ??_ConfigureIO 0028  
         __size_of_CalcLeapYear 005C          ?_enable_interrupts_all 0001  
